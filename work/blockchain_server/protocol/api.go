// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

/*
Package protocol is a generated protocol buffer package.

It is generated from these files:
	api.proto
	config.proto
	obj.proto
	status.proto

It has these top-level messages:
	ReqGetPaiBan
	RespGetPaiBan
	ReqSetPaiBan
	RespSetPaiBan
	ReqGetMoney
	RespGetMoney
	ReqGetEthBalance
	RespGetEthBalance
	ReqSchedule
	RespSchedule
	ReqGetSchedue
	RespGetSchedue
	ReqSetAccount
	RespSetAccount
	ReqGetAccount
	RespGetAccount
	ReqGetAllSchedule
	RespGetAllSchedule
	ReqGetQuo
	RespGetQuo
	ReqResetQuo
	RespResetQuo
	ReqGetTrans
	RespGetTrans
	ReqPing
	RespPing
	ReqNewScheduleId
	RespNewScheduleId
	ReqGetABBySh
	RespGetABBySh
	ReqGetABById
	RespGetABById
	ReqThreeSetBill
	RespThreeSetBill
	ReqConfirm
	RespConfirm
	ReqGetAccountBook
	RespGetAccountBook
	ReqGetAllIncome
	RespGetAllIncome
	ReqGetByHash
	RespGetByHash
	CReloadConfig
	SReloadConfig
	CReloadDeploy
	SReloadDeploy
	ReqGetConfig
	RespGetConfig
	ReqSetConfig
	RespSetConfig
	UserAccount
	AccountBook
	OrderDliver
	Friend
	Sd
	PaiBan
	Rs
	Bill
*/
package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 客户端 查询排班
type ReqGetPaiBan struct {
	OwnerAddress string `protobuf:"bytes,1,opt,name=OwnerAddress" json:"OwnerAddress,omitempty"`
	ScheduleId   string `protobuf:"bytes,2,opt,name=ScheduleId" json:"ScheduleId,omitempty"`
}

func (m *ReqGetPaiBan) Reset()                    { *m = ReqGetPaiBan{} }
func (m *ReqGetPaiBan) String() string            { return proto.CompactTextString(m) }
func (*ReqGetPaiBan) ProtoMessage()               {}
func (*ReqGetPaiBan) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ReqGetPaiBan) GetOwnerAddress() string {
	if m != nil {
		return m.OwnerAddress
	}
	return ""
}

func (m *ReqGetPaiBan) GetScheduleId() string {
	if m != nil {
		return m.ScheduleId
	}
	return ""
}

// 服务端 查询排班
type RespGetPaiBan struct {
	StatusCode uint32    `protobuf:"varint,1,opt,name=StatusCode" json:"StatusCode,omitempty"`
	PaiBans    []*PaiBan `protobuf:"bytes,2,rep,name=PaiBans" json:"PaiBans,omitempty"`
}

func (m *RespGetPaiBan) Reset()                    { *m = RespGetPaiBan{} }
func (m *RespGetPaiBan) String() string            { return proto.CompactTextString(m) }
func (*RespGetPaiBan) ProtoMessage()               {}
func (*RespGetPaiBan) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RespGetPaiBan) GetStatusCode() uint32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *RespGetPaiBan) GetPaiBans() []*PaiBan {
	if m != nil {
		return m.PaiBans
	}
	return nil
}

// 客户端 发布排班
type ReqSetPaiBan struct {
	OwnerAddress string    `protobuf:"bytes,1,opt,name=OwnerAddress" json:"OwnerAddress,omitempty"`
	UserKeyStore string    `protobuf:"bytes,2,opt,name=UserKeyStore" json:"UserKeyStore,omitempty"`
	UserParse    string    `protobuf:"bytes,3,opt,name=UserParse" json:"UserParse,omitempty"`
	KeyString    string    `protobuf:"bytes,4,opt,name=KeyString" json:"KeyString,omitempty"`
	UserAddress  string    `protobuf:"bytes,5,opt,name=UserAddress" json:"UserAddress,omitempty"`
	PaiBans      []*PaiBan `protobuf:"bytes,6,rep,name=PaiBans" json:"PaiBans,omitempty"`
}

func (m *ReqSetPaiBan) Reset()                    { *m = ReqSetPaiBan{} }
func (m *ReqSetPaiBan) String() string            { return proto.CompactTextString(m) }
func (*ReqSetPaiBan) ProtoMessage()               {}
func (*ReqSetPaiBan) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ReqSetPaiBan) GetOwnerAddress() string {
	if m != nil {
		return m.OwnerAddress
	}
	return ""
}

func (m *ReqSetPaiBan) GetUserKeyStore() string {
	if m != nil {
		return m.UserKeyStore
	}
	return ""
}

func (m *ReqSetPaiBan) GetUserParse() string {
	if m != nil {
		return m.UserParse
	}
	return ""
}

func (m *ReqSetPaiBan) GetKeyString() string {
	if m != nil {
		return m.KeyString
	}
	return ""
}

func (m *ReqSetPaiBan) GetUserAddress() string {
	if m != nil {
		return m.UserAddress
	}
	return ""
}

func (m *ReqSetPaiBan) GetPaiBans() []*PaiBan {
	if m != nil {
		return m.PaiBans
	}
	return nil
}

// 服务端 发布排班
type RespSetPaiBan struct {
	StatusCode uint32 `protobuf:"varint,1,opt,name=StatusCode" json:"StatusCode,omitempty"`
}

func (m *RespSetPaiBan) Reset()                    { *m = RespSetPaiBan{} }
func (m *RespSetPaiBan) String() string            { return proto.CompactTextString(m) }
func (*RespSetPaiBan) ProtoMessage()               {}
func (*RespSetPaiBan) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RespSetPaiBan) GetStatusCode() uint32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

// 客户端 获取所有钱
type ReqGetMoney struct {
	UserAddress string `protobuf:"bytes,1,opt,name=UserAddress" json:"UserAddress,omitempty"`
	StartTime   int64  `protobuf:"varint,2,opt,name=StartTime" json:"StartTime,omitempty"`
	EndTime     int64  `protobuf:"varint,3,opt,name=EndTime" json:"EndTime,omitempty"`
	Page        uint32 `protobuf:"varint,4,opt,name=Page" json:"Page,omitempty"`
}

func (m *ReqGetMoney) Reset()                    { *m = ReqGetMoney{} }
func (m *ReqGetMoney) String() string            { return proto.CompactTextString(m) }
func (*ReqGetMoney) ProtoMessage()               {}
func (*ReqGetMoney) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReqGetMoney) GetUserAddress() string {
	if m != nil {
		return m.UserAddress
	}
	return ""
}

func (m *ReqGetMoney) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *ReqGetMoney) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *ReqGetMoney) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

// 服务端 获取所有钱
type RespGetMoney struct {
	StatusCode uint32  `protobuf:"varint,1,opt,name=StatusCode" json:"StatusCode,omitempty"`
	AllMoney   float64 `protobuf:"fixed64,2,opt,name=AllMoney" json:"AllMoney,omitempty"`
	Month      float64 `protobuf:"fixed64,3,opt,name=Month" json:"Month,omitempty"`
	Date       float64 `protobuf:"fixed64,4,opt,name=Date" json:"Date,omitempty"`
	Bills      []*Bill `protobuf:"bytes,5,rep,name=Bills" json:"Bills,omitempty"`
	PageCount  uint32  `protobuf:"varint,6,opt,name=PageCount" json:"PageCount,omitempty"`
}

func (m *RespGetMoney) Reset()                    { *m = RespGetMoney{} }
func (m *RespGetMoney) String() string            { return proto.CompactTextString(m) }
func (*RespGetMoney) ProtoMessage()               {}
func (*RespGetMoney) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *RespGetMoney) GetStatusCode() uint32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *RespGetMoney) GetAllMoney() float64 {
	if m != nil {
		return m.AllMoney
	}
	return 0
}

func (m *RespGetMoney) GetMonth() float64 {
	if m != nil {
		return m.Month
	}
	return 0
}

func (m *RespGetMoney) GetDate() float64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *RespGetMoney) GetBills() []*Bill {
	if m != nil {
		return m.Bills
	}
	return nil
}

func (m *RespGetMoney) GetPageCount() uint32 {
	if m != nil {
		return m.PageCount
	}
	return 0
}

// 客户端 获取以太坊的余额
type ReqGetEthBalance struct {
	UserAddress string `protobuf:"bytes,1,opt,name=UserAddress" json:"UserAddress,omitempty"`
}

func (m *ReqGetEthBalance) Reset()                    { *m = ReqGetEthBalance{} }
func (m *ReqGetEthBalance) String() string            { return proto.CompactTextString(m) }
func (*ReqGetEthBalance) ProtoMessage()               {}
func (*ReqGetEthBalance) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ReqGetEthBalance) GetUserAddress() string {
	if m != nil {
		return m.UserAddress
	}
	return ""
}

// 服务端 获取以太坊的余额
type RespGetEthBalance struct {
	StatusCode uint32 `protobuf:"varint,1,opt,name=StatusCode" json:"StatusCode,omitempty"`
	Balance    string `protobuf:"bytes,2,opt,name=Balance" json:"Balance,omitempty"`
}

func (m *RespGetEthBalance) Reset()                    { *m = RespGetEthBalance{} }
func (m *RespGetEthBalance) String() string            { return proto.CompactTextString(m) }
func (*RespGetEthBalance) ProtoMessage()               {}
func (*RespGetEthBalance) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *RespGetEthBalance) GetStatusCode() uint32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *RespGetEthBalance) GetBalance() string {
	if m != nil {
		return m.Balance
	}
	return ""
}

// 客户端 发布比例分配表
type ReqSchedule struct {
	UserAddress  string `protobuf:"bytes,1,opt,name=UserAddress" json:"UserAddress,omitempty"`
	UserKeyStore string `protobuf:"bytes,2,opt,name=UserKeyStore" json:"UserKeyStore,omitempty"`
	UserParse    string `protobuf:"bytes,3,opt,name=UserParse" json:"UserParse,omitempty"`
	KeyString    string `protobuf:"bytes,4,opt,name=KeyString" json:"KeyString,omitempty"`
	ScheduleName string `protobuf:"bytes,5,opt,name=ScheduleName" json:"ScheduleName,omitempty"`
	Rss          []*Rs  `protobuf:"bytes,6,rep,name=Rss" json:"Rss,omitempty"`
	Message      string `protobuf:"bytes,7,opt,name=Message" json:"Message,omitempty"`
}

func (m *ReqSchedule) Reset()                    { *m = ReqSchedule{} }
func (m *ReqSchedule) String() string            { return proto.CompactTextString(m) }
func (*ReqSchedule) ProtoMessage()               {}
func (*ReqSchedule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ReqSchedule) GetUserAddress() string {
	if m != nil {
		return m.UserAddress
	}
	return ""
}

func (m *ReqSchedule) GetUserKeyStore() string {
	if m != nil {
		return m.UserKeyStore
	}
	return ""
}

func (m *ReqSchedule) GetUserParse() string {
	if m != nil {
		return m.UserParse
	}
	return ""
}

func (m *ReqSchedule) GetKeyString() string {
	if m != nil {
		return m.KeyString
	}
	return ""
}

func (m *ReqSchedule) GetScheduleName() string {
	if m != nil {
		return m.ScheduleName
	}
	return ""
}

func (m *ReqSchedule) GetRss() []*Rs {
	if m != nil {
		return m.Rss
	}
	return nil
}

func (m *ReqSchedule) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// 服务端 发布比例分配表
type RespSchedule struct {
	StatusCode   uint32 `protobuf:"varint,1,opt,name=StatusCode" json:"StatusCode,omitempty"`
	Hash         string `protobuf:"bytes,2,opt,name=Hash" json:"Hash,omitempty"`
	ScheduleName string `protobuf:"bytes,3,opt,name=ScheduleName" json:"ScheduleName,omitempty"`
}

func (m *RespSchedule) Reset()                    { *m = RespSchedule{} }
func (m *RespSchedule) String() string            { return proto.CompactTextString(m) }
func (*RespSchedule) ProtoMessage()               {}
func (*RespSchedule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *RespSchedule) GetStatusCode() uint32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *RespSchedule) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *RespSchedule) GetScheduleName() string {
	if m != nil {
		return m.ScheduleName
	}
	return ""
}

// 客户端 查询排班
type ReqGetSchedue struct {
	UserAddress  string `protobuf:"bytes,1,opt,name=UserAddress" json:"UserAddress,omitempty"`
	ScheduleName string `protobuf:"bytes,2,opt,name=ScheduleName" json:"ScheduleName,omitempty"`
}

func (m *ReqGetSchedue) Reset()                    { *m = ReqGetSchedue{} }
func (m *ReqGetSchedue) String() string            { return proto.CompactTextString(m) }
func (*ReqGetSchedue) ProtoMessage()               {}
func (*ReqGetSchedue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ReqGetSchedue) GetUserAddress() string {
	if m != nil {
		return m.UserAddress
	}
	return ""
}

func (m *ReqGetSchedue) GetScheduleName() string {
	if m != nil {
		return m.ScheduleName
	}
	return ""
}

// 服务端 查询排班
type RespGetSchedue struct {
	StatusCode uint32         `protobuf:"varint,1,opt,name=StatusCode" json:"StatusCode,omitempty"`
	Accounts   []*UserAccount `protobuf:"bytes,2,rep,name=Accounts" json:"Accounts,omitempty"`
	Schedules  []*Rs          `protobuf:"bytes,3,rep,name=Schedules" json:"Schedules,omitempty"`
}

func (m *RespGetSchedue) Reset()                    { *m = RespGetSchedue{} }
func (m *RespGetSchedue) String() string            { return proto.CompactTextString(m) }
func (*RespGetSchedue) ProtoMessage()               {}
func (*RespGetSchedue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *RespGetSchedue) GetStatusCode() uint32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *RespGetSchedue) GetAccounts() []*UserAccount {
	if m != nil {
		return m.Accounts
	}
	return nil
}

func (m *RespGetSchedue) GetSchedules() []*Rs {
	if m != nil {
		return m.Schedules
	}
	return nil
}

// 客户端 绑定支付账户
type ReqSetAccount struct {
	UserKeyStore string       `protobuf:"bytes,1,opt,name=UserKeyStore" json:"UserKeyStore,omitempty"`
	UserParse    string       `protobuf:"bytes,2,opt,name=UserParse" json:"UserParse,omitempty"`
	KeyString    string       `protobuf:"bytes,3,opt,name=KeyString" json:"KeyString,omitempty"`
	UserAccountt *UserAccount `protobuf:"bytes,4,opt,name=UserAccountt" json:"UserAccountt,omitempty"`
}

func (m *ReqSetAccount) Reset()                    { *m = ReqSetAccount{} }
func (m *ReqSetAccount) String() string            { return proto.CompactTextString(m) }
func (*ReqSetAccount) ProtoMessage()               {}
func (*ReqSetAccount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *ReqSetAccount) GetUserKeyStore() string {
	if m != nil {
		return m.UserKeyStore
	}
	return ""
}

func (m *ReqSetAccount) GetUserParse() string {
	if m != nil {
		return m.UserParse
	}
	return ""
}

func (m *ReqSetAccount) GetKeyString() string {
	if m != nil {
		return m.KeyString
	}
	return ""
}

func (m *ReqSetAccount) GetUserAccountt() *UserAccount {
	if m != nil {
		return m.UserAccountt
	}
	return nil
}

// 服务端 绑定支付账户
type RespSetAccount struct {
	StatusCode uint32 `protobuf:"varint,1,opt,name=StatusCode" json:"StatusCode,omitempty"`
}

func (m *RespSetAccount) Reset()                    { *m = RespSetAccount{} }
func (m *RespSetAccount) String() string            { return proto.CompactTextString(m) }
func (*RespSetAccount) ProtoMessage()               {}
func (*RespSetAccount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *RespSetAccount) GetStatusCode() uint32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

// 客户端 查询支付账号
type ReqGetAccount struct {
	UserAddress string `protobuf:"bytes,1,opt,name=UserAddress" json:"UserAddress,omitempty"`
}

func (m *ReqGetAccount) Reset()                    { *m = ReqGetAccount{} }
func (m *ReqGetAccount) String() string            { return proto.CompactTextString(m) }
func (*ReqGetAccount) ProtoMessage()               {}
func (*ReqGetAccount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *ReqGetAccount) GetUserAddress() string {
	if m != nil {
		return m.UserAddress
	}
	return ""
}

// 服务端 查询支付账号
type RespGetAccount struct {
	StatusCode   uint32       `protobuf:"varint,1,opt,name=StatusCode" json:"StatusCode,omitempty"`
	UserAccountt *UserAccount `protobuf:"bytes,2,opt,name=UserAccountt" json:"UserAccountt,omitempty"`
}

func (m *RespGetAccount) Reset()                    { *m = RespGetAccount{} }
func (m *RespGetAccount) String() string            { return proto.CompactTextString(m) }
func (*RespGetAccount) ProtoMessage()               {}
func (*RespGetAccount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *RespGetAccount) GetStatusCode() uint32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *RespGetAccount) GetUserAccountt() *UserAccount {
	if m != nil {
		return m.UserAccountt
	}
	return nil
}

type ReqGetAllSchedule struct {
	UserAddress string `protobuf:"bytes,1,opt,name=UserAddress" json:"UserAddress,omitempty"`
	Pages       uint64 `protobuf:"varint,2,opt,name=Pages" json:"Pages,omitempty"`
}

func (m *ReqGetAllSchedule) Reset()                    { *m = ReqGetAllSchedule{} }
func (m *ReqGetAllSchedule) String() string            { return proto.CompactTextString(m) }
func (*ReqGetAllSchedule) ProtoMessage()               {}
func (*ReqGetAllSchedule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *ReqGetAllSchedule) GetUserAddress() string {
	if m != nil {
		return m.UserAddress
	}
	return ""
}

func (m *ReqGetAllSchedule) GetPages() uint64 {
	if m != nil {
		return m.Pages
	}
	return 0
}

// 服务端 查询排班
type RespGetAllSchedule struct {
	StatusCode uint32 `protobuf:"varint,1,opt,name=StatusCode" json:"StatusCode,omitempty"`
	Schedules  []*Sd  `protobuf:"bytes,2,rep,name=Schedules" json:"Schedules,omitempty"`
	Pages      uint64 `protobuf:"varint,3,opt,name=Pages" json:"Pages,omitempty"`
	PagesCount uint64 `protobuf:"varint,4,opt,name=PagesCount" json:"PagesCount,omitempty"`
}

func (m *RespGetAllSchedule) Reset()                    { *m = RespGetAllSchedule{} }
func (m *RespGetAllSchedule) String() string            { return proto.CompactTextString(m) }
func (*RespGetAllSchedule) ProtoMessage()               {}
func (*RespGetAllSchedule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *RespGetAllSchedule) GetStatusCode() uint32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *RespGetAllSchedule) GetSchedules() []*Sd {
	if m != nil {
		return m.Schedules
	}
	return nil
}

func (m *RespGetAllSchedule) GetPages() uint64 {
	if m != nil {
		return m.Pages
	}
	return 0
}

func (m *RespGetAllSchedule) GetPagesCount() uint64 {
	if m != nil {
		return m.PagesCount
	}
	return 0
}

type ReqGetQuo struct {
	UserAddr   string `protobuf:"bytes,1,opt,name=UserAddr" json:"UserAddr,omitempty"`
	ScheduleId string `protobuf:"bytes,2,opt,name=ScheduleId" json:"ScheduleId,omitempty"`
}

func (m *ReqGetQuo) Reset()                    { *m = ReqGetQuo{} }
func (m *ReqGetQuo) String() string            { return proto.CompactTextString(m) }
func (*ReqGetQuo) ProtoMessage()               {}
func (*ReqGetQuo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *ReqGetQuo) GetUserAddr() string {
	if m != nil {
		return m.UserAddr
	}
	return ""
}

func (m *ReqGetQuo) GetScheduleId() string {
	if m != nil {
		return m.ScheduleId
	}
	return ""
}

type RespGetQuo struct {
	StatusCode uint32  `protobuf:"varint,1,opt,name=StatusCode" json:"StatusCode,omitempty"`
	Money      float64 `protobuf:"fixed64,2,opt,name=Money" json:"Money,omitempty"`
}

func (m *RespGetQuo) Reset()                    { *m = RespGetQuo{} }
func (m *RespGetQuo) String() string            { return proto.CompactTextString(m) }
func (*RespGetQuo) ProtoMessage()               {}
func (*RespGetQuo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *RespGetQuo) GetStatusCode() uint32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *RespGetQuo) GetMoney() float64 {
	if m != nil {
		return m.Money
	}
	return 0
}

type ReqResetQuo struct {
	UserAddr   string `protobuf:"bytes,1,opt,name=UserAddr" json:"UserAddr,omitempty"`
	KeyStore   string `protobuf:"bytes,2,opt,name=KeyStore" json:"KeyStore,omitempty"`
	ScheduleId string `protobuf:"bytes,3,opt,name=ScheduleId" json:"ScheduleId,omitempty"`
}

func (m *ReqResetQuo) Reset()                    { *m = ReqResetQuo{} }
func (m *ReqResetQuo) String() string            { return proto.CompactTextString(m) }
func (*ReqResetQuo) ProtoMessage()               {}
func (*ReqResetQuo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *ReqResetQuo) GetUserAddr() string {
	if m != nil {
		return m.UserAddr
	}
	return ""
}

func (m *ReqResetQuo) GetKeyStore() string {
	if m != nil {
		return m.KeyStore
	}
	return ""
}

func (m *ReqResetQuo) GetScheduleId() string {
	if m != nil {
		return m.ScheduleId
	}
	return ""
}

type RespResetQuo struct {
	Flag bool `protobuf:"varint,1,opt,name=Flag" json:"Flag,omitempty"`
}

func (m *RespResetQuo) Reset()                    { *m = RespResetQuo{} }
func (m *RespResetQuo) String() string            { return proto.CompactTextString(m) }
func (*RespResetQuo) ProtoMessage()               {}
func (*RespResetQuo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *RespResetQuo) GetFlag() bool {
	if m != nil {
		return m.Flag
	}
	return false
}

type ReqGetTrans struct {
	Hash string `protobuf:"bytes,1,opt,name=Hash" json:"Hash,omitempty"`
}

func (m *ReqGetTrans) Reset()                    { *m = ReqGetTrans{} }
func (m *ReqGetTrans) String() string            { return proto.CompactTextString(m) }
func (*ReqGetTrans) ProtoMessage()               {}
func (*ReqGetTrans) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *ReqGetTrans) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type RespGetTrans struct {
	Flag bool `protobuf:"varint,1,opt,name=Flag" json:"Flag,omitempty"`
}

func (m *RespGetTrans) Reset()                    { *m = RespGetTrans{} }
func (m *RespGetTrans) String() string            { return proto.CompactTextString(m) }
func (*RespGetTrans) ProtoMessage()               {}
func (*RespGetTrans) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *RespGetTrans) GetFlag() bool {
	if m != nil {
		return m.Flag
	}
	return false
}

// -------------------------------------------------------
type ReqPing struct {
}

func (m *ReqPing) Reset()                    { *m = ReqPing{} }
func (m *ReqPing) String() string            { return proto.CompactTextString(m) }
func (*ReqPing) ProtoMessage()               {}
func (*ReqPing) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

type RespPing struct {
}

func (m *RespPing) Reset()                    { *m = RespPing{} }
func (m *RespPing) String() string            { return proto.CompactTextString(m) }
func (*RespPing) ProtoMessage()               {}
func (*RespPing) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

type ReqNewScheduleId struct {
	Index string `protobuf:"bytes,1,opt,name=index" json:"index,omitempty"`
}

func (m *ReqNewScheduleId) Reset()                    { *m = ReqNewScheduleId{} }
func (m *ReqNewScheduleId) String() string            { return proto.CompactTextString(m) }
func (*ReqNewScheduleId) ProtoMessage()               {}
func (*ReqNewScheduleId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *ReqNewScheduleId) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

// 服务端 根据sheduleid查询账本
type RespNewScheduleId struct {
	StatusCode   uint32 `protobuf:"varint,1,opt,name=StatusCode" json:"StatusCode,omitempty"`
	ScheduleName string `protobuf:"bytes,2,opt,name=ScheduleName" json:"ScheduleName,omitempty"`
}

func (m *RespNewScheduleId) Reset()                    { *m = RespNewScheduleId{} }
func (m *RespNewScheduleId) String() string            { return proto.CompactTextString(m) }
func (*RespNewScheduleId) ProtoMessage()               {}
func (*RespNewScheduleId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *RespNewScheduleId) GetStatusCode() uint32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *RespNewScheduleId) GetScheduleName() string {
	if m != nil {
		return m.ScheduleName
	}
	return ""
}

// -------------------------------------------------------
// 客户端 根据sheduleid查询账本
type ReqGetABBySh struct {
	OrderId      []string `protobuf:"bytes,1,rep,name=OrderId" json:"OrderId,omitempty"`
	ScheduleName string   `protobuf:"bytes,2,opt,name=ScheduleName" json:"ScheduleName,omitempty"`
}

func (m *ReqGetABBySh) Reset()                    { *m = ReqGetABBySh{} }
func (m *ReqGetABBySh) String() string            { return proto.CompactTextString(m) }
func (*ReqGetABBySh) ProtoMessage()               {}
func (*ReqGetABBySh) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *ReqGetABBySh) GetOrderId() []string {
	if m != nil {
		return m.OrderId
	}
	return nil
}

func (m *ReqGetABBySh) GetScheduleName() string {
	if m != nil {
		return m.ScheduleName
	}
	return ""
}

// 服务端 根据sheduleid查询账本
type RespGetABBySh struct {
	StatusCode uint32         `protobuf:"varint,1,opt,name=StatusCode" json:"StatusCode,omitempty"`
	Ods        []*OrderDliver `protobuf:"bytes,2,rep,name=Ods" json:"Ods,omitempty"`
}

func (m *RespGetABBySh) Reset()                    { *m = RespGetABBySh{} }
func (m *RespGetABBySh) String() string            { return proto.CompactTextString(m) }
func (*RespGetABBySh) ProtoMessage()               {}
func (*RespGetABBySh) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *RespGetABBySh) GetStatusCode() uint32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *RespGetABBySh) GetOds() []*OrderDliver {
	if m != nil {
		return m.Ods
	}
	return nil
}

// 客户端 根据orderid查询账本
type ReqGetABById struct {
	OrderId      string `protobuf:"bytes,1,opt,name=OrderId" json:"OrderId,omitempty"`
	ScheduleName string `protobuf:"bytes,2,opt,name=ScheduleName" json:"ScheduleName,omitempty"`
}

func (m *ReqGetABById) Reset()                    { *m = ReqGetABById{} }
func (m *ReqGetABById) String() string            { return proto.CompactTextString(m) }
func (*ReqGetABById) ProtoMessage()               {}
func (*ReqGetABById) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *ReqGetABById) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *ReqGetABById) GetScheduleName() string {
	if m != nil {
		return m.ScheduleName
	}
	return ""
}

// 服务端 根据orderid查询账本
type RespGetABById struct {
	StatusCode uint32         `protobuf:"varint,1,opt,name=StatusCode" json:"StatusCode,omitempty"`
	Abs        []*AccountBook `protobuf:"bytes,2,rep,name=Abs" json:"Abs,omitempty"`
}

func (m *RespGetABById) Reset()                    { *m = RespGetABById{} }
func (m *RespGetABById) String() string            { return proto.CompactTextString(m) }
func (*RespGetABById) ProtoMessage()               {}
func (*RespGetABById) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *RespGetABById) GetStatusCode() uint32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *RespGetABById) GetAbs() []*AccountBook {
	if m != nil {
		return m.Abs
	}
	return nil
}

// 客户端 三方支付
type ReqThreeSetBill struct {
	UserAddress  string  `protobuf:"bytes,1,opt,name=UserAddress" json:"UserAddress,omitempty"`
	KeyString    string  `protobuf:"bytes,2,opt,name=KeyString" json:"KeyString,omitempty"`
	ScheduleName string  `protobuf:"bytes,3,opt,name=ScheduleName" json:"ScheduleName,omitempty"`
	Money        float64 `protobuf:"fixed64,5,opt,name=Money" json:"Money,omitempty"`
	OrderId      string  `protobuf:"bytes,6,opt,name=OrderId" json:"OrderId,omitempty"`
}

func (m *ReqThreeSetBill) Reset()                    { *m = ReqThreeSetBill{} }
func (m *ReqThreeSetBill) String() string            { return proto.CompactTextString(m) }
func (*ReqThreeSetBill) ProtoMessage()               {}
func (*ReqThreeSetBill) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *ReqThreeSetBill) GetUserAddress() string {
	if m != nil {
		return m.UserAddress
	}
	return ""
}

func (m *ReqThreeSetBill) GetKeyString() string {
	if m != nil {
		return m.KeyString
	}
	return ""
}

func (m *ReqThreeSetBill) GetScheduleName() string {
	if m != nil {
		return m.ScheduleName
	}
	return ""
}

func (m *ReqThreeSetBill) GetMoney() float64 {
	if m != nil {
		return m.Money
	}
	return 0
}

func (m *ReqThreeSetBill) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

// 服务端 三方支付
type RespThreeSetBill struct {
	StatusCode uint32 `protobuf:"varint,1,opt,name=StatusCode" json:"StatusCode,omitempty"`
	Hash       string `protobuf:"bytes,2,opt,name=Hash" json:"Hash,omitempty"`
}

func (m *RespThreeSetBill) Reset()                    { *m = RespThreeSetBill{} }
func (m *RespThreeSetBill) String() string            { return proto.CompactTextString(m) }
func (*RespThreeSetBill) ProtoMessage()               {}
func (*RespThreeSetBill) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *RespThreeSetBill) GetStatusCode() uint32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *RespThreeSetBill) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

// 客户端 确认交易（三方平台打钱成功后回调）
type ReqConfirm struct {
	UserAddress     string `protobuf:"bytes,1,opt,name=UserAddress" json:"UserAddress,omitempty"`
	KeyString       string `protobuf:"bytes,2,opt,name=KeyString" json:"KeyString,omitempty"`
	OrderId         string `protobuf:"bytes,3,opt,name=OrderId" json:"OrderId,omitempty"`
	TransferDetails string `protobuf:"bytes,4,opt,name=TransferDetails" json:"TransferDetails,omitempty"`
}

func (m *ReqConfirm) Reset()                    { *m = ReqConfirm{} }
func (m *ReqConfirm) String() string            { return proto.CompactTextString(m) }
func (*ReqConfirm) ProtoMessage()               {}
func (*ReqConfirm) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *ReqConfirm) GetUserAddress() string {
	if m != nil {
		return m.UserAddress
	}
	return ""
}

func (m *ReqConfirm) GetKeyString() string {
	if m != nil {
		return m.KeyString
	}
	return ""
}

func (m *ReqConfirm) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *ReqConfirm) GetTransferDetails() string {
	if m != nil {
		return m.TransferDetails
	}
	return ""
}

// 服务端 确认交易（三方平台打钱成功后回调）
type RespConfirm struct {
	StatusCode uint32 `protobuf:"varint,1,opt,name=StatusCode" json:"StatusCode,omitempty"`
	Hash       string `protobuf:"bytes,2,opt,name=Hash" json:"Hash,omitempty"`
}

func (m *RespConfirm) Reset()                    { *m = RespConfirm{} }
func (m *RespConfirm) String() string            { return proto.CompactTextString(m) }
func (*RespConfirm) ProtoMessage()               {}
func (*RespConfirm) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *RespConfirm) GetStatusCode() uint32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *RespConfirm) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

// 客户端 查询用户账本
type ReqGetAccountBook struct {
	UserAddress string `protobuf:"bytes,1,opt,name=UserAddress" json:"UserAddress,omitempty"`
	OrderId     string `protobuf:"bytes,2,opt,name=OrderId" json:"OrderId,omitempty"`
}

func (m *ReqGetAccountBook) Reset()                    { *m = ReqGetAccountBook{} }
func (m *ReqGetAccountBook) String() string            { return proto.CompactTextString(m) }
func (*ReqGetAccountBook) ProtoMessage()               {}
func (*ReqGetAccountBook) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *ReqGetAccountBook) GetUserAddress() string {
	if m != nil {
		return m.UserAddress
	}
	return ""
}

func (m *ReqGetAccountBook) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

// 服务端 查询用户账本
type RespGetAccountBook struct {
	StatusCode      uint32  `protobuf:"varint,1,opt,name=StatusCode" json:"StatusCode,omitempty"`
	OrderId         string  `protobuf:"bytes,2,opt,name=OrderId" json:"OrderId,omitempty"`
	Money           float64 `protobuf:"fixed64,3,opt,name=Money" json:"Money,omitempty"`
	Rflag           bool    `protobuf:"varint,4,opt,name=Rflag" json:"Rflag,omitempty"`
	TransferDetails string  `protobuf:"bytes,5,opt,name=TransferDetails" json:"TransferDetails,omitempty"`
}

func (m *RespGetAccountBook) Reset()                    { *m = RespGetAccountBook{} }
func (m *RespGetAccountBook) String() string            { return proto.CompactTextString(m) }
func (*RespGetAccountBook) ProtoMessage()               {}
func (*RespGetAccountBook) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *RespGetAccountBook) GetStatusCode() uint32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *RespGetAccountBook) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *RespGetAccountBook) GetMoney() float64 {
	if m != nil {
		return m.Money
	}
	return 0
}

func (m *RespGetAccountBook) GetRflag() bool {
	if m != nil {
		return m.Rflag
	}
	return false
}

func (m *RespGetAccountBook) GetTransferDetails() string {
	if m != nil {
		return m.TransferDetails
	}
	return ""
}

// 客户端 获取用户收入明细
type ReqGetAllIncome struct {
	CompanyName string `protobuf:"bytes,1,opt,name=CompanyName" json:"CompanyName,omitempty"`
	UserAddress string `protobuf:"bytes,2,opt,name=UserAddress" json:"UserAddress,omitempty"`
}

func (m *ReqGetAllIncome) Reset()                    { *m = ReqGetAllIncome{} }
func (m *ReqGetAllIncome) String() string            { return proto.CompactTextString(m) }
func (*ReqGetAllIncome) ProtoMessage()               {}
func (*ReqGetAllIncome) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *ReqGetAllIncome) GetCompanyName() string {
	if m != nil {
		return m.CompanyName
	}
	return ""
}

func (m *ReqGetAllIncome) GetUserAddress() string {
	if m != nil {
		return m.UserAddress
	}
	return ""
}

// 服务端 获取用户收入明细
type RespGetAllIncome struct {
	StatusCode uint32 `protobuf:"varint,1,opt,name=StatusCode" json:"StatusCode,omitempty"`
}

func (m *RespGetAllIncome) Reset()                    { *m = RespGetAllIncome{} }
func (m *RespGetAllIncome) String() string            { return proto.CompactTextString(m) }
func (*RespGetAllIncome) ProtoMessage()               {}
func (*RespGetAllIncome) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *RespGetAllIncome) GetStatusCode() uint32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

// 客户端 根据哈希值获取上链状态
type ReqGetByHash struct {
	UserAddress string `protobuf:"bytes,1,opt,name=UserAddress" json:"UserAddress,omitempty"`
	Hash        string `protobuf:"bytes,2,opt,name=Hash" json:"Hash,omitempty"`
}

func (m *ReqGetByHash) Reset()                    { *m = ReqGetByHash{} }
func (m *ReqGetByHash) String() string            { return proto.CompactTextString(m) }
func (*ReqGetByHash) ProtoMessage()               {}
func (*ReqGetByHash) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *ReqGetByHash) GetUserAddress() string {
	if m != nil {
		return m.UserAddress
	}
	return ""
}

func (m *ReqGetByHash) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

// 服务端 根据哈希值获取上链状态
type RespGetByHash struct {
	StatusCode uint32 `protobuf:"varint,1,opt,name=StatusCode" json:"StatusCode,omitempty"`
}

func (m *RespGetByHash) Reset()                    { *m = RespGetByHash{} }
func (m *RespGetByHash) String() string            { return proto.CompactTextString(m) }
func (*RespGetByHash) ProtoMessage()               {}
func (*RespGetByHash) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *RespGetByHash) GetStatusCode() uint32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

// -------------------------------------------------------
type CReloadConfig struct {
	OperateTimeout uint32 `protobuf:"varint,1,opt,name=Operate_timeout,json=OperateTimeout" json:"Operate_timeout,omitempty"`
	LocalAddress   string `protobuf:"bytes,2,opt,name=LocalAddress" json:"LocalAddress,omitempty"`
	Port           string `protobuf:"bytes,3,opt,name=Port" json:"Port,omitempty"`
	AccAddress     string `protobuf:"bytes,4,opt,name=AccAddress" json:"AccAddress,omitempty"`
	EthAddress     string `protobuf:"bytes,5,opt,name=EthAddress" json:"EthAddress,omitempty"`
	IpcDir         string `protobuf:"bytes,6,opt,name=IpcDir" json:"IpcDir,omitempty"`
	ServerId       string `protobuf:"bytes,7,opt,name=ServerId" json:"ServerId,omitempty"`
	ManagerKey     string `protobuf:"bytes,8,opt,name=ManagerKey" json:"ManagerKey,omitempty"`
	ManagerPhrase  string `protobuf:"bytes,9,opt,name=ManagerPhrase" json:"ManagerPhrase,omitempty"`
	KeyDir         string `protobuf:"bytes,10,opt,name=KeyDir" json:"KeyDir,omitempty"`
}

func (m *CReloadConfig) Reset()                    { *m = CReloadConfig{} }
func (m *CReloadConfig) String() string            { return proto.CompactTextString(m) }
func (*CReloadConfig) ProtoMessage()               {}
func (*CReloadConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *CReloadConfig) GetOperateTimeout() uint32 {
	if m != nil {
		return m.OperateTimeout
	}
	return 0
}

func (m *CReloadConfig) GetLocalAddress() string {
	if m != nil {
		return m.LocalAddress
	}
	return ""
}

func (m *CReloadConfig) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *CReloadConfig) GetAccAddress() string {
	if m != nil {
		return m.AccAddress
	}
	return ""
}

func (m *CReloadConfig) GetEthAddress() string {
	if m != nil {
		return m.EthAddress
	}
	return ""
}

func (m *CReloadConfig) GetIpcDir() string {
	if m != nil {
		return m.IpcDir
	}
	return ""
}

func (m *CReloadConfig) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

func (m *CReloadConfig) GetManagerKey() string {
	if m != nil {
		return m.ManagerKey
	}
	return ""
}

func (m *CReloadConfig) GetManagerPhrase() string {
	if m != nil {
		return m.ManagerPhrase
	}
	return ""
}

func (m *CReloadConfig) GetKeyDir() string {
	if m != nil {
		return m.KeyDir
	}
	return ""
}

type SReloadConfig struct {
}

func (m *SReloadConfig) Reset()                    { *m = SReloadConfig{} }
func (m *SReloadConfig) String() string            { return proto.CompactTextString(m) }
func (*SReloadConfig) ProtoMessage()               {}
func (*SReloadConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

type CReloadDeploy struct {
	Address string `protobuf:"bytes,1,opt,name=Address" json:"Address,omitempty"`
	Account string `protobuf:"bytes,2,opt,name=Account" json:"Account,omitempty"`
}

func (m *CReloadDeploy) Reset()                    { *m = CReloadDeploy{} }
func (m *CReloadDeploy) String() string            { return proto.CompactTextString(m) }
func (*CReloadDeploy) ProtoMessage()               {}
func (*CReloadDeploy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *CReloadDeploy) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *CReloadDeploy) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

type SReloadDeploy struct {
}

func (m *SReloadDeploy) Reset()                    { *m = SReloadDeploy{} }
func (m *SReloadDeploy) String() string            { return proto.CompactTextString(m) }
func (*SReloadDeploy) ProtoMessage()               {}
func (*SReloadDeploy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func init() {
	proto.RegisterType((*ReqGetPaiBan)(nil), "protocol.ReqGetPaiBan")
	proto.RegisterType((*RespGetPaiBan)(nil), "protocol.RespGetPaiBan")
	proto.RegisterType((*ReqSetPaiBan)(nil), "protocol.ReqSetPaiBan")
	proto.RegisterType((*RespSetPaiBan)(nil), "protocol.RespSetPaiBan")
	proto.RegisterType((*ReqGetMoney)(nil), "protocol.ReqGetMoney")
	proto.RegisterType((*RespGetMoney)(nil), "protocol.RespGetMoney")
	proto.RegisterType((*ReqGetEthBalance)(nil), "protocol.ReqGetEthBalance")
	proto.RegisterType((*RespGetEthBalance)(nil), "protocol.RespGetEthBalance")
	proto.RegisterType((*ReqSchedule)(nil), "protocol.ReqSchedule")
	proto.RegisterType((*RespSchedule)(nil), "protocol.RespSchedule")
	proto.RegisterType((*ReqGetSchedue)(nil), "protocol.ReqGetSchedue")
	proto.RegisterType((*RespGetSchedue)(nil), "protocol.RespGetSchedue")
	proto.RegisterType((*ReqSetAccount)(nil), "protocol.ReqSetAccount")
	proto.RegisterType((*RespSetAccount)(nil), "protocol.RespSetAccount")
	proto.RegisterType((*ReqGetAccount)(nil), "protocol.ReqGetAccount")
	proto.RegisterType((*RespGetAccount)(nil), "protocol.RespGetAccount")
	proto.RegisterType((*ReqGetAllSchedule)(nil), "protocol.ReqGetAllSchedule")
	proto.RegisterType((*RespGetAllSchedule)(nil), "protocol.RespGetAllSchedule")
	proto.RegisterType((*ReqGetQuo)(nil), "protocol.ReqGetQuo")
	proto.RegisterType((*RespGetQuo)(nil), "protocol.RespGetQuo")
	proto.RegisterType((*ReqResetQuo)(nil), "protocol.ReqResetQuo")
	proto.RegisterType((*RespResetQuo)(nil), "protocol.RespResetQuo")
	proto.RegisterType((*ReqGetTrans)(nil), "protocol.ReqGetTrans")
	proto.RegisterType((*RespGetTrans)(nil), "protocol.RespGetTrans")
	proto.RegisterType((*ReqPing)(nil), "protocol.ReqPing")
	proto.RegisterType((*RespPing)(nil), "protocol.RespPing")
	proto.RegisterType((*ReqNewScheduleId)(nil), "protocol.ReqNewScheduleId")
	proto.RegisterType((*RespNewScheduleId)(nil), "protocol.RespNewScheduleId")
	proto.RegisterType((*ReqGetABBySh)(nil), "protocol.ReqGetABBySh")
	proto.RegisterType((*RespGetABBySh)(nil), "protocol.RespGetABBySh")
	proto.RegisterType((*ReqGetABById)(nil), "protocol.ReqGetABById")
	proto.RegisterType((*RespGetABById)(nil), "protocol.RespGetABById")
	proto.RegisterType((*ReqThreeSetBill)(nil), "protocol.ReqThreeSetBill")
	proto.RegisterType((*RespThreeSetBill)(nil), "protocol.RespThreeSetBill")
	proto.RegisterType((*ReqConfirm)(nil), "protocol.ReqConfirm")
	proto.RegisterType((*RespConfirm)(nil), "protocol.RespConfirm")
	proto.RegisterType((*ReqGetAccountBook)(nil), "protocol.ReqGetAccountBook")
	proto.RegisterType((*RespGetAccountBook)(nil), "protocol.RespGetAccountBook")
	proto.RegisterType((*ReqGetAllIncome)(nil), "protocol.ReqGetAllIncome")
	proto.RegisterType((*RespGetAllIncome)(nil), "protocol.RespGetAllIncome")
	proto.RegisterType((*ReqGetByHash)(nil), "protocol.ReqGetByHash")
	proto.RegisterType((*RespGetByHash)(nil), "protocol.RespGetByHash")
	proto.RegisterType((*CReloadConfig)(nil), "protocol.CReloadConfig")
	proto.RegisterType((*SReloadConfig)(nil), "protocol.SReloadConfig")
	proto.RegisterType((*CReloadDeploy)(nil), "protocol.CReloadDeploy")
	proto.RegisterType((*SReloadDeploy)(nil), "protocol.SReloadDeploy")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ApiService service

type ApiServiceClient interface {
	// ping
	Ping(ctx context.Context, in *ReqPing, opts ...grpc.CallOption) (*RespPing, error)
	// 绑定 登录
	GetEthBalance(ctx context.Context, in *ReqGetEthBalance, opts ...grpc.CallOption) (*RespGetEthBalance, error)
	GetTrans(ctx context.Context, in *ReqGetTrans, opts ...grpc.CallOption) (*RespGetTrans, error)
	// 排班 申请工作
	SetSchedule(ctx context.Context, in *ReqSchedule, opts ...grpc.CallOption) (*RespSchedule, error)
	GetSchedule(ctx context.Context, in *ReqGetSchedue, opts ...grpc.CallOption) (*RespGetSchedue, error)
	NewScheduleId(ctx context.Context, in *ReqNewScheduleId, opts ...grpc.CallOption) (*RespNewScheduleId, error)
	GetAllSchedule(ctx context.Context, in *ReqGetAllSchedule, opts ...grpc.CallOption) (*RespGetAllSchedule, error)
	ResetQuo(ctx context.Context, in *ReqResetQuo, opts ...grpc.CallOption) (*RespResetQuo, error)
	GetQuo(ctx context.Context, in *ReqGetQuo, opts ...grpc.CallOption) (*RespGetQuo, error)
	SetPaiBan(ctx context.Context, in *ReqSetPaiBan, opts ...grpc.CallOption) (*RespSetPaiBan, error)
	GetPaiBan(ctx context.Context, in *ReqGetPaiBan, opts ...grpc.CallOption) (*RespGetPaiBan, error)
	SetAccount(ctx context.Context, in *ReqSetAccount, opts ...grpc.CallOption) (*RespSetAccount, error)
	GetAccount(ctx context.Context, in *ReqGetAccount, opts ...grpc.CallOption) (*RespGetAccount, error)
	// 查询账本
	GetAccountBook(ctx context.Context, in *ReqGetAccountBook, opts ...grpc.CallOption) (*RespGetAccountBook, error)
	GetABById(ctx context.Context, in *ReqGetABById, opts ...grpc.CallOption) (*RespGetABById, error)
	GetABBySh(ctx context.Context, in *ReqGetABBySh, opts ...grpc.CallOption) (*RespGetABBySh, error)
	// 支付
	ThreeSetBill(ctx context.Context, in *ReqThreeSetBill, opts ...grpc.CallOption) (*RespThreeSetBill, error)
	ThreeConfirm(ctx context.Context, in *ReqConfirm, opts ...grpc.CallOption) (*RespConfirm, error)
	// 配置服务
	ReloadConfig(ctx context.Context, in *CReloadConfig, opts ...grpc.CallOption) (*SReloadConfig, error)
	ReloadDeploy(ctx context.Context, in *CReloadDeploy, opts ...grpc.CallOption) (*SReloadDeploy, error)
	GetMoney(ctx context.Context, in *ReqGetMoney, opts ...grpc.CallOption) (*RespGetMoney, error)
}

type apiServiceClient struct {
	cc *grpc.ClientConn
}

func NewApiServiceClient(cc *grpc.ClientConn) ApiServiceClient {
	return &apiServiceClient{cc}
}

func (c *apiServiceClient) Ping(ctx context.Context, in *ReqPing, opts ...grpc.CallOption) (*RespPing, error) {
	out := new(RespPing)
	err := grpc.Invoke(ctx, "/protocol.ApiService/Ping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetEthBalance(ctx context.Context, in *ReqGetEthBalance, opts ...grpc.CallOption) (*RespGetEthBalance, error) {
	out := new(RespGetEthBalance)
	err := grpc.Invoke(ctx, "/protocol.ApiService/GetEthBalance", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTrans(ctx context.Context, in *ReqGetTrans, opts ...grpc.CallOption) (*RespGetTrans, error) {
	out := new(RespGetTrans)
	err := grpc.Invoke(ctx, "/protocol.ApiService/GetTrans", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) SetSchedule(ctx context.Context, in *ReqSchedule, opts ...grpc.CallOption) (*RespSchedule, error) {
	out := new(RespSchedule)
	err := grpc.Invoke(ctx, "/protocol.ApiService/SetSchedule", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetSchedule(ctx context.Context, in *ReqGetSchedue, opts ...grpc.CallOption) (*RespGetSchedue, error) {
	out := new(RespGetSchedue)
	err := grpc.Invoke(ctx, "/protocol.ApiService/GetSchedule", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) NewScheduleId(ctx context.Context, in *ReqNewScheduleId, opts ...grpc.CallOption) (*RespNewScheduleId, error) {
	out := new(RespNewScheduleId)
	err := grpc.Invoke(ctx, "/protocol.ApiService/NewScheduleId", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetAllSchedule(ctx context.Context, in *ReqGetAllSchedule, opts ...grpc.CallOption) (*RespGetAllSchedule, error) {
	out := new(RespGetAllSchedule)
	err := grpc.Invoke(ctx, "/protocol.ApiService/GetAllSchedule", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) ResetQuo(ctx context.Context, in *ReqResetQuo, opts ...grpc.CallOption) (*RespResetQuo, error) {
	out := new(RespResetQuo)
	err := grpc.Invoke(ctx, "/protocol.ApiService/ResetQuo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetQuo(ctx context.Context, in *ReqGetQuo, opts ...grpc.CallOption) (*RespGetQuo, error) {
	out := new(RespGetQuo)
	err := grpc.Invoke(ctx, "/protocol.ApiService/GetQuo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) SetPaiBan(ctx context.Context, in *ReqSetPaiBan, opts ...grpc.CallOption) (*RespSetPaiBan, error) {
	out := new(RespSetPaiBan)
	err := grpc.Invoke(ctx, "/protocol.ApiService/SetPaiBan", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetPaiBan(ctx context.Context, in *ReqGetPaiBan, opts ...grpc.CallOption) (*RespGetPaiBan, error) {
	out := new(RespGetPaiBan)
	err := grpc.Invoke(ctx, "/protocol.ApiService/GetPaiBan", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) SetAccount(ctx context.Context, in *ReqSetAccount, opts ...grpc.CallOption) (*RespSetAccount, error) {
	out := new(RespSetAccount)
	err := grpc.Invoke(ctx, "/protocol.ApiService/SetAccount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetAccount(ctx context.Context, in *ReqGetAccount, opts ...grpc.CallOption) (*RespGetAccount, error) {
	out := new(RespGetAccount)
	err := grpc.Invoke(ctx, "/protocol.ApiService/GetAccount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetAccountBook(ctx context.Context, in *ReqGetAccountBook, opts ...grpc.CallOption) (*RespGetAccountBook, error) {
	out := new(RespGetAccountBook)
	err := grpc.Invoke(ctx, "/protocol.ApiService/GetAccountBook", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetABById(ctx context.Context, in *ReqGetABById, opts ...grpc.CallOption) (*RespGetABById, error) {
	out := new(RespGetABById)
	err := grpc.Invoke(ctx, "/protocol.ApiService/GetABById", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetABBySh(ctx context.Context, in *ReqGetABBySh, opts ...grpc.CallOption) (*RespGetABBySh, error) {
	out := new(RespGetABBySh)
	err := grpc.Invoke(ctx, "/protocol.ApiService/GetABBySh", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) ThreeSetBill(ctx context.Context, in *ReqThreeSetBill, opts ...grpc.CallOption) (*RespThreeSetBill, error) {
	out := new(RespThreeSetBill)
	err := grpc.Invoke(ctx, "/protocol.ApiService/ThreeSetBill", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) ThreeConfirm(ctx context.Context, in *ReqConfirm, opts ...grpc.CallOption) (*RespConfirm, error) {
	out := new(RespConfirm)
	err := grpc.Invoke(ctx, "/protocol.ApiService/ThreeConfirm", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) ReloadConfig(ctx context.Context, in *CReloadConfig, opts ...grpc.CallOption) (*SReloadConfig, error) {
	out := new(SReloadConfig)
	err := grpc.Invoke(ctx, "/protocol.ApiService/ReloadConfig", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) ReloadDeploy(ctx context.Context, in *CReloadDeploy, opts ...grpc.CallOption) (*SReloadDeploy, error) {
	out := new(SReloadDeploy)
	err := grpc.Invoke(ctx, "/protocol.ApiService/ReloadDeploy", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetMoney(ctx context.Context, in *ReqGetMoney, opts ...grpc.CallOption) (*RespGetMoney, error) {
	out := new(RespGetMoney)
	err := grpc.Invoke(ctx, "/protocol.ApiService/GetMoney", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ApiService service

type ApiServiceServer interface {
	// ping
	Ping(context.Context, *ReqPing) (*RespPing, error)
	// 绑定 登录
	GetEthBalance(context.Context, *ReqGetEthBalance) (*RespGetEthBalance, error)
	GetTrans(context.Context, *ReqGetTrans) (*RespGetTrans, error)
	// 排班 申请工作
	SetSchedule(context.Context, *ReqSchedule) (*RespSchedule, error)
	GetSchedule(context.Context, *ReqGetSchedue) (*RespGetSchedue, error)
	NewScheduleId(context.Context, *ReqNewScheduleId) (*RespNewScheduleId, error)
	GetAllSchedule(context.Context, *ReqGetAllSchedule) (*RespGetAllSchedule, error)
	ResetQuo(context.Context, *ReqResetQuo) (*RespResetQuo, error)
	GetQuo(context.Context, *ReqGetQuo) (*RespGetQuo, error)
	SetPaiBan(context.Context, *ReqSetPaiBan) (*RespSetPaiBan, error)
	GetPaiBan(context.Context, *ReqGetPaiBan) (*RespGetPaiBan, error)
	SetAccount(context.Context, *ReqSetAccount) (*RespSetAccount, error)
	GetAccount(context.Context, *ReqGetAccount) (*RespGetAccount, error)
	// 查询账本
	GetAccountBook(context.Context, *ReqGetAccountBook) (*RespGetAccountBook, error)
	GetABById(context.Context, *ReqGetABById) (*RespGetABById, error)
	GetABBySh(context.Context, *ReqGetABBySh) (*RespGetABBySh, error)
	// 支付
	ThreeSetBill(context.Context, *ReqThreeSetBill) (*RespThreeSetBill, error)
	ThreeConfirm(context.Context, *ReqConfirm) (*RespConfirm, error)
	// 配置服务
	ReloadConfig(context.Context, *CReloadConfig) (*SReloadConfig, error)
	ReloadDeploy(context.Context, *CReloadDeploy) (*SReloadDeploy, error)
	GetMoney(context.Context, *ReqGetMoney) (*RespGetMoney, error)
}

func RegisterApiServiceServer(s *grpc.Server, srv ApiServiceServer) {
	s.RegisterService(&_ApiService_serviceDesc, srv)
}

func _ApiService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqPing)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ApiService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).Ping(ctx, req.(*ReqPing))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetEthBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGetEthBalance)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetEthBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ApiService/GetEthBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetEthBalance(ctx, req.(*ReqGetEthBalance))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTrans_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGetTrans)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTrans(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ApiService/GetTrans",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTrans(ctx, req.(*ReqGetTrans))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_SetSchedule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSchedule)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).SetSchedule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ApiService/SetSchedule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).SetSchedule(ctx, req.(*ReqSchedule))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetSchedule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGetSchedue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetSchedule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ApiService/GetSchedule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetSchedule(ctx, req.(*ReqGetSchedue))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_NewScheduleId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqNewScheduleId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).NewScheduleId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ApiService/NewScheduleId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).NewScheduleId(ctx, req.(*ReqNewScheduleId))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetAllSchedule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGetAllSchedule)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetAllSchedule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ApiService/GetAllSchedule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetAllSchedule(ctx, req.(*ReqGetAllSchedule))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_ResetQuo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqResetQuo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).ResetQuo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ApiService/ResetQuo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).ResetQuo(ctx, req.(*ReqResetQuo))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetQuo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGetQuo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetQuo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ApiService/GetQuo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetQuo(ctx, req.(*ReqGetQuo))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_SetPaiBan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSetPaiBan)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).SetPaiBan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ApiService/SetPaiBan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).SetPaiBan(ctx, req.(*ReqSetPaiBan))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetPaiBan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGetPaiBan)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetPaiBan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ApiService/GetPaiBan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetPaiBan(ctx, req.(*ReqGetPaiBan))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_SetAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqSetAccount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).SetAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ApiService/SetAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).SetAccount(ctx, req.(*ReqSetAccount))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGetAccount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ApiService/GetAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetAccount(ctx, req.(*ReqGetAccount))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetAccountBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGetAccountBook)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetAccountBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ApiService/GetAccountBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetAccountBook(ctx, req.(*ReqGetAccountBook))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetABById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGetABById)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetABById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ApiService/GetABById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetABById(ctx, req.(*ReqGetABById))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetABBySh_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGetABBySh)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetABBySh(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ApiService/GetABBySh",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetABBySh(ctx, req.(*ReqGetABBySh))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_ThreeSetBill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqThreeSetBill)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).ThreeSetBill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ApiService/ThreeSetBill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).ThreeSetBill(ctx, req.(*ReqThreeSetBill))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_ThreeConfirm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqConfirm)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).ThreeConfirm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ApiService/ThreeConfirm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).ThreeConfirm(ctx, req.(*ReqConfirm))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_ReloadConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CReloadConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).ReloadConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ApiService/ReloadConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).ReloadConfig(ctx, req.(*CReloadConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_ReloadDeploy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CReloadDeploy)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).ReloadDeploy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ApiService/ReloadDeploy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).ReloadDeploy(ctx, req.(*CReloadDeploy))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetMoney_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGetMoney)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetMoney(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.ApiService/GetMoney",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetMoney(ctx, req.(*ReqGetMoney))
	}
	return interceptor(ctx, in, info, handler)
}

var _ApiService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocol.ApiService",
	HandlerType: (*ApiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _ApiService_Ping_Handler,
		},
		{
			MethodName: "GetEthBalance",
			Handler:    _ApiService_GetEthBalance_Handler,
		},
		{
			MethodName: "GetTrans",
			Handler:    _ApiService_GetTrans_Handler,
		},
		{
			MethodName: "SetSchedule",
			Handler:    _ApiService_SetSchedule_Handler,
		},
		{
			MethodName: "GetSchedule",
			Handler:    _ApiService_GetSchedule_Handler,
		},
		{
			MethodName: "NewScheduleId",
			Handler:    _ApiService_NewScheduleId_Handler,
		},
		{
			MethodName: "GetAllSchedule",
			Handler:    _ApiService_GetAllSchedule_Handler,
		},
		{
			MethodName: "ResetQuo",
			Handler:    _ApiService_ResetQuo_Handler,
		},
		{
			MethodName: "GetQuo",
			Handler:    _ApiService_GetQuo_Handler,
		},
		{
			MethodName: "SetPaiBan",
			Handler:    _ApiService_SetPaiBan_Handler,
		},
		{
			MethodName: "GetPaiBan",
			Handler:    _ApiService_GetPaiBan_Handler,
		},
		{
			MethodName: "SetAccount",
			Handler:    _ApiService_SetAccount_Handler,
		},
		{
			MethodName: "GetAccount",
			Handler:    _ApiService_GetAccount_Handler,
		},
		{
			MethodName: "GetAccountBook",
			Handler:    _ApiService_GetAccountBook_Handler,
		},
		{
			MethodName: "GetABById",
			Handler:    _ApiService_GetABById_Handler,
		},
		{
			MethodName: "GetABBySh",
			Handler:    _ApiService_GetABBySh_Handler,
		},
		{
			MethodName: "ThreeSetBill",
			Handler:    _ApiService_ThreeSetBill_Handler,
		},
		{
			MethodName: "ThreeConfirm",
			Handler:    _ApiService_ThreeConfirm_Handler,
		},
		{
			MethodName: "ReloadConfig",
			Handler:    _ApiService_ReloadConfig_Handler,
		},
		{
			MethodName: "ReloadDeploy",
			Handler:    _ApiService_ReloadDeploy_Handler,
		},
		{
			MethodName: "GetMoney",
			Handler:    _ApiService_GetMoney_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1577 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0xcd, 0x6e, 0xdb, 0xc6,
	0x13, 0x17, 0x45, 0xc9, 0x96, 0xc6, 0x92, 0x9d, 0xec, 0xdf, 0x49, 0xf8, 0x67, 0x82, 0xc0, 0x5d,
	0x04, 0x88, 0x91, 0x43, 0xd2, 0xa4, 0xed, 0xa1, 0x28, 0x1a, 0x40, 0xb2, 0x13, 0xd5, 0x4d, 0x1c,
	0xbb, 0xa4, 0x83, 0x16, 0xe8, 0xa1, 0x60, 0xc4, 0xb5, 0xc5, 0x86, 0x26, 0x65, 0x92, 0x4e, 0x6a,
	0xf4, 0xd2, 0x37, 0x68, 0x4f, 0x7d, 0x82, 0xf6, 0xd2, 0x27, 0xe8, 0xb9, 0x4f, 0xd2, 0x17, 0xe8,
	0x13, 0xf4, 0x52, 0xec, 0x17, 0xb9, 0x4b, 0x52, 0xa5, 0x92, 0xa0, 0x27, 0x6b, 0x67, 0x76, 0xbe,
	0x7e, 0x33, 0x3b, 0x33, 0x34, 0xf4, 0xbd, 0x79, 0x70, 0x77, 0x9e, 0xc4, 0x59, 0x8c, 0x7a, 0xec,
	0xcf, 0x34, 0x0e, 0xed, 0x7e, 0xfc, 0xe2, 0x5b, 0x4e, 0xc4, 0x0e, 0x0c, 0x1c, 0x72, 0x36, 0x21,
	0xd9, 0xa1, 0x17, 0x8c, 0xbd, 0x08, 0x61, 0x18, 0x1c, 0xbc, 0x8e, 0x48, 0x32, 0xf2, 0xfd, 0x84,
	0xa4, 0xa9, 0x65, 0x6c, 0x19, 0xdb, 0x7d, 0x47, 0xa3, 0xa1, 0x9b, 0x00, 0xee, 0x74, 0x46, 0xfc,
	0xf3, 0x90, 0xec, 0xf9, 0x56, 0x9b, 0xdd, 0x50, 0x28, 0xf8, 0x6b, 0x18, 0x3a, 0x24, 0x9d, 0x17,
	0x4a, 0xa9, 0x40, 0xe6, 0x65, 0xe7, 0xe9, 0x4e, 0xec, 0x13, 0xa6, 0x72, 0xe8, 0x28, 0x14, 0x74,
	0x07, 0x56, 0xf9, 0xcd, 0xd4, 0x6a, 0x6f, 0x99, 0xdb, 0x6b, 0x0f, 0x2e, 0xdd, 0x95, 0xbe, 0xde,
	0xe5, 0x0c, 0x47, 0x5e, 0xc0, 0x7f, 0x1a, 0xcc, 0x63, 0xf7, 0x8d, 0x3c, 0xc6, 0x30, 0x78, 0x9e,
	0x92, 0xe4, 0x09, 0xb9, 0x70, 0xb3, 0x38, 0x21, 0xc2, 0x67, 0x8d, 0x86, 0x6e, 0x40, 0x9f, 0x9e,
	0x0f, 0xbd, 0x24, 0x25, 0x96, 0xc9, 0x2e, 0x14, 0x04, 0xca, 0x65, 0x37, 0x93, 0x20, 0x3a, 0xb1,
	0x3a, 0x9c, 0x9b, 0x13, 0xd0, 0x16, 0xac, 0xd1, 0xab, 0xd2, 0x85, 0x2e, 0xe3, 0xab, 0x24, 0x35,
	0xc4, 0x95, 0xa6, 0x10, 0xef, 0x71, 0xfc, 0xdc, 0x65, 0xf1, 0xc3, 0xdf, 0xc3, 0x1a, 0x4f, 0xe2,
	0x7e, 0x1c, 0x91, 0x8b, 0xb2, 0x37, 0x46, 0xd5, 0x9b, 0x1b, 0xd0, 0x77, 0x33, 0x2f, 0xc9, 0x8e,
	0x82, 0x53, 0x0e, 0x86, 0xe9, 0x14, 0x04, 0x64, 0xc1, 0xea, 0xa3, 0xc8, 0x67, 0x3c, 0x93, 0xf1,
	0xe4, 0x11, 0x21, 0xe8, 0x1c, 0x7a, 0x27, 0x84, 0x01, 0x30, 0x74, 0xd8, 0x6f, 0xfc, 0x3b, 0x4b,
	0x08, 0x4b, 0x37, 0x37, 0xdf, 0x94, 0x6d, 0x1b, 0x7a, 0xa3, 0x30, 0x64, 0x77, 0x99, 0x6d, 0xc3,
	0xc9, 0xcf, 0x68, 0x13, 0xba, 0xfb, 0x71, 0x94, 0xcd, 0x98, 0x61, 0xc3, 0xe1, 0x07, 0x6a, 0x76,
	0xd7, 0xcb, 0xb8, 0x59, 0xc3, 0x61, 0xbf, 0xd1, 0x2d, 0xe8, 0x8e, 0x83, 0x30, 0xa4, 0x60, 0x53,
	0x38, 0xd7, 0x0b, 0x38, 0x29, 0xd9, 0xe1, 0x4c, 0x1a, 0x28, 0x75, 0x72, 0x27, 0x3e, 0x8f, 0x32,
	0x6b, 0x85, 0xb9, 0x52, 0x10, 0xf0, 0x87, 0x70, 0x89, 0xe3, 0xf6, 0x28, 0x9b, 0x8d, 0xbd, 0xd0,
	0x8b, 0xa6, 0xa4, 0x19, 0x3c, 0xbc, 0x0f, 0x97, 0x45, 0xbc, 0x8a, 0x58, 0x53, 0xd0, 0x16, 0xac,
	0x8a, 0xab, 0xa2, 0xf8, 0xe4, 0x11, 0xff, 0x65, 0xb0, 0xec, 0xc9, 0xf7, 0xb3, 0x44, 0xf6, 0xfe,
	0xeb, 0x6a, 0xc6, 0x30, 0x90, 0xde, 0x3c, 0xf3, 0x4e, 0x89, 0x28, 0x67, 0x8d, 0x86, 0x6e, 0x82,
	0xe9, 0xa4, 0xb2, 0x96, 0x07, 0x05, 0xf8, 0x4e, 0xea, 0x50, 0x06, 0x8d, 0x77, 0x9f, 0xa4, 0x29,
	0x2d, 0x96, 0x55, 0x1e, 0xaf, 0x38, 0xe2, 0x63, 0x5e, 0x2e, 0x79, 0xbc, 0x4d, 0xc8, 0x21, 0xe8,
	0x7c, 0xe6, 0xa5, 0x33, 0x11, 0x25, 0xfb, 0x5d, 0xf1, 0xd0, 0xac, 0x7a, 0x88, 0x9f, 0xd3, 0x57,
	0x44, 0x93, 0xcb, 0xa9, 0x4b, 0x02, 0xab, 0xa9, 0x6d, 0xd7, 0xa8, 0xfd, 0xd1, 0x80, 0x75, 0x91,
	0x7e, 0xa9, 0xb8, 0x29, 0x82, 0xfb, 0xd0, 0x1b, 0x4d, 0xa7, 0xb4, 0xe2, 0x64, 0x7f, 0xbb, 0x52,
	0x00, 0xc6, 0xec, 0x73, 0xae, 0x93, 0x5f, 0x43, 0x77, 0xa0, 0x2f, 0xad, 0xa6, 0x96, 0x59, 0x03,
	0x72, 0xc1, 0xc6, 0xbf, 0x19, 0x2c, 0x52, 0x97, 0x64, 0x42, 0xbc, 0x52, 0x20, 0x46, 0x53, 0x81,
	0xb4, 0xff, 0xb5, 0x40, 0xcc, 0x72, 0x81, 0x7c, 0xcc, 0xf5, 0x0b, 0x73, 0x19, 0xab, 0xa0, 0x85,
	0x41, 0x69, 0x57, 0xf1, 0xfb, 0x1c, 0x3d, 0xc5, 0xd9, 0xa6, 0xe6, 0x76, 0x5f, 0xe6, 0x51, 0x0a,
	0x34, 0xbf, 0xd0, 0x97, 0x79, 0x8a, 0x96, 0x34, 0x52, 0x89, 0xa8, 0xbd, 0x7c, 0x44, 0x4f, 0x68,
	0x3b, 0x60, 0xfe, 0x85, 0xe1, 0x1b, 0x3c, 0xe2, 0x4d, 0xe8, 0xd2, 0x46, 0x94, 0x32, 0x53, 0x1d,
	0x87, 0x1f, 0xf0, 0xcf, 0x06, 0x20, 0xe9, 0xba, 0xa2, 0xae, 0x79, 0x80, 0x2a, 0xe5, 0xd2, 0x2e,
	0x97, 0x8b, 0xeb, 0x2b, 0xe5, 0x52, 0x18, 0x36, 0x15, 0xc3, 0xd4, 0x02, 0xfb, 0xc1, 0x3b, 0x65,
	0x87, 0xb1, 0x14, 0x0a, 0x9e, 0x40, 0x9f, 0x47, 0xf9, 0xc5, 0x79, 0x4c, 0x3b, 0xb8, 0x0c, 0x45,
	0x84, 0x96, 0x9f, 0x1b, 0x97, 0x83, 0x31, 0x80, 0x08, 0x90, 0x6a, 0x6a, 0x0a, 0x8c, 0xcf, 0x83,
	0x7c, 0x50, 0xf0, 0x03, 0x26, 0xac, 0x63, 0x3a, 0x24, 0x6d, 0x76, 0xc7, 0x86, 0x5e, 0xa9, 0x4f,
	0xe6, 0xe7, 0x92, 0xab, 0x66, 0xc5, 0x55, 0xcc, 0x3b, 0x55, 0x6e, 0x07, 0x41, 0xe7, 0x71, 0xe8,
	0x9d, 0x30, 0x1b, 0x3d, 0x87, 0xfd, 0xc6, 0xef, 0xc9, 0xd1, 0x7b, 0x94, 0x78, 0x51, 0x9a, 0x37,
	0x2b, 0xa3, 0x68, 0x56, 0x52, 0x8d, 0x7a, 0xa7, 0xa2, 0xa6, 0x0f, 0xab, 0x0e, 0x39, 0x3b, 0x0c,
	0xa2, 0x13, 0x0c, 0xd0, 0xa3, 0xd7, 0xd9, 0xef, 0x6d, 0x36, 0xa0, 0x9e, 0x91, 0xd7, 0x85, 0x57,
	0x14, 0x92, 0x20, 0xf2, 0xc9, 0x77, 0xc2, 0x06, 0x3f, 0xe0, 0x2f, 0xf9, 0x50, 0xd2, 0xaf, 0x36,
	0xa1, 0xbb, 0x4c, 0xbf, 0x7b, 0x2a, 0x17, 0xc4, 0xd1, 0x78, 0x7c, 0xe1, 0xce, 0x68, 0x63, 0x3f,
	0x48, 0x7c, 0x92, 0xec, 0xf9, 0x96, 0xb1, 0x65, 0xd2, 0xc6, 0x2e, 0x8e, 0x4b, 0x69, 0xfb, 0x2a,
	0x5f, 0x0d, 0x85, 0xba, 0x26, 0x17, 0x6f, 0x83, 0x79, 0xe0, 0xd7, 0xb4, 0x4d, 0x66, 0x74, 0x37,
	0x0c, 0x5e, 0x91, 0xc4, 0xa1, 0x37, 0x74, 0x3f, 0xf7, 0x7c, 0xdd, 0x4f, 0xe3, 0xdd, 0xfc, 0x5c,
	0x02, 0xca, 0xdb, 0x60, 0x8e, 0x5e, 0xd4, 0xf8, 0x29, 0xda, 0xc4, 0x38, 0x8e, 0x5f, 0x3a, 0xf4,
	0x06, 0xfe, 0xd5, 0x80, 0x0d, 0x87, 0x9c, 0x1d, 0xcd, 0x12, 0x42, 0x5c, 0x92, 0xd1, 0x35, 0x65,
	0xb9, 0x85, 0xad, 0xe8, 0xc7, 0xed, 0xa6, 0x81, 0x5d, 0x33, 0x0e, 0x8b, 0x97, 0xd4, 0x55, 0x5e,
	0x92, 0x8a, 0xd2, 0x8a, 0x86, 0x12, 0x7e, 0x4c, 0x4b, 0x2f, 0x9d, 0x6b, 0x7e, 0xbe, 0xc5, 0xa8,
	0xc6, 0x3f, 0x19, 0xf4, 0xc1, 0x9f, 0xed, 0xc4, 0xd1, 0x71, 0x90, 0x9c, 0xbe, 0x73, 0xa8, 0x8a,
	0xc3, 0xa6, 0x9e, 0xd6, 0x6d, 0xd8, 0x60, 0xef, 0xeb, 0x98, 0x24, 0xbb, 0x24, 0xf3, 0x82, 0x30,
	0x15, 0x9b, 0x4d, 0x99, 0x8c, 0x47, 0xf4, 0xcd, 0xa6, 0x73, 0xe9, 0xd2, 0xdb, 0x44, 0x75, 0x90,
	0x37, 0xfd, 0x22, 0xbf, 0x4b, 0xc4, 0xa6, 0x78, 0xdf, 0xd6, 0xe1, 0xfe, 0x45, 0x69, 0xfc, 0x8a,
	0xca, 0x25, 0xd6, 0xca, 0x7a, 0x85, 0x45, 0xbe, 0x4d, 0x35, 0xdf, 0x9b, 0xd0, 0x75, 0x8e, 0x69,
	0xf3, 0xe9, 0xb0, 0xe6, 0xc3, 0x0f, 0x75, 0xd0, 0x75, 0xeb, 0xa1, 0x7b, 0xce, 0x8a, 0x97, 0x4f,
	0xa7, 0xbd, 0x68, 0x1a, 0x9f, 0xb2, 0x51, 0xb7, 0x13, 0x9f, 0xce, 0xbd, 0xe8, 0x82, 0xd5, 0x9e,
	0x88, 0x5a, 0x21, 0x95, 0x71, 0x69, 0x57, 0x07, 0xf6, 0x03, 0x5e, 0x6c, 0x9a, 0xde, 0xa6, 0xbd,
	0x60, 0x57, 0x3e, 0xf8, 0xf1, 0x05, 0xdb, 0x09, 0x9b, 0xd1, 0xaf, 0x4b, 0xe4, 0xbd, 0xfc, 0xa1,
	0x0b, 0x35, 0x4d, 0x66, 0xff, 0x68, 0xc3, 0x70, 0xc7, 0x21, 0x61, 0xec, 0xf9, 0xac, 0x80, 0x4e,
	0xd0, 0x6d, 0xd8, 0x38, 0x98, 0x93, 0xc4, 0xcb, 0xc8, 0x37, 0x59, 0x70, 0x4a, 0xe2, 0xf3, 0x4c,
	0x88, 0xad, 0x0b, 0xf2, 0x11, 0xa7, 0xd2, 0x67, 0xfa, 0x34, 0x9e, 0x7a, 0xa1, 0x0e, 0x84, 0x46,
	0x63, 0x5f, 0x58, 0x71, 0x92, 0x89, 0xe2, 0x66, 0xbf, 0xa9, 0x4b, 0xa3, 0xe9, 0x54, 0x4a, 0xf1,
	0xa2, 0x56, 0x28, 0x94, 0xff, 0x28, 0x9b, 0xe9, 0x1f, 0x9f, 0x0a, 0x05, 0x5d, 0x85, 0x95, 0xbd,
	0xf9, 0x74, 0x37, 0x48, 0xc4, 0x1b, 0x17, 0x27, 0x3a, 0x1b, 0x5d, 0x92, 0xbc, 0x62, 0xd5, 0xc3,
	0x97, 0xf4, 0xfc, 0x4c, 0x75, 0xee, 0x7b, 0x91, 0x77, 0xc2, 0x36, 0x46, 0xab, 0xc7, 0x75, 0x16,
	0x14, 0x74, 0x0b, 0x86, 0xe2, 0x74, 0x38, 0x4b, 0xbc, 0x94, 0x58, 0x7d, 0x76, 0x45, 0x27, 0x52,
	0xcb, 0x4f, 0xc8, 0x05, 0xb5, 0x0c, 0xdc, 0x32, 0x3f, 0xe1, 0x0d, 0x18, 0xba, 0x2a, 0x86, 0x78,
	0x27, 0x07, 0x75, 0x97, 0xcc, 0xc3, 0x98, 0x35, 0x26, 0x3d, 0x93, 0xab, 0xca, 0x1b, 0x12, 0x2f,
	0x44, 0x96, 0xbc, 0x38, 0x2a, 0x5a, 0xb9, 0x92, 0x07, 0x7f, 0x03, 0xc0, 0x68, 0x1e, 0xd0, 0xa0,
	0x82, 0x29, 0x41, 0xf7, 0xa0, 0x43, 0xa7, 0x2a, 0xba, 0xac, 0x6c, 0xd2, 0x7c, 0xe8, 0xda, 0x48,
	0x25, 0x89, 0xe1, 0xdb, 0x42, 0x9f, 0xc3, 0x50, 0xff, 0xca, 0xb3, 0x35, 0x49, 0x8d, 0x67, 0x5f,
	0xd7, 0x55, 0x68, 0x4c, 0xdc, 0x42, 0x9f, 0x40, 0x2f, 0xdf, 0x00, 0xae, 0x94, 0xd5, 0x30, 0xb2,
	0x7d, 0xb5, 0xa2, 0x81, 0xd1, 0x71, 0x0b, 0x3d, 0x84, 0x35, 0x57, 0x7e, 0x6f, 0x84, 0xa4, 0x24,
	0x2f, 0xc9, 0x65, 0x79, 0x49, 0xc7, 0x2d, 0x34, 0x86, 0xb5, 0x89, 0x22, 0x7f, 0xad, 0x6c, 0x5f,
	0x7c, 0xc9, 0xd8, 0x56, 0xc5, 0x03, 0xc1, 0xe1, 0x60, 0xe8, 0xdb, 0x85, 0x0e, 0x86, 0xc6, 0x2b,
	0x83, 0xa1, 0x31, 0x71, 0x0b, 0xed, 0xc3, 0x7a, 0x69, 0xc3, 0xbd, 0x5e, 0x76, 0x49, 0x61, 0xda,
	0x37, 0x2a, 0x6e, 0x29, 0x5c, 0x8e, 0x6d, 0xbe, 0xa4, 0xe9, 0xd8, 0x48, 0x72, 0x19, 0x1b, 0x49,
	0xc7, 0x2d, 0xf4, 0x11, 0xac, 0x88, 0x65, 0xf4, 0x7f, 0x65, 0x1f, 0xa8, 0xe0, 0x66, 0xc5, 0x36,
	0x17, 0x7b, 0x08, 0xfd, 0xe2, 0x1f, 0x34, 0x57, 0xf5, 0x84, 0x48, 0xba, 0x7d, 0xad, 0x94, 0x11,
	0xc9, 0xe0, 0xf2, 0x93, 0x05, 0xf2, 0x93, 0x45, 0xf2, 0x13, 0x45, 0x7e, 0x04, 0xa0, 0x7c, 0x44,
	0x5d, 0x2b, 0x3b, 0x20, 0x18, 0xe5, 0x8c, 0x16, 0x1c, 0xae, 0x62, 0xb2, 0x48, 0xc5, 0x64, 0xa1,
	0x8a, 0x89, 0xaa, 0x42, 0x24, 0x52, 0x99, 0x58, 0xd7, 0x17, 0xa8, 0xa1, 0xcc, 0xba, 0x44, 0x16,
	0xdc, 0x1c, 0x14, 0xb1, 0x72, 0x55, 0x40, 0xe1, 0xf4, 0x1a, 0x50, 0x38, 0x43, 0x93, 0x77, 0x67,
	0xf5, 0xf2, 0xee, 0x6c, 0x81, 0xbc, 0x3b, 0xc3, 0x2d, 0x34, 0x81, 0x81, 0xb6, 0xf0, 0xfc, 0x5f,
	0x53, 0xa1, 0xb2, 0x6c, 0x5b, 0xd7, 0xa2, 0xf2, 0x70, 0x0b, 0x7d, 0x2a, 0x14, 0xc9, 0x1d, 0x43,
	0xab, 0x22, 0xb9, 0x0c, 0xd9, 0x57, 0x74, 0x1d, 0x82, 0xcc, 0xde, 0xeb, 0x40, 0x1b, 0x31, 0x8a,
	0xcb, 0xda, 0xec, 0x51, 0x63, 0xd1, 0x1b, 0xaa, 0xa2, 0x43, 0x74, 0xd4, 0xaa, 0x0e, 0xce, 0xa8,
	0xd1, 0xc1, 0x19, 0x79, 0xd3, 0xe2, 0xab, 0x43, 0xa5, 0x69, 0x31, 0x72, 0x4d, 0xd3, 0xe2, 0xdf,
	0x68, 0xad, 0xb1, 0xf9, 0x83, 0x61, 0xbc, 0x58, 0x61, 0xdc, 0x0f, 0xfe, 0x09, 0x00, 0x00, 0xff,
	0xff, 0x2f, 0xa7, 0xa2, 0x31, 0x88, 0x16, 0x00, 0x00,
}
