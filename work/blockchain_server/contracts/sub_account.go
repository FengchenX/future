// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contracts

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// TokenABI is the input ABI used to generate the binding from.
const TokenABI = "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAllAccountsAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"payer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"issueCode\",\"type\":\"string\"},{\"name\":\"roles\",\"type\":\"bytes32[]\"},{\"name\":\"rtaios\",\"type\":\"uint256[]\"},{\"name\":\"subWays\",\"type\":\"uint256[]\"},{\"name\":\"quotaWays\",\"type\":\"uint256[]\"},{\"name\":\"resetTimes\",\"type\":\"uint256[]\"}],\"name\":\"issueSubCxt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"accountAddr\",\"type\":\"address\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"bankCard\",\"type\":\"string\"},{\"name\":\"weChat\",\"type\":\"string\"},{\"name\":\"alipay\",\"type\":\"string\"},{\"name\":\"telephone\",\"type\":\"string\"}],\"name\":\"addAccount\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"totalConsume\",\"type\":\"uint256\"},{\"name\":\"ratio\",\"type\":\"uint256\"}],\"name\":\"calculateByRatio\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"source\",\"type\":\"string\"}],\"name\":\"StringToBytesVer1\",\"outputs\":[{\"name\":\"result\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"issueCode\",\"type\":\"string\"},{\"name\":\"totalConsume\",\"type\":\"uint256\"},{\"name\":\"transferId\",\"type\":\"string\"}],\"name\":\"settleAccounts\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"joiner\",\"type\":\"address\"},{\"name\":\"ratio\",\"type\":\"uint256\"},{\"name\":\"subWay\",\"type\":\"uint256\"},{\"name\":\"calculate\",\"type\":\"uint256\"},{\"name\":\"issueCode\",\"type\":\"string\"},{\"name\":\"transferId\",\"type\":\"string\"},{\"name\":\"c_totalConsume\",\"type\":\"uint256\"}],\"name\":\"insertLedgerCxt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"subCode\",\"type\":\"string\"},{\"name\":\"setAddr\",\"type\":\"address\"}],\"name\":\"resetSubCodeQuotaData\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"uaddr\",\"type\":\"address\"},{\"name\":\"transferId\",\"type\":\"string\"}],\"name\":\"getOneLedgerCxt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"telephone\",\"type\":\"string\"}],\"name\":\"getOneAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"totalConsume\",\"type\":\"uint256\"},{\"name\":\"ratio\",\"type\":\"uint256\"},{\"name\":\"c_ratio\",\"type\":\"uint256\"}],\"name\":\"afterCalculateByRatio\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"subCode\",\"type\":\"string\"},{\"name\":\"setAddr\",\"type\":\"address\"},{\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"setSubCodeQuotaData\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"postscript\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSubAccountKeysLen\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"faddr\",\"type\":\"address\"}],\"name\":\"getbindIssueToAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"subCode\",\"type\":\"string\"},{\"name\":\"setAddr\",\"type\":\"address\"}],\"name\":\"getSubCodeQuotaData\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"uaddr\",\"type\":\"address\"},{\"name\":\"transferId\",\"type\":\"string\"},{\"name\":\"transferDetails\",\"type\":\"string\"}],\"name\":\"updateCalulateLedger\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"issueCode\",\"type\":\"string\"}],\"name\":\"getIssueSubCxt\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"},{\"name\":\"\",\"type\":\"uint256[]\"},{\"name\":\"\",\"type\":\"uint256[]\"},{\"name\":\"\",\"type\":\"uint256[]\"},{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"issueCode\",\"type\":\"string\"},{\"name\":\"roles\",\"type\":\"bytes32[]\"},{\"name\":\"joiners\",\"type\":\"address[]\"}],\"name\":\"IssueScheduling\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"joiner\",\"type\":\"address\"},{\"name\":\"calculate\",\"type\":\"uint256\"},{\"name\":\"transferId\",\"type\":\"string\"}],\"name\":\"updateOneLedger\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"transferId\",\"type\":\"string\"}],\"name\":\"checkLedgerById\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"subAccountKeys\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"transferId\",\"type\":\"string\"}],\"name\":\"getLedgerSubAddrs\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"Accounts\",\"outputs\":[{\"name\":\"accountAddr\",\"type\":\"address\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"telephone\",\"type\":\"string\"},{\"name\":\"bankCard\",\"type\":\"string\"},{\"name\":\"weChat\",\"type\":\"string\"},{\"name\":\"alipay\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"source\",\"type\":\"string\"}],\"name\":\"stringToBytesVer2\",\"outputs\":[{\"name\":\"result\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"issueCode\",\"type\":\"string\"}],\"name\":\"GetSchedulingCxt\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"},{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAllSubKeysLen\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"accountAddr\",\"type\":\"address\"}],\"name\":\"getAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"name\":\"initpayer\",\"type\":\"address\"},{\"name\":\"init_postscript\",\"type\":\"string\"},{\"name\":\"decimalUnits\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]"

// TokenBin is the compiled bytecode used for deploying new contracts.
const TokenBin = ``

// DeployToken deploys a new Ethereum contract, binding an instance of Token to it.
func DeployToken(auth *bind.TransactOpts, backend bind.ContractBackend, tokenName string, tokenSymbol string, initpayer common.Address, init_postscript string, decimalUnits uint8) (common.Address, *types.Transaction, *Token, error) {
	parsed, err := abi.JSON(strings.NewReader(TokenABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(TokenBin), backend, tokenName, tokenSymbol, initpayer, init_postscript, decimalUnits)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Token{TokenCaller: TokenCaller{contract: contract}, TokenTransactor: TokenTransactor{contract: contract}, TokenFilterer: TokenFilterer{contract: contract}}, nil
}

// Token is an auto generated Go binding around an Ethereum contract.
type Token struct {
	TokenCaller     // Read-only binding to the contract
	TokenTransactor // Write-only binding to the contract
	TokenFilterer   // Log filterer for contract events
}

// TokenCaller is an auto generated read-only Go binding around an Ethereum contract.
type TokenCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TokenTransactor is an auto generated write-only Go binding around an Ethereum contract.
type TokenTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TokenFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type TokenFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TokenSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type TokenSession struct {
	Contract     *Token            // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// TokenCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type TokenCallerSession struct {
	Contract *TokenCaller  // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// TokenTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type TokenTransactorSession struct {
	Contract     *TokenTransactor  // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// TokenRaw is an auto generated low-level Go binding around an Ethereum contract.
type TokenRaw struct {
	Contract *Token // Generic contract binding to access the raw methods on
}

// TokenCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type TokenCallerRaw struct {
	Contract *TokenCaller // Generic read-only contract binding to access the raw methods on
}

// TokenTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type TokenTransactorRaw struct {
	Contract *TokenTransactor // Generic write-only contract binding to access the raw methods on
}

// NewToken creates a new instance of Token, bound to a specific deployed contract.
func NewToken(address common.Address, backend bind.ContractBackend) (*Token, error) {
	contract, err := bindToken(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Token{TokenCaller: TokenCaller{contract: contract}, TokenTransactor: TokenTransactor{contract: contract}, TokenFilterer: TokenFilterer{contract: contract}}, nil
}

// NewTokenCaller creates a new read-only instance of Token, bound to a specific deployed contract.
func NewTokenCaller(address common.Address, caller bind.ContractCaller) (*TokenCaller, error) {
	contract, err := bindToken(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &TokenCaller{contract: contract}, nil
}

// NewTokenTransactor creates a new write-only instance of Token, bound to a specific deployed contract.
func NewTokenTransactor(address common.Address, transactor bind.ContractTransactor) (*TokenTransactor, error) {
	contract, err := bindToken(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &TokenTransactor{contract: contract}, nil
}

// NewTokenFilterer creates a new log filterer instance of Token, bound to a specific deployed contract.
func NewTokenFilterer(address common.Address, filterer bind.ContractFilterer) (*TokenFilterer, error) {
	contract, err := bindToken(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &TokenFilterer{contract: contract}, nil
}

// bindToken binds a generic wrapper to an already deployed contract.
func bindToken(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(TokenABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Token *TokenRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Token.Contract.TokenCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Token *TokenRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Token.Contract.TokenTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Token *TokenRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Token.Contract.TokenTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Token *TokenCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Token.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Token *TokenTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Token.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Token *TokenTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Token.Contract.contract.Transact(opts, method, params...)
}

// Accounts is a free data retrieval call binding the contract method 0xe203b506.
//
// Solidity: function Accounts( address) constant returns(accountAddr address, name string, telephone string, bankCard string, weChat string, alipay string)
func (_Token *TokenCaller) Accounts(opts *bind.CallOpts, arg0 common.Address) (struct {
	AccountAddr common.Address
	Name        string
	Telephone   string
	BankCard    string
	WeChat      string
	Alipay      string
}, error) {
	ret := new(struct {
		AccountAddr common.Address
		Name        string
		Telephone   string
		BankCard    string
		WeChat      string
		Alipay      string
	})
	out := ret
	err := _Token.contract.Call(opts, out, "Accounts", arg0)
	return *ret, err
}

// Accounts is a free data retrieval call binding the contract method 0xe203b506.
//
// Solidity: function Accounts( address) constant returns(accountAddr address, name string, telephone string, bankCard string, weChat string, alipay string)
func (_Token *TokenSession) Accounts(arg0 common.Address) (struct {
	AccountAddr common.Address
	Name        string
	Telephone   string
	BankCard    string
	WeChat      string
	Alipay      string
}, error) {
	return _Token.Contract.Accounts(&_Token.CallOpts, arg0)
}

// Accounts is a free data retrieval call binding the contract method 0xe203b506.
//
// Solidity: function Accounts( address) constant returns(accountAddr address, name string, telephone string, bankCard string, weChat string, alipay string)
func (_Token *TokenCallerSession) Accounts(arg0 common.Address) (struct {
	AccountAddr common.Address
	Name        string
	Telephone   string
	BankCard    string
	WeChat      string
	Alipay      string
}, error) {
	return _Token.Contract.Accounts(&_Token.CallOpts, arg0)
}

// GetSchedulingCxt is a free data retrieval call binding the contract method 0xf0e2476a.
//
// Solidity: function GetSchedulingCxt(issueCode string) constant returns(bytes32[], address[])
func (_Token *TokenCaller) GetSchedulingCxt(opts *bind.CallOpts, issueCode string) ([][32]byte, []common.Address, error) {
	var (
		ret0 = new([][32]byte)
		ret1 = new([]common.Address)
	)
	out := &[]interface{}{
		ret0,
		ret1,
	}
	err := _Token.contract.Call(opts, out, "GetSchedulingCxt", issueCode)
	return *ret0, *ret1, err
}

// GetSchedulingCxt is a free data retrieval call binding the contract method 0xf0e2476a.
//
// Solidity: function GetSchedulingCxt(issueCode string) constant returns(bytes32[], address[])
func (_Token *TokenSession) GetSchedulingCxt(issueCode string) ([][32]byte, []common.Address, error) {
	return _Token.Contract.GetSchedulingCxt(&_Token.CallOpts, issueCode)
}

// GetSchedulingCxt is a free data retrieval call binding the contract method 0xf0e2476a.
//
// Solidity: function GetSchedulingCxt(issueCode string) constant returns(bytes32[], address[])
func (_Token *TokenCallerSession) GetSchedulingCxt(issueCode string) ([][32]byte, []common.Address, error) {
	return _Token.Contract.GetSchedulingCxt(&_Token.CallOpts, issueCode)
}

// Balances is a free data retrieval call binding the contract method 0x27e235e3.
//
// Solidity: function balances( address) constant returns(uint256)
func (_Token *TokenCaller) Balances(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "balances", arg0)
	return *ret0, err
}

// Balances is a free data retrieval call binding the contract method 0x27e235e3.
//
// Solidity: function balances( address) constant returns(uint256)
func (_Token *TokenSession) Balances(arg0 common.Address) (*big.Int, error) {
	return _Token.Contract.Balances(&_Token.CallOpts, arg0)
}

// Balances is a free data retrieval call binding the contract method 0x27e235e3.
//
// Solidity: function balances( address) constant returns(uint256)
func (_Token *TokenCallerSession) Balances(arg0 common.Address) (*big.Int, error) {
	return _Token.Contract.Balances(&_Token.CallOpts, arg0)
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() constant returns(uint8)
func (_Token *TokenCaller) Decimals(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "decimals")
	return *ret0, err
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() constant returns(uint8)
func (_Token *TokenSession) Decimals() (uint8, error) {
	return _Token.Contract.Decimals(&_Token.CallOpts)
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() constant returns(uint8)
func (_Token *TokenCallerSession) Decimals() (uint8, error) {
	return _Token.Contract.Decimals(&_Token.CallOpts)
}

// GetAccount is a free data retrieval call binding the contract method 0xfbcbc0f1.
//
// Solidity: function getAccount(accountAddr address) constant returns(string, string, string, string, string)
func (_Token *TokenCaller) GetAccount(opts *bind.CallOpts, accountAddr common.Address) (string, string, string, string, string, error) {
	var (
		ret0 = new(string)
		ret1 = new(string)
		ret2 = new(string)
		ret3 = new(string)
		ret4 = new(string)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
		ret3,
		ret4,
	}
	err := _Token.contract.Call(opts, out, "getAccount", accountAddr)
	return *ret0, *ret1, *ret2, *ret3, *ret4, err
}

// GetAccount is a free data retrieval call binding the contract method 0xfbcbc0f1.
//
// Solidity: function getAccount(accountAddr address) constant returns(string, string, string, string, string)
func (_Token *TokenSession) GetAccount(accountAddr common.Address) (string, string, string, string, string, error) {
	return _Token.Contract.GetAccount(&_Token.CallOpts, accountAddr)
}

// GetAccount is a free data retrieval call binding the contract method 0xfbcbc0f1.
//
// Solidity: function getAccount(accountAddr address) constant returns(string, string, string, string, string)
func (_Token *TokenCallerSession) GetAccount(accountAddr common.Address) (string, string, string, string, string, error) {
	return _Token.Contract.GetAccount(&_Token.CallOpts, accountAddr)
}

// GetAllAccountsAddr is a free data retrieval call binding the contract method 0x0edee5d3.
//
// Solidity: function getAllAccountsAddr() constant returns(address[])
func (_Token *TokenCaller) GetAllAccountsAddr(opts *bind.CallOpts) ([]common.Address, error) {
	var (
		ret0 = new([]common.Address)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "getAllAccountsAddr")
	return *ret0, err
}

// GetAllAccountsAddr is a free data retrieval call binding the contract method 0x0edee5d3.
//
// Solidity: function getAllAccountsAddr() constant returns(address[])
func (_Token *TokenSession) GetAllAccountsAddr() ([]common.Address, error) {
	return _Token.Contract.GetAllAccountsAddr(&_Token.CallOpts)
}

// GetAllAccountsAddr is a free data retrieval call binding the contract method 0x0edee5d3.
//
// Solidity: function getAllAccountsAddr() constant returns(address[])
func (_Token *TokenCallerSession) GetAllAccountsAddr() ([]common.Address, error) {
	return _Token.Contract.GetAllAccountsAddr(&_Token.CallOpts)
}

// GetAllSubKeysLen is a free data retrieval call binding the contract method 0xf51d7313.
//
// Solidity: function getAllSubKeysLen() constant returns(uint256)
func (_Token *TokenCaller) GetAllSubKeysLen(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "getAllSubKeysLen")
	return *ret0, err
}

// GetAllSubKeysLen is a free data retrieval call binding the contract method 0xf51d7313.
//
// Solidity: function getAllSubKeysLen() constant returns(uint256)
func (_Token *TokenSession) GetAllSubKeysLen() (*big.Int, error) {
	return _Token.Contract.GetAllSubKeysLen(&_Token.CallOpts)
}

// GetAllSubKeysLen is a free data retrieval call binding the contract method 0xf51d7313.
//
// Solidity: function getAllSubKeysLen() constant returns(uint256)
func (_Token *TokenCallerSession) GetAllSubKeysLen() (*big.Int, error) {
	return _Token.Contract.GetAllSubKeysLen(&_Token.CallOpts)
}

// GetBalance is a free data retrieval call binding the contract method 0xf8b2cb4f.
//
// Solidity: function getBalance(account address) constant returns(uint256)
func (_Token *TokenCaller) GetBalance(opts *bind.CallOpts, account common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "getBalance", account)
	return *ret0, err
}

// GetBalance is a free data retrieval call binding the contract method 0xf8b2cb4f.
//
// Solidity: function getBalance(account address) constant returns(uint256)
func (_Token *TokenSession) GetBalance(account common.Address) (*big.Int, error) {
	return _Token.Contract.GetBalance(&_Token.CallOpts, account)
}

// GetBalance is a free data retrieval call binding the contract method 0xf8b2cb4f.
//
// Solidity: function getBalance(account address) constant returns(uint256)
func (_Token *TokenCallerSession) GetBalance(account common.Address) (*big.Int, error) {
	return _Token.Contract.GetBalance(&_Token.CallOpts, account)
}

// GetIssueSubCxt is a free data retrieval call binding the contract method 0xc3c8e51d.
//
// Solidity: function getIssueSubCxt(issueCode string) constant returns(bytes32[], uint256[], uint256[], uint256[], uint256[])
func (_Token *TokenCaller) GetIssueSubCxt(opts *bind.CallOpts, issueCode string) ([][32]byte, []*big.Int, []*big.Int, []*big.Int, []*big.Int, error) {
	var (
		ret0 = new([][32]byte)
		ret1 = new([]*big.Int)
		ret2 = new([]*big.Int)
		ret3 = new([]*big.Int)
		ret4 = new([]*big.Int)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
		ret3,
		ret4,
	}
	err := _Token.contract.Call(opts, out, "getIssueSubCxt", issueCode)
	return *ret0, *ret1, *ret2, *ret3, *ret4, err
}

// GetIssueSubCxt is a free data retrieval call binding the contract method 0xc3c8e51d.
//
// Solidity: function getIssueSubCxt(issueCode string) constant returns(bytes32[], uint256[], uint256[], uint256[], uint256[])
func (_Token *TokenSession) GetIssueSubCxt(issueCode string) ([][32]byte, []*big.Int, []*big.Int, []*big.Int, []*big.Int, error) {
	return _Token.Contract.GetIssueSubCxt(&_Token.CallOpts, issueCode)
}

// GetIssueSubCxt is a free data retrieval call binding the contract method 0xc3c8e51d.
//
// Solidity: function getIssueSubCxt(issueCode string) constant returns(bytes32[], uint256[], uint256[], uint256[], uint256[])
func (_Token *TokenCallerSession) GetIssueSubCxt(issueCode string) ([][32]byte, []*big.Int, []*big.Int, []*big.Int, []*big.Int, error) {
	return _Token.Contract.GetIssueSubCxt(&_Token.CallOpts, issueCode)
}

// GetLedgerSubAddrs is a free data retrieval call binding the contract method 0xdd2c6426.
//
// Solidity: function getLedgerSubAddrs(transferId string) constant returns(address[])
func (_Token *TokenCaller) GetLedgerSubAddrs(opts *bind.CallOpts, transferId string) ([]common.Address, error) {
	var (
		ret0 = new([]common.Address)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "getLedgerSubAddrs", transferId)
	return *ret0, err
}

// GetLedgerSubAddrs is a free data retrieval call binding the contract method 0xdd2c6426.
//
// Solidity: function getLedgerSubAddrs(transferId string) constant returns(address[])
func (_Token *TokenSession) GetLedgerSubAddrs(transferId string) ([]common.Address, error) {
	return _Token.Contract.GetLedgerSubAddrs(&_Token.CallOpts, transferId)
}

// GetLedgerSubAddrs is a free data retrieval call binding the contract method 0xdd2c6426.
//
// Solidity: function getLedgerSubAddrs(transferId string) constant returns(address[])
func (_Token *TokenCallerSession) GetLedgerSubAddrs(transferId string) ([]common.Address, error) {
	return _Token.Contract.GetLedgerSubAddrs(&_Token.CallOpts, transferId)
}

// GetOneAddress is a free data retrieval call binding the contract method 0x6bd449aa.
//
// Solidity: function getOneAddress(telephone string) constant returns(address[])
func (_Token *TokenCaller) GetOneAddress(opts *bind.CallOpts, telephone string) ([]common.Address, error) {
	var (
		ret0 = new([]common.Address)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "getOneAddress", telephone)
	return *ret0, err
}

// GetOneAddress is a free data retrieval call binding the contract method 0x6bd449aa.
//
// Solidity: function getOneAddress(telephone string) constant returns(address[])
func (_Token *TokenSession) GetOneAddress(telephone string) ([]common.Address, error) {
	return _Token.Contract.GetOneAddress(&_Token.CallOpts, telephone)
}

// GetOneAddress is a free data retrieval call binding the contract method 0x6bd449aa.
//
// Solidity: function getOneAddress(telephone string) constant returns(address[])
func (_Token *TokenCallerSession) GetOneAddress(telephone string) ([]common.Address, error) {
	return _Token.Contract.GetOneAddress(&_Token.CallOpts, telephone)
}

// GetOneLedgerCxt is a free data retrieval call binding the contract method 0x629d38cc.
//
// Solidity: function getOneLedgerCxt(uaddr address, transferId string) constant returns(uint256, string, bool, string)
func (_Token *TokenCaller) GetOneLedgerCxt(opts *bind.CallOpts, uaddr common.Address, transferId string) (*big.Int, string, bool, string, error) {
	var (
		ret0 = new(*big.Int)
		ret1 = new(string)
		ret2 = new(bool)
		ret3 = new(string)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
		ret3,
	}
	err := _Token.contract.Call(opts, out, "getOneLedgerCxt", uaddr, transferId)
	return *ret0, *ret1, *ret2, *ret3, err
}

// GetOneLedgerCxt is a free data retrieval call binding the contract method 0x629d38cc.
//
// Solidity: function getOneLedgerCxt(uaddr address, transferId string) constant returns(uint256, string, bool, string)
func (_Token *TokenSession) GetOneLedgerCxt(uaddr common.Address, transferId string) (*big.Int, string, bool, string, error) {
	return _Token.Contract.GetOneLedgerCxt(&_Token.CallOpts, uaddr, transferId)
}

// GetOneLedgerCxt is a free data retrieval call binding the contract method 0x629d38cc.
//
// Solidity: function getOneLedgerCxt(uaddr address, transferId string) constant returns(uint256, string, bool, string)
func (_Token *TokenCallerSession) GetOneLedgerCxt(uaddr common.Address, transferId string) (*big.Int, string, bool, string, error) {
	return _Token.Contract.GetOneLedgerCxt(&_Token.CallOpts, uaddr, transferId)
}

// GetSubAccountKeysLen is a free data retrieval call binding the contract method 0x7aa9b999.
//
// Solidity: function getSubAccountKeysLen() constant returns(uint256)
func (_Token *TokenCaller) GetSubAccountKeysLen(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "getSubAccountKeysLen")
	return *ret0, err
}

// GetSubAccountKeysLen is a free data retrieval call binding the contract method 0x7aa9b999.
//
// Solidity: function getSubAccountKeysLen() constant returns(uint256)
func (_Token *TokenSession) GetSubAccountKeysLen() (*big.Int, error) {
	return _Token.Contract.GetSubAccountKeysLen(&_Token.CallOpts)
}

// GetSubAccountKeysLen is a free data retrieval call binding the contract method 0x7aa9b999.
//
// Solidity: function getSubAccountKeysLen() constant returns(uint256)
func (_Token *TokenCallerSession) GetSubAccountKeysLen() (*big.Int, error) {
	return _Token.Contract.GetSubAccountKeysLen(&_Token.CallOpts)
}

// GetSubCodeQuotaData is a free data retrieval call binding the contract method 0x94a1a3c4.
//
// Solidity: function getSubCodeQuotaData(subCode string, setAddr address) constant returns(uint256)
func (_Token *TokenCaller) GetSubCodeQuotaData(opts *bind.CallOpts, subCode string, setAddr common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "getSubCodeQuotaData", subCode, setAddr)
	return *ret0, err
}

// GetSubCodeQuotaData is a free data retrieval call binding the contract method 0x94a1a3c4.
//
// Solidity: function getSubCodeQuotaData(subCode string, setAddr address) constant returns(uint256)
func (_Token *TokenSession) GetSubCodeQuotaData(subCode string, setAddr common.Address) (*big.Int, error) {
	return _Token.Contract.GetSubCodeQuotaData(&_Token.CallOpts, subCode, setAddr)
}

// GetSubCodeQuotaData is a free data retrieval call binding the contract method 0x94a1a3c4.
//
// Solidity: function getSubCodeQuotaData(subCode string, setAddr address) constant returns(uint256)
func (_Token *TokenCallerSession) GetSubCodeQuotaData(subCode string, setAddr common.Address) (*big.Int, error) {
	return _Token.Contract.GetSubCodeQuotaData(&_Token.CallOpts, subCode, setAddr)
}

// GetbindIssueToAddr is a free data retrieval call binding the contract method 0x877212ac.
//
// Solidity: function getbindIssueToAddr(faddr address) constant returns(bytes32[])
func (_Token *TokenCaller) GetbindIssueToAddr(opts *bind.CallOpts, faddr common.Address) ([][32]byte, error) {
	var (
		ret0 = new([][32]byte)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "getbindIssueToAddr", faddr)
	return *ret0, err
}

// GetbindIssueToAddr is a free data retrieval call binding the contract method 0x877212ac.
//
// Solidity: function getbindIssueToAddr(faddr address) constant returns(bytes32[])
func (_Token *TokenSession) GetbindIssueToAddr(faddr common.Address) ([][32]byte, error) {
	return _Token.Contract.GetbindIssueToAddr(&_Token.CallOpts, faddr)
}

// GetbindIssueToAddr is a free data retrieval call binding the contract method 0x877212ac.
//
// Solidity: function getbindIssueToAddr(faddr address) constant returns(bytes32[])
func (_Token *TokenCallerSession) GetbindIssueToAddr(faddr common.Address) ([][32]byte, error) {
	return _Token.Contract.GetbindIssueToAddr(&_Token.CallOpts, faddr)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() constant returns(string)
func (_Token *TokenCaller) Name(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "name")
	return *ret0, err
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() constant returns(string)
func (_Token *TokenSession) Name() (string, error) {
	return _Token.Contract.Name(&_Token.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() constant returns(string)
func (_Token *TokenCallerSession) Name() (string, error) {
	return _Token.Contract.Name(&_Token.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Token *TokenCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Token *TokenSession) Owner() (common.Address, error) {
	return _Token.Contract.Owner(&_Token.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Token *TokenCallerSession) Owner() (common.Address, error) {
	return _Token.Contract.Owner(&_Token.CallOpts)
}

// Payer is a free data retrieval call binding the contract method 0x123119cd.
//
// Solidity: function payer() constant returns(address)
func (_Token *TokenCaller) Payer(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "payer")
	return *ret0, err
}

// Payer is a free data retrieval call binding the contract method 0x123119cd.
//
// Solidity: function payer() constant returns(address)
func (_Token *TokenSession) Payer() (common.Address, error) {
	return _Token.Contract.Payer(&_Token.CallOpts)
}

// Payer is a free data retrieval call binding the contract method 0x123119cd.
//
// Solidity: function payer() constant returns(address)
func (_Token *TokenCallerSession) Payer() (common.Address, error) {
	return _Token.Contract.Payer(&_Token.CallOpts)
}

// Postscript is a free data retrieval call binding the contract method 0x7127054d.
//
// Solidity: function postscript() constant returns(string)
func (_Token *TokenCaller) Postscript(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "postscript")
	return *ret0, err
}

// Postscript is a free data retrieval call binding the contract method 0x7127054d.
//
// Solidity: function postscript() constant returns(string)
func (_Token *TokenSession) Postscript() (string, error) {
	return _Token.Contract.Postscript(&_Token.CallOpts)
}

// Postscript is a free data retrieval call binding the contract method 0x7127054d.
//
// Solidity: function postscript() constant returns(string)
func (_Token *TokenCallerSession) Postscript() (string, error) {
	return _Token.Contract.Postscript(&_Token.CallOpts)
}

// SubAccountKeys is a free data retrieval call binding the contract method 0xda1238c0.
//
// Solidity: function subAccountKeys( uint256) constant returns(string)
func (_Token *TokenCaller) SubAccountKeys(opts *bind.CallOpts, arg0 *big.Int) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "subAccountKeys", arg0)
	return *ret0, err
}

// SubAccountKeys is a free data retrieval call binding the contract method 0xda1238c0.
//
// Solidity: function subAccountKeys( uint256) constant returns(string)
func (_Token *TokenSession) SubAccountKeys(arg0 *big.Int) (string, error) {
	return _Token.Contract.SubAccountKeys(&_Token.CallOpts, arg0)
}

// SubAccountKeys is a free data retrieval call binding the contract method 0xda1238c0.
//
// Solidity: function subAccountKeys( uint256) constant returns(string)
func (_Token *TokenCallerSession) SubAccountKeys(arg0 *big.Int) (string, error) {
	return _Token.Contract.SubAccountKeys(&_Token.CallOpts, arg0)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() constant returns(string)
func (_Token *TokenCaller) Symbol(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "symbol")
	return *ret0, err
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() constant returns(string)
func (_Token *TokenSession) Symbol() (string, error) {
	return _Token.Contract.Symbol(&_Token.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() constant returns(string)
func (_Token *TokenCallerSession) Symbol() (string, error) {
	return _Token.Contract.Symbol(&_Token.CallOpts)
}

// IssueScheduling is a paid mutator transaction binding the contract method 0xc5d03e73.
//
// Solidity: function IssueScheduling(issueCode string, roles bytes32[], joiners address[]) returns()
func (_Token *TokenTransactor) IssueScheduling(opts *bind.TransactOpts, issueCode string, roles [][32]byte, joiners []common.Address) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "IssueScheduling", issueCode, roles, joiners)
}

// IssueScheduling is a paid mutator transaction binding the contract method 0xc5d03e73.
//
// Solidity: function IssueScheduling(issueCode string, roles bytes32[], joiners address[]) returns()
func (_Token *TokenSession) IssueScheduling(issueCode string, roles [][32]byte, joiners []common.Address) (*types.Transaction, error) {
	return _Token.Contract.IssueScheduling(&_Token.TransactOpts, issueCode, roles, joiners)
}

// IssueScheduling is a paid mutator transaction binding the contract method 0xc5d03e73.
//
// Solidity: function IssueScheduling(issueCode string, roles bytes32[], joiners address[]) returns()
func (_Token *TokenTransactorSession) IssueScheduling(issueCode string, roles [][32]byte, joiners []common.Address) (*types.Transaction, error) {
	return _Token.Contract.IssueScheduling(&_Token.TransactOpts, issueCode, roles, joiners)
}

// StringToBytesVer1 is a paid mutator transaction binding the contract method 0x2b3cf04b.
//
// Solidity: function StringToBytesVer1(source string) returns(result bytes)
func (_Token *TokenTransactor) StringToBytesVer1(opts *bind.TransactOpts, source string) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "StringToBytesVer1", source)
}

// StringToBytesVer1 is a paid mutator transaction binding the contract method 0x2b3cf04b.
//
// Solidity: function StringToBytesVer1(source string) returns(result bytes)
func (_Token *TokenSession) StringToBytesVer1(source string) (*types.Transaction, error) {
	return _Token.Contract.StringToBytesVer1(&_Token.TransactOpts, source)
}

// StringToBytesVer1 is a paid mutator transaction binding the contract method 0x2b3cf04b.
//
// Solidity: function StringToBytesVer1(source string) returns(result bytes)
func (_Token *TokenTransactorSession) StringToBytesVer1(source string) (*types.Transaction, error) {
	return _Token.Contract.StringToBytesVer1(&_Token.TransactOpts, source)
}

// AddAccount is a paid mutator transaction binding the contract method 0x29552cde.
//
// Solidity: function addAccount(accountAddr address, name string, bankCard string, weChat string, alipay string, telephone string) returns(success bool)
func (_Token *TokenTransactor) AddAccount(opts *bind.TransactOpts, accountAddr common.Address, name string, bankCard string, weChat string, alipay string, telephone string) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "addAccount", accountAddr, name, bankCard, weChat, alipay, telephone)
}

// AddAccount is a paid mutator transaction binding the contract method 0x29552cde.
//
// Solidity: function addAccount(accountAddr address, name string, bankCard string, weChat string, alipay string, telephone string) returns(success bool)
func (_Token *TokenSession) AddAccount(accountAddr common.Address, name string, bankCard string, weChat string, alipay string, telephone string) (*types.Transaction, error) {
	return _Token.Contract.AddAccount(&_Token.TransactOpts, accountAddr, name, bankCard, weChat, alipay, telephone)
}

// AddAccount is a paid mutator transaction binding the contract method 0x29552cde.
//
// Solidity: function addAccount(accountAddr address, name string, bankCard string, weChat string, alipay string, telephone string) returns(success bool)
func (_Token *TokenTransactorSession) AddAccount(accountAddr common.Address, name string, bankCard string, weChat string, alipay string, telephone string) (*types.Transaction, error) {
	return _Token.Contract.AddAccount(&_Token.TransactOpts, accountAddr, name, bankCard, weChat, alipay, telephone)
}

// AfterCalculateByRatio is a paid mutator transaction binding the contract method 0x6d33d608.
//
// Solidity: function afterCalculateByRatio(totalConsume uint256, ratio uint256, c_ratio uint256) returns(uint256)
func (_Token *TokenTransactor) AfterCalculateByRatio(opts *bind.TransactOpts, totalConsume *big.Int, ratio *big.Int, c_ratio *big.Int) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "afterCalculateByRatio", totalConsume, ratio, c_ratio)
}

// AfterCalculateByRatio is a paid mutator transaction binding the contract method 0x6d33d608.
//
// Solidity: function afterCalculateByRatio(totalConsume uint256, ratio uint256, c_ratio uint256) returns(uint256)
func (_Token *TokenSession) AfterCalculateByRatio(totalConsume *big.Int, ratio *big.Int, c_ratio *big.Int) (*types.Transaction, error) {
	return _Token.Contract.AfterCalculateByRatio(&_Token.TransactOpts, totalConsume, ratio, c_ratio)
}

// AfterCalculateByRatio is a paid mutator transaction binding the contract method 0x6d33d608.
//
// Solidity: function afterCalculateByRatio(totalConsume uint256, ratio uint256, c_ratio uint256) returns(uint256)
func (_Token *TokenTransactorSession) AfterCalculateByRatio(totalConsume *big.Int, ratio *big.Int, c_ratio *big.Int) (*types.Transaction, error) {
	return _Token.Contract.AfterCalculateByRatio(&_Token.TransactOpts, totalConsume, ratio, c_ratio)
}

// CalculateByRatio is a paid mutator transaction binding the contract method 0x29ab8382.
//
// Solidity: function calculateByRatio(totalConsume uint256, ratio uint256) returns(uint256)
func (_Token *TokenTransactor) CalculateByRatio(opts *bind.TransactOpts, totalConsume *big.Int, ratio *big.Int) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "calculateByRatio", totalConsume, ratio)
}

// CalculateByRatio is a paid mutator transaction binding the contract method 0x29ab8382.
//
// Solidity: function calculateByRatio(totalConsume uint256, ratio uint256) returns(uint256)
func (_Token *TokenSession) CalculateByRatio(totalConsume *big.Int, ratio *big.Int) (*types.Transaction, error) {
	return _Token.Contract.CalculateByRatio(&_Token.TransactOpts, totalConsume, ratio)
}

// CalculateByRatio is a paid mutator transaction binding the contract method 0x29ab8382.
//
// Solidity: function calculateByRatio(totalConsume uint256, ratio uint256) returns(uint256)
func (_Token *TokenTransactorSession) CalculateByRatio(totalConsume *big.Int, ratio *big.Int) (*types.Transaction, error) {
	return _Token.Contract.CalculateByRatio(&_Token.TransactOpts, totalConsume, ratio)
}

// CheckLedgerById is a paid mutator transaction binding the contract method 0xd8dd0988.
//
// Solidity: function checkLedgerById(transferId string) returns(bool)
func (_Token *TokenTransactor) CheckLedgerById(opts *bind.TransactOpts, transferId string) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "checkLedgerById", transferId)
}

// CheckLedgerById is a paid mutator transaction binding the contract method 0xd8dd0988.
//
// Solidity: function checkLedgerById(transferId string) returns(bool)
func (_Token *TokenSession) CheckLedgerById(transferId string) (*types.Transaction, error) {
	return _Token.Contract.CheckLedgerById(&_Token.TransactOpts, transferId)
}

// CheckLedgerById is a paid mutator transaction binding the contract method 0xd8dd0988.
//
// Solidity: function checkLedgerById(transferId string) returns(bool)
func (_Token *TokenTransactorSession) CheckLedgerById(transferId string) (*types.Transaction, error) {
	return _Token.Contract.CheckLedgerById(&_Token.TransactOpts, transferId)
}

// InsertLedgerCxt is a paid mutator transaction binding the contract method 0x52311be2.
//
// Solidity: function insertLedgerCxt(joiner address, ratio uint256, subWay uint256, calculate uint256, issueCode string, transferId string, c_totalConsume uint256) returns()
func (_Token *TokenTransactor) InsertLedgerCxt(opts *bind.TransactOpts, joiner common.Address, ratio *big.Int, subWay *big.Int, calculate *big.Int, issueCode string, transferId string, c_totalConsume *big.Int) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "insertLedgerCxt", joiner, ratio, subWay, calculate, issueCode, transferId, c_totalConsume)
}

// InsertLedgerCxt is a paid mutator transaction binding the contract method 0x52311be2.
//
// Solidity: function insertLedgerCxt(joiner address, ratio uint256, subWay uint256, calculate uint256, issueCode string, transferId string, c_totalConsume uint256) returns()
func (_Token *TokenSession) InsertLedgerCxt(joiner common.Address, ratio *big.Int, subWay *big.Int, calculate *big.Int, issueCode string, transferId string, c_totalConsume *big.Int) (*types.Transaction, error) {
	return _Token.Contract.InsertLedgerCxt(&_Token.TransactOpts, joiner, ratio, subWay, calculate, issueCode, transferId, c_totalConsume)
}

// InsertLedgerCxt is a paid mutator transaction binding the contract method 0x52311be2.
//
// Solidity: function insertLedgerCxt(joiner address, ratio uint256, subWay uint256, calculate uint256, issueCode string, transferId string, c_totalConsume uint256) returns()
func (_Token *TokenTransactorSession) InsertLedgerCxt(joiner common.Address, ratio *big.Int, subWay *big.Int, calculate *big.Int, issueCode string, transferId string, c_totalConsume *big.Int) (*types.Transaction, error) {
	return _Token.Contract.InsertLedgerCxt(&_Token.TransactOpts, joiner, ratio, subWay, calculate, issueCode, transferId, c_totalConsume)
}

// IssueSubCxt is a paid mutator transaction binding the contract method 0x18d12938.
//
// Solidity: function issueSubCxt(issueCode string, roles bytes32[], rtaios uint256[], subWays uint256[], quotaWays uint256[], resetTimes uint256[]) returns()
func (_Token *TokenTransactor) IssueSubCxt(opts *bind.TransactOpts, issueCode string, roles [][32]byte, rtaios []*big.Int, subWays []*big.Int, quotaWays []*big.Int, resetTimes []*big.Int) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "issueSubCxt", issueCode, roles, rtaios, subWays, quotaWays, resetTimes)
}

// IssueSubCxt is a paid mutator transaction binding the contract method 0x18d12938.
//
// Solidity: function issueSubCxt(issueCode string, roles bytes32[], rtaios uint256[], subWays uint256[], quotaWays uint256[], resetTimes uint256[]) returns()
func (_Token *TokenSession) IssueSubCxt(issueCode string, roles [][32]byte, rtaios []*big.Int, subWays []*big.Int, quotaWays []*big.Int, resetTimes []*big.Int) (*types.Transaction, error) {
	return _Token.Contract.IssueSubCxt(&_Token.TransactOpts, issueCode, roles, rtaios, subWays, quotaWays, resetTimes)
}

// IssueSubCxt is a paid mutator transaction binding the contract method 0x18d12938.
//
// Solidity: function issueSubCxt(issueCode string, roles bytes32[], rtaios uint256[], subWays uint256[], quotaWays uint256[], resetTimes uint256[]) returns()
func (_Token *TokenTransactorSession) IssueSubCxt(issueCode string, roles [][32]byte, rtaios []*big.Int, subWays []*big.Int, quotaWays []*big.Int, resetTimes []*big.Int) (*types.Transaction, error) {
	return _Token.Contract.IssueSubCxt(&_Token.TransactOpts, issueCode, roles, rtaios, subWays, quotaWays, resetTimes)
}

// ResetSubCodeQuotaData is a paid mutator transaction binding the contract method 0x5b71bc26.
//
// Solidity: function resetSubCodeQuotaData(subCode string, setAddr address) returns()
func (_Token *TokenTransactor) ResetSubCodeQuotaData(opts *bind.TransactOpts, subCode string, setAddr common.Address) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "resetSubCodeQuotaData", subCode, setAddr)
}

// ResetSubCodeQuotaData is a paid mutator transaction binding the contract method 0x5b71bc26.
//
// Solidity: function resetSubCodeQuotaData(subCode string, setAddr address) returns()
func (_Token *TokenSession) ResetSubCodeQuotaData(subCode string, setAddr common.Address) (*types.Transaction, error) {
	return _Token.Contract.ResetSubCodeQuotaData(&_Token.TransactOpts, subCode, setAddr)
}

// ResetSubCodeQuotaData is a paid mutator transaction binding the contract method 0x5b71bc26.
//
// Solidity: function resetSubCodeQuotaData(subCode string, setAddr address) returns()
func (_Token *TokenTransactorSession) ResetSubCodeQuotaData(subCode string, setAddr common.Address) (*types.Transaction, error) {
	return _Token.Contract.ResetSubCodeQuotaData(&_Token.TransactOpts, subCode, setAddr)
}

// SetSubCodeQuotaData is a paid mutator transaction binding the contract method 0x6ff6757b.
//
// Solidity: function setSubCodeQuotaData(subCode string, setAddr address, num uint256) returns()
func (_Token *TokenTransactor) SetSubCodeQuotaData(opts *bind.TransactOpts, subCode string, setAddr common.Address, num *big.Int) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "setSubCodeQuotaData", subCode, setAddr, num)
}

// SetSubCodeQuotaData is a paid mutator transaction binding the contract method 0x6ff6757b.
//
// Solidity: function setSubCodeQuotaData(subCode string, setAddr address, num uint256) returns()
func (_Token *TokenSession) SetSubCodeQuotaData(subCode string, setAddr common.Address, num *big.Int) (*types.Transaction, error) {
	return _Token.Contract.SetSubCodeQuotaData(&_Token.TransactOpts, subCode, setAddr, num)
}

// SetSubCodeQuotaData is a paid mutator transaction binding the contract method 0x6ff6757b.
//
// Solidity: function setSubCodeQuotaData(subCode string, setAddr address, num uint256) returns()
func (_Token *TokenTransactorSession) SetSubCodeQuotaData(subCode string, setAddr common.Address, num *big.Int) (*types.Transaction, error) {
	return _Token.Contract.SetSubCodeQuotaData(&_Token.TransactOpts, subCode, setAddr, num)
}

// SettleAccounts is a paid mutator transaction binding the contract method 0x4e3e9998.
//
// Solidity: function settleAccounts(issueCode string, totalConsume uint256, transferId string) returns()
func (_Token *TokenTransactor) SettleAccounts(opts *bind.TransactOpts, issueCode string, totalConsume *big.Int, transferId string) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "settleAccounts", issueCode, totalConsume, transferId)
}

// SettleAccounts is a paid mutator transaction binding the contract method 0x4e3e9998.
//
// Solidity: function settleAccounts(issueCode string, totalConsume uint256, transferId string) returns()
func (_Token *TokenSession) SettleAccounts(issueCode string, totalConsume *big.Int, transferId string) (*types.Transaction, error) {
	return _Token.Contract.SettleAccounts(&_Token.TransactOpts, issueCode, totalConsume, transferId)
}

// SettleAccounts is a paid mutator transaction binding the contract method 0x4e3e9998.
//
// Solidity: function settleAccounts(issueCode string, totalConsume uint256, transferId string) returns()
func (_Token *TokenTransactorSession) SettleAccounts(issueCode string, totalConsume *big.Int, transferId string) (*types.Transaction, error) {
	return _Token.Contract.SettleAccounts(&_Token.TransactOpts, issueCode, totalConsume, transferId)
}

// StringToBytesVer2 is a paid mutator transaction binding the contract method 0xe503bab6.
//
// Solidity: function stringToBytesVer2(source string) returns(result bytes32)
func (_Token *TokenTransactor) StringToBytesVer2(opts *bind.TransactOpts, source string) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "stringToBytesVer2", source)
}

// StringToBytesVer2 is a paid mutator transaction binding the contract method 0xe503bab6.
//
// Solidity: function stringToBytesVer2(source string) returns(result bytes32)
func (_Token *TokenSession) StringToBytesVer2(source string) (*types.Transaction, error) {
	return _Token.Contract.StringToBytesVer2(&_Token.TransactOpts, source)
}

// StringToBytesVer2 is a paid mutator transaction binding the contract method 0xe503bab6.
//
// Solidity: function stringToBytesVer2(source string) returns(result bytes32)
func (_Token *TokenTransactorSession) StringToBytesVer2(source string) (*types.Transaction, error) {
	return _Token.Contract.StringToBytesVer2(&_Token.TransactOpts, source)
}

// UpdateCalulateLedger is a paid mutator transaction binding the contract method 0xaa5afc13.
//
// Solidity: function updateCalulateLedger(uaddr address, transferId string, transferDetails string) returns()
func (_Token *TokenTransactor) UpdateCalulateLedger(opts *bind.TransactOpts, uaddr common.Address, transferId string, transferDetails string) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "updateCalulateLedger", uaddr, transferId, transferDetails)
}

// UpdateCalulateLedger is a paid mutator transaction binding the contract method 0xaa5afc13.
//
// Solidity: function updateCalulateLedger(uaddr address, transferId string, transferDetails string) returns()
func (_Token *TokenSession) UpdateCalulateLedger(uaddr common.Address, transferId string, transferDetails string) (*types.Transaction, error) {
	return _Token.Contract.UpdateCalulateLedger(&_Token.TransactOpts, uaddr, transferId, transferDetails)
}

// UpdateCalulateLedger is a paid mutator transaction binding the contract method 0xaa5afc13.
//
// Solidity: function updateCalulateLedger(uaddr address, transferId string, transferDetails string) returns()
func (_Token *TokenTransactorSession) UpdateCalulateLedger(uaddr common.Address, transferId string, transferDetails string) (*types.Transaction, error) {
	return _Token.Contract.UpdateCalulateLedger(&_Token.TransactOpts, uaddr, transferId, transferDetails)
}

// UpdateOneLedger is a paid mutator transaction binding the contract method 0xd89a70c6.
//
// Solidity: function updateOneLedger(sender address, joiner address, calculate uint256, transferId string) returns(bool)
func (_Token *TokenTransactor) UpdateOneLedger(opts *bind.TransactOpts, sender common.Address, joiner common.Address, calculate *big.Int, transferId string) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "updateOneLedger", sender, joiner, calculate, transferId)
}

// UpdateOneLedger is a paid mutator transaction binding the contract method 0xd89a70c6.
//
// Solidity: function updateOneLedger(sender address, joiner address, calculate uint256, transferId string) returns(bool)
func (_Token *TokenSession) UpdateOneLedger(sender common.Address, joiner common.Address, calculate *big.Int, transferId string) (*types.Transaction, error) {
	return _Token.Contract.UpdateOneLedger(&_Token.TransactOpts, sender, joiner, calculate, transferId)
}

// UpdateOneLedger is a paid mutator transaction binding the contract method 0xd89a70c6.
//
// Solidity: function updateOneLedger(sender address, joiner address, calculate uint256, transferId string) returns(bool)
func (_Token *TokenTransactorSession) UpdateOneLedger(sender common.Address, joiner common.Address, calculate *big.Int, transferId string) (*types.Transaction, error) {
	return _Token.Contract.UpdateOneLedger(&_Token.TransactOpts, sender, joiner, calculate, transferId)
}

// TokenTransferIterator is returned from FilterTransfer and is used to iterate over the raw logs and unpacked data for Transfer events raised by the Token contract.
type TokenTransferIterator struct {
	Event *TokenTransfer // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TokenTransferIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TokenTransfer)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TokenTransfer)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TokenTransferIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TokenTransferIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TokenTransfer represents a Transfer event raised by the Token contract.
type TokenTransfer struct {
	From   common.Address
	To     common.Address
	Amount *big.Int
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterTransfer is a free log retrieval operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(from address, to address, amount uint256)
func (_Token *TokenFilterer) FilterTransfer(opts *bind.FilterOpts) (*TokenTransferIterator, error) {

	logs, sub, err := _Token.contract.FilterLogs(opts, "Transfer")
	if err != nil {
		return nil, err
	}
	return &TokenTransferIterator{contract: _Token.contract, event: "Transfer", logs: logs, sub: sub}, nil
}

// WatchTransfer is a free log subscription operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(from address, to address, amount uint256)
func (_Token *TokenFilterer) WatchTransfer(opts *bind.WatchOpts, sink chan<- *TokenTransfer) (event.Subscription, error) {

	logs, sub, err := _Token.contract.WatchLogs(opts, "Transfer")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TokenTransfer)
				if err := _Token.contract.UnpackLog(event, "Transfer", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}
