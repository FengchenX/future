//--------------------------------------------------------------
// name  : api接口协议
// rule1 : 所有带有"C"前缀的协议为客户端向服务端发送
// rule2 : 所有带有"S"前缀的协议为服务端向客户端发送
//---------------------------------------------------------------
syntax = "proto3";                    // protobuf3 系列必须在前面加前缀
package protocol;                     // 统一package
//option cc_generic_services = true;  // 开启grpc

// api rpc 服务
service ConfServer {
    rpc GetConfig(ReqGetConfig)returns(RespGetConfig){}; // 获取配置服务
    rpc SetConfig(ReqSetConfig)returns(RespSetConfig){}; // 获取配置服务
}

/*------------------------------获取配置------------------------------*/
message ReqGetConfig{
    string Address        = 1; // 本机地址
}

message RespGetConfig{
    uint32 Operate_timeout = 1; // 用户操作超时，单位秒
    string LocalAddress    = 2; // 本机地址
    string Port            = 3; // 端口
    string  AccAddress     = 4; // acc地址
    string EthAddress      = 5; // eth地址
    string IpcDir          = 6;
    string ServerId        = 7;
    string ManagerKey      = 8;
    string ManagerPhrase   = 9;
    string KeyDir          = 10;
    uint32 StaticCode      = 11;
}

/*------------------------------设置配置------------------------------*/

message ReqSetConfig{
    uint32 Operate_timeout = 1; // 用户操作超时，单位秒
    string LocalAddress    = 2; // 本机地址
    string Port            = 3; // 端口
    string  AccAddress     = 4; // acc地址
    string EthAddress      = 5; // eth地址
    string IpcDir          = 6;
    string ServerId        = 7;
    string ManagerKey      = 8;
    string ManagerPhrase   = 9;
    string KeyDir          = 10;
}

message RespSetConfig{
    uint32 StaticCode      = 1;
}