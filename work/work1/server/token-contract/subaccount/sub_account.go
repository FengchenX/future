// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package subaccount

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// TokenABI is the input ABI used to generate the binding from.
const TokenABI = "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"scheduleDesireds\",\"outputs\":[{\"name\":\"issuer\",\"type\":\"address\"},{\"name\":\"issueRatio\",\"type\":\"uint256\"},{\"name\":\"count\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"payer\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"issuer\",\"type\":\"address\"},{\"name\":\"jobId\",\"type\":\"int256\"}],\"name\":\"findScheduledIssue\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"totalConsume\",\"type\":\"uint256\"}],\"name\":\"settleAccounts\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"publishAddrs\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"u_postscript\",\"type\":\"string\"}],\"name\":\"updatePostscript\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"fatherAddr\",\"type\":\"address\"},{\"name\":\"staffAddr\",\"type\":\"address\"},{\"name\":\"jobId\",\"type\":\"int256\"}],\"name\":\"application\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"hash\",\"type\":\"string\"}],\"name\":\"getContHash\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"postscript\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"issuer\",\"type\":\"address\"},{\"name\":\"jobIds\",\"type\":\"int256[]\"}],\"name\":\"findScheduled\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"},{\"name\":\"\",\"type\":\"uint256[]\"},{\"name\":\"\",\"type\":\"uint256[]\"},{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"fatherAddress\",\"type\":\"address\"},{\"name\":\"issueRatio\",\"type\":\"uint256\"},{\"name\":\"whitelists\",\"type\":\"address[]\"},{\"name\":\"jobIds\",\"type\":\"int256[]\"},{\"name\":\"roles\",\"type\":\"bytes32[]\"},{\"name\":\"counts\",\"type\":\"uint256[]\"},{\"name\":\"ratio\",\"type\":\"uint256[]\"}],\"name\":\"scheduleing\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getScheduleingAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"companyPayee\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAllRatio\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"scheduleStaffs\",\"outputs\":[{\"name\":\"staffAddr\",\"type\":\"address\"},{\"name\":\"jobId\",\"type\":\"int256\"},{\"name\":\"ratio\",\"type\":\"uint256\"},{\"name\":\"role\",\"type\":\"bytes32\"},{\"name\":\"fatherAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"companyRatio\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"staffAddr\",\"type\":\"address\"},{\"name\":\"jobId\",\"type\":\"int256\"}],\"name\":\"delApplication\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAllpublishAddrs\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getContentHashKeysLen\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contentHashKeys\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"hash\",\"type\":\"string\"},{\"name\":\"content\",\"type\":\"string\"}],\"name\":\"saveContHash\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"issuer\",\"type\":\"address\"}],\"name\":\"GetScheduledJobIds\",\"outputs\":[{\"name\":\"\",\"type\":\"int256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"storesNumber\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"name\":\"initpayer\",\"type\":\"address\"},{\"name\":\"payee\",\"type\":\"address\"},{\"name\":\"company_ratio\",\"type\":\"uint256\"},{\"name\":\"init_storesNumber\",\"type\":\"string\"},{\"name\":\"init_postscript\",\"type\":\"string\"},{\"name\":\"decimalUnits\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Issue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"logstr\",\"type\":\"string\"}],\"name\":\"globallog\",\"type\":\"event\"}]"

// TokenBin is the compiled bytecode used for deploying new contracts.
const TokenBin = `60806040523480156200001157600080fd5b5060405162003eb838038062003eb88339810180604052810190808051820192919060200180518201929190602001805190602001909291908051906020019092919080519060200190929190805182019291906020018051820192919060200180519060200190929190505050876004908051906020019062000097929190620001d5565b508660059080519060200190620000b0929190620001d5565b5080600660006101000a81548160ff021916908360ff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836003819055508260079080519060200190620001ad929190620001d5565b508160089080519060200190620001c6929190620001d5565b50505050505050505062000284565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200021857805160ff191683800117855562000249565b8280016001018555821562000249579182015b82811115620002485782518255916020019190600101906200022b565b5b5090506200025891906200025c565b5090565b6200028191905b808211156200027d57600081600090555060010162000263565b5090565b90565b613c2480620002946000396000f300608060405260043610610175576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461017a5780630c723a4f1461020a578063123119cd1461029b57806327e235e3146102f2578063313ce5671461034957806349499b731461037a57806350d20a271461042457806354c9beb7146104695780635cbd740e146104d65780636069491d1461053f578063619272ae146105c45780637127054d146106ad5780637c2c15001461073d5780638da5cb5b146108f057806392011f1c1461094757806395d89b4114610afb57806398944f7a14610b8b5780639b2f6b9014610bf7578063a8ff0efe14610c4e578063aeea197714610c79578063bcdf7ba014610d4c578063c20f9c5414610d77578063c76c1a1114610ddc578063c878332214610e48578063dd3e2d9514610e73578063e19f058614610f19578063eacf260214610fe0578063f21d1f5014611078578063f8b2cb4f14611108575b600080fd5b34801561018657600080fd5b5061018f61115f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101cf5780820151818401526020810190506101b4565b50505050905090810190601f1680156101fc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561021657600080fd5b5061024b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111fd565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390f35b3480156102a757600080fd5b506102b0611247565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102fe57600080fd5b50610333600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061126d565b6040518082815260200191505060405180910390f35b34801561035557600080fd5b5061035e611285565b604051808260ff1660ff16815260200191505060405180910390f35b34801561038657600080fd5b506103c5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611298565b6040518085600019166000191681526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405180910390f35b34801561043057600080fd5b5061044f60048036038101908080359060200190929190505050611377565b604051808215151515815260200191505060405180910390f35b34801561047557600080fd5b50610494600480360381019080803590602001909291905050506116b4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104e257600080fd5b5061053d600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506116f2565b005b34801561054b57600080fd5b506105aa600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061170c565b604051808215151515815260200191505060405180910390f35b3480156105d057600080fd5b5061062b600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611cc1565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015610671578082015181840152602081019050610656565b50505050905090810190601f16801561069e5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156106b957600080fd5b506106c2611e47565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107025780820151818401526020810190506106e7565b50505050905090810190601f16801561072f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561074957600080fd5b506107c1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050611ee5565b6040518080602001806020018060200180602001858103855289818151815260200191508051906020019060200280838360005b838110156108105780820151818401526020810190506107f5565b50505050905001858103845288818151815260200191508051906020019060200280838360005b83811015610852578082015181840152602081019050610837565b50505050905001858103835287818151815260200191508051906020019060200280838360005b83811015610894578082015181840152602081019050610879565b50505050905001858103825286818151815260200191508051906020019060200280838360005b838110156108d65780820151818401526020810190506108bb565b505050509050019850505050505050505060405180910390f35b3480156108fc57600080fd5b5061090561229e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561095357600080fd5b50610ae1600480360381019080803573ffffffffffffffffffffffffffffffffffffffffc3565b604051808215151515815260200191505060405180910390f35b348015610b0757600080fd5b50610b106129ab565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b50578082015181840152602081019050610b35565b50505050905090810190601f168015610b7d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610b9757600080fd5b50610ba0612a49565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610be3578082015181840152602081019050610bc8565b505050509050019250505060405180910390f35b348015610c0357600080fd5b50610c0c612ad7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610c5a57600080fd5b50610c63612afd565b6040518082815260200191505060405180910390f35b348015610c8557600080fd5b50610cba600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612bb9565b604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815260200183600019166000191681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019550505050505060405180910390f35b348015610d5857600080fd5b50610d61612c2f565b6040518082815260200191505060405180910390f35b348015610d8357600080fd5b50610dc2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612c35565b604051808215151515815260200191505060405180910390f35b348015610de857600080fd5b50610df161313b565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610e34578082015181840152602081019050610e19565b505050509050019250505060405180910390f35b348015610e5457600080fd5b50610e5d6131c9565b6040518082815260200191505060405180910390f35b348015610e7f57600080fd5b50610e9e600480360381019080803590602001909291905050506131d6565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610ede578082015181840152602081019050610ec3565b50505050905090810190601f168015610f0b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610f2557600080fd5b50610fc6600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050613291565b604051808215151515815260200191505060405180910390f35b348015610fec57600080fd5b50611021600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061347f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015611064578082015181840152602081019050611049565b505050509050019250505060405180910390f35b34801561108457600080fd5b5061108d613519565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156110cd5780820151818401526020810190506110b2565b50505050905090810190601f1680156110fa5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561111457600080fd5b50611149600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506135b7565b6040518082815260200191505060405180910390f35b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111f55780601f106111ca576101008083540402835291602001916111f5565b820191906000526020600020905b8154815290600101906020018083116111d857829003601f168201915b505050505081565b600a6020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905083565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60096020528060005260406000206000915090505481565b600660009054906101000a900460ff1681565b6000806000806000600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060040160008781526020019081526020016000206001015481600401600088815260200190815260200160002060020154826004016000898152602001908152602001600020600301548360040160008a815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1694509450945094505092959194509250565b600080600080600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113dc57600080fd5b86945060009350600060035411156114d057606460035488028115156113fe57fe5b0493508360096000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540160096000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555083850394505b600092505b600d805490508310156116aa57600d838154811015156114f157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060648160020154880281151561157157fe5b04935083600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555083850394507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef338386604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a182806001019350506114d5565b5050505050919050565b600e818154811015156116c357fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8060089080519060200190611708929190613a5c565b5050565b600080600080600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002092508260040160008681526020019081526020016000209150600082600201541180156117cd57508573ffffffffffffffffffffffffffffffffffffffff168260040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15611cad5760a0604051908101604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018360030154815260200183600101546000191681526020018873ffffffffffffffffffffffffffffffffffffffff16815250600b60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003019060001916905560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050600d8690806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506001826002015403826002018190555081836004016000878152602001908152602001600020600082015481600001556001820154816001019060001916905560028201548160020155600382015481600301556004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505082600a60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018201548160010155600282015481600201556003820181600301908054611b1b929190613adc565b50905050600b60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508160030154816002015403816002018190555080600b60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820154816001015560028201548160020155600382015481600301906000191690556004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050611cb6565b60009350611cb7565b5b5050509392505050565b60606000600c836040518082805190602001908083835b602083101515611cfd5780518252602082019150602081019050602083039250611cd8565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600101600c846040518082805190602001908083835b602083101515611d6b5780518252602082019150602081019050602083039250611d46565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060020154818054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e375780601f10611e0c57610100808354040283529160200191611e37565b820191906000526020600020905b815481529060010190602001808311611e1a57829003601f168201915b5050505050915091509150915091565b60088054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611edd5780601f10611eb257610100808354040283529160200191611edd565b820191906000526020600020905b815481529060010190602001808311611ec057829003601f168201915b505050505081565b606080606080600080600080600080600080600a60008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002097508c5196506000871415611f9b5787600301805480602002602001604051908101604052809291908181526020018280548015611f9357602002820191906000526020600020905b815481526020019060010190808311611f7f575b50505050509c505b600091505b868210156120ff578760040160008e84815181101515611fbc57fe5b9060200190602002015181526020019081526020016000209050858160010154908060018154018082558091505090600182039060005260206000200160009091929091909150906000191690555084816002015490806001815401808255809150509060018203906000526020600020016000909192909190915055508381600301549080600181540180825580915050906001820390600052602060002001600090919290919091505550828160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550508180600101925050611fa0565b858585858380548060200260200160405190810160405280929190818152602001828054801561215257602002820191906000526020600020905b8154600019168152602001906001019080831161213a575b50505050509350828054806020026020016040519081016040528092919081815260200182805480156121a457602002820191906000526020600020905b815481526020019060010190808311612190575b50505050509250818054806020026020016040519081016040528092919081815260200182805480156121f657602002820191906000526020600020905b8154815260200190600101908083116121e2575b505050505091508080548060200260200160405190810160405280929190818152602001828054801561227e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612234575b505050505090509b509b509b509b50505050505050505092959194509250565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000806000806000339550600194508c9350600a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209250600091505b8a518210156125235760a0604051908101604052808c8481518110151561234157fe5b9060200190602002015181526020018b8481518110151561235e57fe5b906020019060200201516000191681526020018a8481518110151561237f57fe5b906020019060200201518152602001898481518110151561239c57fe5b9060200190602002015181526020018d848151811015156123b957fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff168152508360040160008d858151811015156123f057fe5b9060200190602002015181526020019081526020016000206000820151816000015560208201518160010190600019169055604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050826003018b8381518110151561249257fe5b90602001906020020151908060018154018082558091505090600182039060005260206000200160009091929091909150555088828151811015156124d357fe5b906020019060200201518501945087828151811015156124ef57fe5b90602001906020020151898381518110151561250757fe5b906020019060200201510284039350818060010192505061231e565b60008d1015151561253357600080fd5b848360020181905550858360000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508c836001018190555082600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018201548160010155600282015481600201556003820181600301908054612659929190613adc565b50905050600b60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508573ffffffffffffffffffffffffffffffffffffffff168e73ffffffffffffffffffffffffffffffffffffffff16141561293457858160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508d8160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600081600101819055507f61646d696e0000000000000000000000000000000000000000000000000000008160030181600019169055508c816002018190555080600b60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820154816001015560028201548160020155600382015481600301906000191690556004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050600d8690806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b600e8690806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505050979650505050505050565b60058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612a415780601f10612a1657610100808354040283529160200191612a41565b820191906000526020600020905b815481529060010190602001808311612a2457829003601f168201915b505050505081565b6060600d805480602002602001604051908101604052809291908181526020018280548015612acd57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612a83575b5050505050905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008060006003549350600092505b600d80549050831015612baf57600d83815481101515612b2b57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060020154840193508280600101935050612b0f565b8394505050505090565b600b6020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905085565b60035481565b6000806000806000806000339550600a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002094508460040160008981526020019081526020016000209350600b60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160009055600282016000905560038201600090556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050600092505b600d80549050831015612e1357600d83815481101515612d6457fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691508873ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612e0657600d83815481101515612dd457fe5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055612e13565b8280600101935050612d48565b60018460020154018460020181905550838560040160008a8152602001908152602001600020600082015481600001556001820154816001019060001916905560028201548160020155600382015481600301556004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505084600a60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018201548160010155600282015481600201556003820181600301908054612fa2929190613adc565b50905050600b60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508360030154816002015401816002018190555080600b60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820154816001015560028201548160020155600382015481600301906000191690556004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505050505050505092915050565b6060600e8054806020026020016040519081016040528092919081815260200182805480156131bf57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311613175575b5050505050905090565b6000600f80549050905090565b600f818154811015156131e557fe5b906000526020600020016000915090508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156132895780601f1061325e57610100808354040283529160200191613289565b820191906000526020600020905b81548152906001019060200180831161326c57829003601f168201915b505050505081565b600060606040519081016040528084815260200183815260200142815250600c846040518082805190602001908083835b6020831015156132e757805182526020820191506020810190506020830392506132c2565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206000820151816000019080519060200190613336929190613b2e565b506020820151816001019080519060200190613353929190613b2e565b5060408201518160020155905050600f83908060018154018082558091505090600182039060005260206000200160009091929091909150908051906020019061339e929190613a5c565b50507f4013cd45e5626ff307481e189e2a154e6035bf11795c12ac2010e5275b2f242e336133cc8585613600565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561343e578082015181840152602081019050613423565b50505050905090810190601f16801561346b5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a192915050565b6060600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030180548060200260200160405190810160405280929190818152602001828054801561350d57602002820191906000526020600020905b8154815260200190600101908083116134f9575b50505050509050919050565b60078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156135af5780601f10613584576101008083540402835291602001916135af565b820191906000526020600020905b81548152906001019060200180831161359257829003601f168201915b505050505081565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606061363f8383602060405190810160405280600081525060206040519081016040528060008152506020604051908101604052806000815250613647565b905092915050565b6060806060806060806060806000808e98508d97508c96508b95508a94508451865188518a518c51010101016040519080825280601f01601f1916602001820160405280156136a55781602001602082028038833980820191505090505b50935083925060009150600090505b88518110156137675788818151811015156136cb57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561372a57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506136b4565b600090505b875181101561381f57878181518110151561378357fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156137e257fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061376c565b600090505b86518110156138d757868181518110151561383b57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561389a57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613824565b600090505b855181101561398f5785818151811015156138f357fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561395257fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506138dc565b600090505b8451811015613a475784818151811015156139ab57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515613a0a57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613994565b82995050505050505050505095945050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613a9d57805160ff1916838001178555613acb565b82800160010185558215613acb579182015b82811115613aca578251825591602001919060010190613aaf565b5b509050613ad89190613bae565b5090565b828054828255906000526020600020908101928215613b1d5760005260206000209182015b82811115613b1c578254825591600101919060010190613b01565b5b509050613b2a9190613bd3565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613b6f57805160ff1916838001178555613b9d565b82800160010185558215613b9d579182015b82811115613b9c578251825591602001919060010190613b81565b5b509050613baa9190613bae565b5090565b613bd091905b80821115613bcc576000816000905550600101613bb4565b5090565b90565b613bf591905b80821115613bf1576000816000905550600101613bd9565b5090565b905600a165627a7a723058209dfbea7d22f7171ed5e5b038ba6e139bc550f5d146d6ca1eca1bfdb5e2ec86c50029`

// DeployToken deploys a new Ethereum contract, binding an instance of Token to it.
func DeployToken(auth *bind.TransactOpts, backend bind.ContractBackend, tokenName string, tokenSymbol string,
	initpayer common.Address, payee common.Address, company_ratio *big.Int, init_storesNumber string, init_postscript string,
	decimalUnits uint8) (common.Address, *types.Transaction, *Token, error) {
	parsed, err := abi.JSON(strings.NewReader(TokenABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(TokenBin), backend, tokenName,
		tokenSymbol, initpayer, payee, company_ratio, init_storesNumber, init_postscript, decimalUnits)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Token{TokenCaller: TokenCaller{contract: contract}, TokenTransactor: TokenTransactor{contract: contract}, TokenFilterer: TokenFilterer{contract: contract}}, nil
}

// Token is an auto generated Go binding around an Ethereum contract.
type Token struct {
	TokenCaller     // Read-only binding to the contract
	TokenTransactor // Write-only binding to the contract
	TokenFilterer   // Log filterer for contract events
}

// TokenCaller is an auto generated read-only Go binding around an Ethereum contract.
type TokenCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TokenTransactor is an auto generated write-only Go binding around an Ethereum contract.
type TokenTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TokenFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type TokenFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TokenSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type TokenSession struct {
	Contract     *Token            // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// TokenCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type TokenCallerSession struct {
	Contract *TokenCaller  // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// TokenTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type TokenTransactorSession struct {
	Contract     *TokenTransactor  // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// TokenRaw is an auto generated low-level Go binding around an Ethereum contract.
type TokenRaw struct {
	Contract *Token // Generic contract binding to access the raw methods on
}

// TokenCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type TokenCallerRaw struct {
	Contract *TokenCaller // Generic read-only contract binding to access the raw methods on
}

// TokenTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type TokenTransactorRaw struct {
	Contract *TokenTransactor // Generic write-only contract binding to access the raw methods on
}

// NewToken creates a new instance of Token, bound to a specific deployed contract.
func NewToken(address common.Address, backend bind.ContractBackend) (*Token, error) {
	contract, err := bindToken(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Token{TokenCaller: TokenCaller{contract: contract}, TokenTransactor: TokenTransactor{contract: contract}, TokenFilterer: TokenFilterer{contract: contract}}, nil
}

// NewTokenCaller creates a new read-only instance of Token, bound to a specific deployed contract.
func NewTokenCaller(address common.Address, caller bind.ContractCaller) (*TokenCaller, error) {
	contract, err := bindToken(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &TokenCaller{contract: contract}, nil
}

// NewTokenTransactor creates a new write-only instance of Token, bound to a specific deployed contract.
func NewTokenTransactor(address common.Address, transactor bind.ContractTransactor) (*TokenTransactor, error) {
	contract, err := bindToken(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &TokenTransactor{contract: contract}, nil
}

// NewTokenFilterer creates a new log filterer instance of Token, bound to a specific deployed contract.
func NewTokenFilterer(address common.Address, filterer bind.ContractFilterer) (*TokenFilterer, error) {
	contract, err := bindToken(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &TokenFilterer{contract: contract}, nil
}

// bindToken binds a generic wrapper to an already deployed contract.
func bindToken(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(TokenABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Token *TokenRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Token.Contract.TokenCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Token *TokenRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Token.Contract.TokenTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Token *TokenRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Token.Contract.TokenTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Token *TokenCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Token.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Token *TokenTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Token.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Token *TokenTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Token.Contract.contract.Transact(opts, method, params...)
}

// GetScheduledJobIds is a free data retrieval call binding the contract method 0xeacf2602.
//
// Solidity: function GetScheduledJobIds(issuer address) constant returns(int256[])
func (_Token *TokenCaller) GetScheduledJobIds(opts *bind.CallOpts, issuer common.Address) ([]*big.Int, error) {
	var (
		ret0 = new([]*big.Int)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "GetScheduledJobIds", issuer)
	return *ret0, err
}

// GetScheduledJobIds is a free data retrieval call binding the contract method 0xeacf2602.
//
// Solidity: function GetScheduledJobIds(issuer address) constant returns(int256[])
func (_Token *TokenSession) GetScheduledJobIds(issuer common.Address) ([]*big.Int, error) {
	return _Token.Contract.GetScheduledJobIds(&_Token.CallOpts, issuer)
}

// GetScheduledJobIds is a free data retrieval call binding the contract method 0xeacf2602.
//
// Solidity: function GetScheduledJobIds(issuer address) constant returns(int256[])
func (_Token *TokenCallerSession) GetScheduledJobIds(issuer common.Address) ([]*big.Int, error) {
	return _Token.Contract.GetScheduledJobIds(&_Token.CallOpts, issuer)
}

// Balances is a free data retrieval call binding the contract method 0x27e235e3.
//
// Solidity: function balances( address) constant returns(uint256)
func (_Token *TokenCaller) Balances(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "balances", arg0)
	return *ret0, err
}

// Balances is a free data retrieval call binding the contract method 0x27e235e3.
//
// Solidity: function balances( address) constant returns(uint256)
func (_Token *TokenSession) Balances(arg0 common.Address) (*big.Int, error) {
	return _Token.Contract.Balances(&_Token.CallOpts, arg0)
}

// Balances is a free data retrieval call binding the contract method 0x27e235e3.
//
// Solidity: function balances( address) constant returns(uint256)
func (_Token *TokenCallerSession) Balances(arg0 common.Address) (*big.Int, error) {
	return _Token.Contract.Balances(&_Token.CallOpts, arg0)
}

// CompanyPayee is a free data retrieval call binding the contract method 0x9b2f6b90.
//
// Solidity: function companyPayee() constant returns(address)
func (_Token *TokenCaller) CompanyPayee(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "companyPayee")
	return *ret0, err
}

// CompanyPayee is a free data retrieval call binding the contract method 0x9b2f6b90.
//
// Solidity: function companyPayee() constant returns(address)
func (_Token *TokenSession) CompanyPayee() (common.Address, error) {
	return _Token.Contract.CompanyPayee(&_Token.CallOpts)
}

// CompanyPayee is a free data retrieval call binding the contract method 0x9b2f6b90.
//
// Solidity: function companyPayee() constant returns(address)
func (_Token *TokenCallerSession) CompanyPayee() (common.Address, error) {
	return _Token.Contract.CompanyPayee(&_Token.CallOpts)
}

// CompanyRatio is a free data retrieval call binding the contract method 0xbcdf7ba0.
//
// Solidity: function companyRatio() constant returns(uint256)
func (_Token *TokenCaller) CompanyRatio(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "companyRatio")
	return *ret0, err
}

// CompanyRatio is a free data retrieval call binding the contract method 0xbcdf7ba0.
//
// Solidity: function companyRatio() constant returns(uint256)
func (_Token *TokenSession) CompanyRatio() (*big.Int, error) {
	return _Token.Contract.CompanyRatio(&_Token.CallOpts)
}

// CompanyRatio is a free data retrieval call binding the contract method 0xbcdf7ba0.
//
// Solidity: function companyRatio() constant returns(uint256)
func (_Token *TokenCallerSession) CompanyRatio() (*big.Int, error) {
	return _Token.Contract.CompanyRatio(&_Token.CallOpts)
}

// ContentHashKeys is a free data retrieval call binding the contract method 0xdd3e2d95.
//
// Solidity: function contentHashKeys( uint256) constant returns(string)
func (_Token *TokenCaller) ContentHashKeys(opts *bind.CallOpts, arg0 *big.Int) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "contentHashKeys", arg0)
	return *ret0, err
}

// ContentHashKeys is a free data retrieval call binding the contract method 0xdd3e2d95.
//
// Solidity: function contentHashKeys( uint256) constant returns(string)
func (_Token *TokenSession) ContentHashKeys(arg0 *big.Int) (string, error) {
	return _Token.Contract.ContentHashKeys(&_Token.CallOpts, arg0)
}

// ContentHashKeys is a free data retrieval call binding the contract method 0xdd3e2d95.
//
// Solidity: function contentHashKeys( uint256) constant returns(string)
func (_Token *TokenCallerSession) ContentHashKeys(arg0 *big.Int) (string, error) {
	return _Token.Contract.ContentHashKeys(&_Token.CallOpts, arg0)
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() constant returns(uint8)
func (_Token *TokenCaller) Decimals(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "decimals")
	return *ret0, err
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() constant returns(uint8)
func (_Token *TokenSession) Decimals() (uint8, error) {
	return _Token.Contract.Decimals(&_Token.CallOpts)
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() constant returns(uint8)
func (_Token *TokenCallerSession) Decimals() (uint8, error) {
	return _Token.Contract.Decimals(&_Token.CallOpts)
}

// FindScheduled is a free data retrieval call binding the contract method 0x7c2c1500.
//
// Solidity: function findScheduled(issuer address, jobIds int256[]) constant returns(bytes32[], uint256[], uint256[], address[])
func (_Token *TokenCaller) FindScheduled(opts *bind.CallOpts, issuer common.Address, jobIds []*big.Int) ([][32]byte, []*big.Int, []*big.Int, []common.Address, error) {
	var (
		ret0 = new([][32]byte)
		ret1 = new([]*big.Int)
		ret2 = new([]*big.Int)
		ret3 = new([]common.Address)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
		ret3,
	}
	err := _Token.contract.Call(opts, out, "findScheduled", issuer, jobIds)
	return *ret0, *ret1, *ret2, *ret3, err
}

// FindScheduled is a free data retrieval call binding the contract method 0x7c2c1500.
//
// Solidity: function findScheduled(issuer address, jobIds int256[]) constant returns(bytes32[], uint256[], uint256[], address[])
func (_Token *TokenSession) FindScheduled(issuer common.Address, jobIds []*big.Int) ([][32]byte, []*big.Int, []*big.Int, []common.Address, error) {
	return _Token.Contract.FindScheduled(&_Token.CallOpts, issuer, jobIds)
}

// FindScheduled is a free data retrieval call binding the contract method 0x7c2c1500.
//
// Solidity: function findScheduled(issuer address, jobIds int256[]) constant returns(bytes32[], uint256[], uint256[], address[])
func (_Token *TokenCallerSession) FindScheduled(issuer common.Address, jobIds []*big.Int) ([][32]byte, []*big.Int, []*big.Int, []common.Address, error) {
	return _Token.Contract.FindScheduled(&_Token.CallOpts, issuer, jobIds)
}

// FindScheduledIssue is a free data retrieval call binding the contract method 0x49499b73.
//
// Solidity: function findScheduledIssue(issuer address, jobId int256) constant returns(bytes32, uint256, uint256, address)
func (_Token *TokenCaller) FindScheduledIssue(opts *bind.CallOpts, issuer common.Address, jobId *big.Int) ([32]byte, *big.Int, *big.Int, common.Address, error) {
	var (
		ret0 = new([32]byte)
		ret1 = new(*big.Int)
		ret2 = new(*big.Int)
		ret3 = new(common.Address)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
		ret3,
	}
	err := _Token.contract.Call(opts, out, "findScheduledIssue", issuer, jobId)
	return *ret0, *ret1, *ret2, *ret3, err
}

// FindScheduledIssue is a free data retrieval call binding the contract method 0x49499b73.
//
// Solidity: function findScheduledIssue(issuer address, jobId int256) constant returns(bytes32, uint256, uint256, address)
func (_Token *TokenSession) FindScheduledIssue(issuer common.Address, jobId *big.Int) ([32]byte, *big.Int, *big.Int, common.Address, error) {
	return _Token.Contract.FindScheduledIssue(&_Token.CallOpts, issuer, jobId)
}

// FindScheduledIssue is a free data retrieval call binding the contract method 0x49499b73.
//
// Solidity: function findScheduledIssue(issuer address, jobId int256) constant returns(bytes32, uint256, uint256, address)
func (_Token *TokenCallerSession) FindScheduledIssue(issuer common.Address, jobId *big.Int) ([32]byte, *big.Int, *big.Int, common.Address, error) {
	return _Token.Contract.FindScheduledIssue(&_Token.CallOpts, issuer, jobId)
}

// GetAllRatio is a free data retrieval call binding the contract method 0xa8ff0efe.
//
// Solidity: function getAllRatio() constant returns(uint256)
func (_Token *TokenCaller) GetAllRatio(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "getAllRatio")
	return *ret0, err
}

// GetAllRatio is a free data retrieval call binding the contract method 0xa8ff0efe.
//
// Solidity: function getAllRatio() constant returns(uint256)
func (_Token *TokenSession) GetAllRatio() (*big.Int, error) {
	return _Token.Contract.GetAllRatio(&_Token.CallOpts)
}

// GetAllRatio is a free data retrieval call binding the contract method 0xa8ff0efe.
//
// Solidity: function getAllRatio() constant returns(uint256)
func (_Token *TokenCallerSession) GetAllRatio() (*big.Int, error) {
	return _Token.Contract.GetAllRatio(&_Token.CallOpts)
}

// GetAllpublishAddrs is a free data retrieval call binding the contract method 0xc76c1a11.
//
// Solidity: function getAllpublishAddrs() constant returns(address[])
func (_Token *TokenCaller) GetAllpublishAddrs(opts *bind.CallOpts) ([]common.Address, error) {
	var (
		ret0 = new([]common.Address)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "getAllpublishAddrs")
	return *ret0, err
}

// GetAllpublishAddrs is a free data retrieval call binding the contract method 0xc76c1a11.
//
// Solidity: function getAllpublishAddrs() constant returns(address[])
func (_Token *TokenSession) GetAllpublishAddrs() ([]common.Address, error) {
	return _Token.Contract.GetAllpublishAddrs(&_Token.CallOpts)
}

// GetAllpublishAddrs is a free data retrieval call binding the contract method 0xc76c1a11.
//
// Solidity: function getAllpublishAddrs() constant returns(address[])
func (_Token *TokenCallerSession) GetAllpublishAddrs() ([]common.Address, error) {
	return _Token.Contract.GetAllpublishAddrs(&_Token.CallOpts)
}

// GetBalance is a free data retrieval call binding the contract method 0xf8b2cb4f.
//
// Solidity: function getBalance(account address) constant returns(uint256)
func (_Token *TokenCaller) GetBalance(opts *bind.CallOpts, account common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "getBalance", account)
	return *ret0, err
}

// GetBalance is a free data retrieval call binding the contract method 0xf8b2cb4f.
//
// Solidity: function getBalance(account address) constant returns(uint256)
func (_Token *TokenSession) GetBalance(account common.Address) (*big.Int, error) {
	return _Token.Contract.GetBalance(&_Token.CallOpts, account)
}

// GetBalance is a free data retrieval call binding the contract method 0xf8b2cb4f.
//
// Solidity: function getBalance(account address) constant returns(uint256)
func (_Token *TokenCallerSession) GetBalance(account common.Address) (*big.Int, error) {
	return _Token.Contract.GetBalance(&_Token.CallOpts, account)
}

// GetContHash is a free data retrieval call binding the contract method 0x619272ae.
//
// Solidity: function getContHash(hash string) constant returns(string, uint256)
func (_Token *TokenCaller) GetContHash(opts *bind.CallOpts, hash string) (string, *big.Int, error) {
	var (
		ret0 = new(string)
		ret1 = new(*big.Int)
	)
	out := &[]interface{}{
		ret0,
		ret1,
	}
	err := _Token.contract.Call(opts, out, "getContHash", hash)
	return *ret0, *ret1, err
}

// GetContHash is a free data retrieval call binding the contract method 0x619272ae.
//
// Solidity: function getContHash(hash string) constant returns(string, uint256)
func (_Token *TokenSession) GetContHash(hash string) (string, *big.Int, error) {
	return _Token.Contract.GetContHash(&_Token.CallOpts, hash)
}

// GetContHash is a free data retrieval call binding the contract method 0x619272ae.
//
// Solidity: function getContHash(hash string) constant returns(string, uint256)
func (_Token *TokenCallerSession) GetContHash(hash string) (string, *big.Int, error) {
	return _Token.Contract.GetContHash(&_Token.CallOpts, hash)
}

// GetContentHashKeysLen is a free data retrieval call binding the contract method 0xc8783322.
//
// Solidity: function getContentHashKeysLen() constant returns(uint256)
func (_Token *TokenCaller) GetContentHashKeysLen(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "getContentHashKeysLen")
	return *ret0, err
}

// GetContentHashKeysLen is a free data retrieval call binding the contract method 0xc8783322.
//
// Solidity: function getContentHashKeysLen() constant returns(uint256)
func (_Token *TokenSession) GetContentHashKeysLen() (*big.Int, error) {
	return _Token.Contract.GetContentHashKeysLen(&_Token.CallOpts)
}

// GetContentHashKeysLen is a free data retrieval call binding the contract method 0xc8783322.
//
// Solidity: function getContentHashKeysLen() constant returns(uint256)
func (_Token *TokenCallerSession) GetContentHashKeysLen() (*big.Int, error) {
	return _Token.Contract.GetContentHashKeysLen(&_Token.CallOpts)
}

// GetScheduleingAddr is a free data retrieval call binding the contract method 0x98944f7a.
//
// Solidity: function getScheduleingAddr() constant returns(address[])
func (_Token *TokenCaller) GetScheduleingAddr(opts *bind.CallOpts) ([]common.Address, error) {
	var (
		ret0 = new([]common.Address)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "getScheduleingAddr")
	return *ret0, err
}

// GetScheduleingAddr is a free data retrieval call binding the contract method 0x98944f7a.
//
// Solidity: function getScheduleingAddr() constant returns(address[])
func (_Token *TokenSession) GetScheduleingAddr() ([]common.Address, error) {
	return _Token.Contract.GetScheduleingAddr(&_Token.CallOpts)
}

// GetScheduleingAddr is a free data retrieval call binding the contract method 0x98944f7a.
//
// Solidity: function getScheduleingAddr() constant returns(address[])
func (_Token *TokenCallerSession) GetScheduleingAddr() ([]common.Address, error) {
	return _Token.Contract.GetScheduleingAddr(&_Token.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() constant returns(string)
func (_Token *TokenCaller) Name(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "name")
	return *ret0, err
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() constant returns(string)
func (_Token *TokenSession) Name() (string, error) {
	return _Token.Contract.Name(&_Token.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() constant returns(string)
func (_Token *TokenCallerSession) Name() (string, error) {
	return _Token.Contract.Name(&_Token.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Token *TokenCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Token *TokenSession) Owner() (common.Address, error) {
	return _Token.Contract.Owner(&_Token.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Token *TokenCallerSession) Owner() (common.Address, error) {
	return _Token.Contract.Owner(&_Token.CallOpts)
}

// Payer is a free data retrieval call binding the contract method 0x123119cd.
//
// Solidity: function payer() constant returns(address)
func (_Token *TokenCaller) Payer(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "payer")
	return *ret0, err
}

// Payer is a free data retrieval call binding the contract method 0x123119cd.
//
// Solidity: function payer() constant returns(address)
func (_Token *TokenSession) Payer() (common.Address, error) {
	return _Token.Contract.Payer(&_Token.CallOpts)
}

// Payer is a free data retrieval call binding the contract method 0x123119cd.
//
// Solidity: function payer() constant returns(address)
func (_Token *TokenCallerSession) Payer() (common.Address, error) {
	return _Token.Contract.Payer(&_Token.CallOpts)
}

// Postscript is a free data retrieval call binding the contract method 0x7127054d.
//
// Solidity: function postscript() constant returns(string)
func (_Token *TokenCaller) Postscript(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "postscript")
	return *ret0, err
}

// Postscript is a free data retrieval call binding the contract method 0x7127054d.
//
// Solidity: function postscript() constant returns(string)
func (_Token *TokenSession) Postscript() (string, error) {
	return _Token.Contract.Postscript(&_Token.CallOpts)
}

// Postscript is a free data retrieval call binding the contract method 0x7127054d.
//
// Solidity: function postscript() constant returns(string)
func (_Token *TokenCallerSession) Postscript() (string, error) {
	return _Token.Contract.Postscript(&_Token.CallOpts)
}

// PublishAddrs is a free data retrieval call binding the contract method 0x54c9beb7.
//
// Solidity: function publishAddrs( uint256) constant returns(address)
func (_Token *TokenCaller) PublishAddrs(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "publishAddrs", arg0)
	return *ret0, err
}

// PublishAddrs is a free data retrieval call binding the contract method 0x54c9beb7.
//
// Solidity: function publishAddrs( uint256) constant returns(address)
func (_Token *TokenSession) PublishAddrs(arg0 *big.Int) (common.Address, error) {
	return _Token.Contract.PublishAddrs(&_Token.CallOpts, arg0)
}

// PublishAddrs is a free data retrieval call binding the contract method 0x54c9beb7.
//
// Solidity: function publishAddrs( uint256) constant returns(address)
func (_Token *TokenCallerSession) PublishAddrs(arg0 *big.Int) (common.Address, error) {
	return _Token.Contract.PublishAddrs(&_Token.CallOpts, arg0)
}

// ScheduleDesireds is a free data retrieval call binding the contract method 0x0c723a4f.
//
// Solidity: function scheduleDesireds( address) constant returns(issuer address, issueRatio uint256, count uint256)
func (_Token *TokenCaller) ScheduleDesireds(opts *bind.CallOpts, arg0 common.Address) (struct {
	Issuer     common.Address
	IssueRatio *big.Int
	Count      *big.Int
}, error) {
	ret := new(struct {
		Issuer     common.Address
		IssueRatio *big.Int
		Count      *big.Int
	})
	out := ret
	err := _Token.contract.Call(opts, out, "scheduleDesireds", arg0)
	return *ret, err
}

// ScheduleDesireds is a free data retrieval call binding the contract method 0x0c723a4f.
//
// Solidity: function scheduleDesireds( address) constant returns(issuer address, issueRatio uint256, count uint256)
func (_Token *TokenSession) ScheduleDesireds(arg0 common.Address) (struct {
	Issuer     common.Address
	IssueRatio *big.Int
	Count      *big.Int
}, error) {
	return _Token.Contract.ScheduleDesireds(&_Token.CallOpts, arg0)
}

// ScheduleDesireds is a free data retrieval call binding the contract method 0x0c723a4f.
//
// Solidity: function scheduleDesireds( address) constant returns(issuer address, issueRatio uint256, count uint256)
func (_Token *TokenCallerSession) ScheduleDesireds(arg0 common.Address) (struct {
	Issuer     common.Address
	IssueRatio *big.Int
	Count      *big.Int
}, error) {
	return _Token.Contract.ScheduleDesireds(&_Token.CallOpts, arg0)
}

// ScheduleStaffs is a free data retrieval call binding the contract method 0xaeea1977.
//
// Solidity: function scheduleStaffs( address) constant returns(staffAddr address, jobId int256, ratio uint256, role bytes32, fatherAddress address)
func (_Token *TokenCaller) ScheduleStaffs(opts *bind.CallOpts, arg0 common.Address) (struct {
	StaffAddr     common.Address
	JobId         *big.Int
	Ratio         *big.Int
	Role          [32]byte
	FatherAddress common.Address
}, error) {
	ret := new(struct {
		StaffAddr     common.Address
		JobId         *big.Int
		Ratio         *big.Int
		Role          [32]byte
		FatherAddress common.Address
	})
	out := ret
	err := _Token.contract.Call(opts, out, "scheduleStaffs", arg0)
	return *ret, err
}

// ScheduleStaffs is a free data retrieval call binding the contract method 0xaeea1977.
//
// Solidity: function scheduleStaffs( address) constant returns(staffAddr address, jobId int256, ratio uint256, role bytes32, fatherAddress address)
func (_Token *TokenSession) ScheduleStaffs(arg0 common.Address) (struct {
	StaffAddr     common.Address
	JobId         *big.Int
	Ratio         *big.Int
	Role          [32]byte
	FatherAddress common.Address
}, error) {
	return _Token.Contract.ScheduleStaffs(&_Token.CallOpts, arg0)
}

// ScheduleStaffs is a free data retrieval call binding the contract method 0xaeea1977.
//
// Solidity: function scheduleStaffs( address) constant returns(staffAddr address, jobId int256, ratio uint256, role bytes32, fatherAddress address)
func (_Token *TokenCallerSession) ScheduleStaffs(arg0 common.Address) (struct {
	StaffAddr     common.Address
	JobId         *big.Int
	Ratio         *big.Int
	Role          [32]byte
	FatherAddress common.Address
}, error) {
	return _Token.Contract.ScheduleStaffs(&_Token.CallOpts, arg0)
}

// StoresNumber is a free data retrieval call binding the contract method 0xf21d1f50.
//
// Solidity: function storesNumber() constant returns(string)
func (_Token *TokenCaller) StoresNumber(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "storesNumber")
	return *ret0, err
}

// StoresNumber is a free data retrieval call binding the contract method 0xf21d1f50.
//
// Solidity: function storesNumber() constant returns(string)
func (_Token *TokenSession) StoresNumber() (string, error) {
	return _Token.Contract.StoresNumber(&_Token.CallOpts)
}

// StoresNumber is a free data retrieval call binding the contract method 0xf21d1f50.
//
// Solidity: function storesNumber() constant returns(string)
func (_Token *TokenCallerSession) StoresNumber() (string, error) {
	return _Token.Contract.StoresNumber(&_Token.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() constant returns(string)
func (_Token *TokenCaller) Symbol(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _Token.contract.Call(opts, out, "symbol")
	return *ret0, err
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() constant returns(string)
func (_Token *TokenSession) Symbol() (string, error) {
	return _Token.Contract.Symbol(&_Token.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() constant returns(string)
func (_Token *TokenCallerSession) Symbol() (string, error) {
	return _Token.Contract.Symbol(&_Token.CallOpts)
}

// Application is a paid mutator transaction binding the contract method 0x6069491d.
//
// Solidity: function application(fatherAddr address, staffAddr address, jobId int256) returns(success bool)
func (_Token *TokenTransactor) Application(opts *bind.TransactOpts, fatherAddr common.Address, staffAddr common.Address, jobId *big.Int) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "application", fatherAddr, staffAddr, jobId)
}

// Application is a paid mutator transaction binding the contract method 0x6069491d.
//
// Solidity: function application(fatherAddr address, staffAddr address, jobId int256) returns(success bool)
func (_Token *TokenSession) Application(fatherAddr common.Address, staffAddr common.Address, jobId *big.Int) (*types.Transaction, error) {
	return _Token.Contract.Application(&_Token.TransactOpts, fatherAddr, staffAddr, jobId)
}

// Application is a paid mutator transaction binding the contract method 0x6069491d.
//
// Solidity: function application(fatherAddr address, staffAddr address, jobId int256) returns(success bool)
func (_Token *TokenTransactorSession) Application(fatherAddr common.Address, staffAddr common.Address, jobId *big.Int) (*types.Transaction, error) {
	return _Token.Contract.Application(&_Token.TransactOpts, fatherAddr, staffAddr, jobId)
}

// DelApplication is a paid mutator transaction binding the contract method 0xc20f9c54.
//
// Solidity: function delApplication(staffAddr address, jobId int256) returns(success bool)
func (_Token *TokenTransactor) DelApplication(opts *bind.TransactOpts, staffAddr common.Address, jobId *big.Int) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "delApplication", staffAddr, jobId)
}

// DelApplication is a paid mutator transaction binding the contract method 0xc20f9c54.
//
// Solidity: function delApplication(staffAddr address, jobId int256) returns(success bool)
func (_Token *TokenSession) DelApplication(staffAddr common.Address, jobId *big.Int) (*types.Transaction, error) {
	return _Token.Contract.DelApplication(&_Token.TransactOpts, staffAddr, jobId)
}

// DelApplication is a paid mutator transaction binding the contract method 0xc20f9c54.
//
// Solidity: function delApplication(staffAddr address, jobId int256) returns(success bool)
func (_Token *TokenTransactorSession) DelApplication(staffAddr common.Address, jobId *big.Int) (*types.Transaction, error) {
	return _Token.Contract.DelApplication(&_Token.TransactOpts, staffAddr, jobId)
}

// SaveContHash is a paid mutator transaction binding the contract method 0xe19f0586.
//
// Solidity: function saveContHash(hash string, content string) returns(success bool)
func (_Token *TokenTransactor) SaveContHash(opts *bind.TransactOpts, hash string, content string) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "saveContHash", hash, content)
}

// SaveContHash is a paid mutator transaction binding the contract method 0xe19f0586.
//
// Solidity: function saveContHash(hash string, content string) returns(success bool)
func (_Token *TokenSession) SaveContHash(hash string, content string) (*types.Transaction, error) {
	return _Token.Contract.SaveContHash(&_Token.TransactOpts, hash, content)
}

// SaveContHash is a paid mutator transaction binding the contract method 0xe19f0586.
//
// Solidity: function saveContHash(hash string, content string) returns(success bool)
func (_Token *TokenTransactorSession) SaveContHash(hash string, content string) (*types.Transaction, error) {
	return _Token.Contract.SaveContHash(&_Token.TransactOpts, hash, content)
}

// Scheduleing is a paid mutator transaction binding the contract method 0x92011f1c.
//
// Solidity: function scheduleing(fatherAddress address, issueRatio uint256, whitelists address[], jobIds int256[], roles bytes32[], counts uint256[], ratio uint256[]) returns(success bool)
func (_Token *TokenTransactor) Scheduleing(opts *bind.TransactOpts, fatherAddress common.Address, issueRatio *big.Int, whitelists []common.Address, jobIds []*big.Int, roles [][32]byte, counts []*big.Int, ratio []*big.Int) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "scheduleing", fatherAddress, issueRatio, whitelists, jobIds, roles, counts, ratio)
}

// Scheduleing is a paid mutator transaction binding the contract method 0x92011f1c.
//
// Solidity: function scheduleing(fatherAddress address, issueRatio uint256, whitelists address[], jobIds int256[], roles bytes32[], counts uint256[], ratio uint256[]) returns(success bool)
func (_Token *TokenSession) Scheduleing(fatherAddress common.Address, issueRatio *big.Int, whitelists []common.Address, jobIds []*big.Int, roles [][32]byte, counts []*big.Int, ratio []*big.Int) (*types.Transaction, error) {
	return _Token.Contract.Scheduleing(&_Token.TransactOpts, fatherAddress, issueRatio, whitelists, jobIds, roles, counts, ratio)
}

// Scheduleing is a paid mutator transaction binding the contract method 0x92011f1c.
//
// Solidity: function scheduleing(fatherAddress address, issueRatio uint256, whitelists address[], jobIds int256[], roles bytes32[], counts uint256[], ratio uint256[]) returns(success bool)
func (_Token *TokenTransactorSession) Scheduleing(fatherAddress common.Address, issueRatio *big.Int, whitelists []common.Address, jobIds []*big.Int, roles [][32]byte, counts []*big.Int, ratio []*big.Int) (*types.Transaction, error) {
	return _Token.Contract.Scheduleing(&_Token.TransactOpts, fatherAddress, issueRatio, whitelists, jobIds, roles, counts, ratio)
}

// SettleAccounts is a paid mutator transaction binding the contract method 0x50d20a27.
//
// Solidity: function settleAccounts(totalConsume uint256) returns(success bool)
func (_Token *TokenTransactor) SettleAccounts(opts *bind.TransactOpts, totalConsume *big.Int) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "settleAccounts", totalConsume)
}

// SettleAccounts is a paid mutator transaction binding the contract method 0x50d20a27.
//
// Solidity: function settleAccounts(totalConsume uint256) returns(success bool)
func (_Token *TokenSession) SettleAccounts(totalConsume *big.Int) (*types.Transaction, error) {
	return _Token.Contract.SettleAccounts(&_Token.TransactOpts, totalConsume)
}

// SettleAccounts is a paid mutator transaction binding the contract method 0x50d20a27.
//
// Solidity: function settleAccounts(totalConsume uint256) returns(success bool)
func (_Token *TokenTransactorSession) SettleAccounts(totalConsume *big.Int) (*types.Transaction, error) {
	return _Token.Contract.SettleAccounts(&_Token.TransactOpts, totalConsume)
}

// UpdatePostscript is a paid mutator transaction binding the contract method 0x5cbd740e.
//
// Solidity: function updatePostscript(u_postscript string) returns()
func (_Token *TokenTransactor) UpdatePostscript(opts *bind.TransactOpts, u_postscript string) (*types.Transaction, error) {
	return _Token.contract.Transact(opts, "updatePostscript", u_postscript)
}

// UpdatePostscript is a paid mutator transaction binding the contract method 0x5cbd740e.
//
// Solidity: function updatePostscript(u_postscript string) returns()
func (_Token *TokenSession) UpdatePostscript(u_postscript string) (*types.Transaction, error) {
	return _Token.Contract.UpdatePostscript(&_Token.TransactOpts, u_postscript)
}

// UpdatePostscript is a paid mutator transaction binding the contract method 0x5cbd740e.
//
// Solidity: function updatePostscript(u_postscript string) returns()
func (_Token *TokenTransactorSession) UpdatePostscript(u_postscript string) (*types.Transaction, error) {
	return _Token.Contract.UpdatePostscript(&_Token.TransactOpts, u_postscript)
}

// TokenIssueIterator is returned from FilterIssue and is used to iterate over the raw logs and unpacked data for Issue events raised by the Token contract.
type TokenIssueIterator struct {
	Event *TokenIssue // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TokenIssueIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TokenIssue)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TokenIssue)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TokenIssueIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TokenIssueIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TokenIssue represents a Issue event raised by the Token contract.
type TokenIssue struct {
	Account common.Address
	Amount  *big.Int
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterIssue is a free log retrieval operation binding the contract event 0xc65a3f767206d2fdcede0b094a4840e01c0dd0be1888b5ba800346eaa0123c16.
//
// Solidity: event Issue(account address, amount uint256)
func (_Token *TokenFilterer) FilterIssue(opts *bind.FilterOpts) (*TokenIssueIterator, error) {

	logs, sub, err := _Token.contract.FilterLogs(opts, "Issue")
	if err != nil {
		return nil, err
	}
	return &TokenIssueIterator{contract: _Token.contract, event: "Issue", logs: logs, sub: sub}, nil
}

// WatchIssue is a free log subscription operation binding the contract event 0xc65a3f767206d2fdcede0b094a4840e01c0dd0be1888b5ba800346eaa0123c16.
//
// Solidity: event Issue(account address, amount uint256)
func (_Token *TokenFilterer) WatchIssue(opts *bind.WatchOpts, sink chan<- *TokenIssue) (event.Subscription, error) {

	logs, sub, err := _Token.contract.WatchLogs(opts, "Issue")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TokenIssue)
				if err := _Token.contract.UnpackLog(event, "Issue", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// TokenTransferIterator is returned from FilterTransfer and is used to iterate over the raw logs and unpacked data for Transfer events raised by the Token contract.
type TokenTransferIterator struct {
	Event *TokenTransfer // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TokenTransferIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TokenTransfer)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TokenTransfer)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TokenTransferIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TokenTransferIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TokenTransfer represents a Transfer event raised by the Token contract.
type TokenTransfer struct {
	From   common.Address
	To     common.Address
	Amount *big.Int
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterTransfer is a free log retrieval operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(from address, to address, amount uint256)
func (_Token *TokenFilterer) FilterTransfer(opts *bind.FilterOpts) (*TokenTransferIterator, error) {

	logs, sub, err := _Token.contract.FilterLogs(opts, "Transfer")
	if err != nil {
		return nil, err
	}
	return &TokenTransferIterator{contract: _Token.contract, event: "Transfer", logs: logs, sub: sub}, nil
}

// WatchTransfer is a free log subscription operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(from address, to address, amount uint256)
func (_Token *TokenFilterer) WatchTransfer(opts *bind.WatchOpts, sink chan<- *TokenTransfer) (event.Subscription, error) {

	logs, sub, err := _Token.contract.WatchLogs(opts, "Transfer")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TokenTransfer)
				if err := _Token.contract.UnpackLog(event, "Transfer", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// TokenGloballogIterator is returned from FilterGloballog and is used to iterate over the raw logs and unpacked data for Globallog events raised by the Token contract.
type TokenGloballogIterator struct {
	Event *TokenGloballog // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TokenGloballogIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TokenGloballog)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TokenGloballog)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TokenGloballogIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TokenGloballogIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TokenGloballog represents a Globallog event raised by the Token contract.
type TokenGloballog struct {
	Sender common.Address
	Logstr string
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterGloballog is a free log retrieval operation binding the contract event 0x4013cd45e5626ff307481e189e2a154e6035bf11795c12ac2010e5275b2f242e.
//
// Solidity: event globallog(sender address, logstr string)
func (_Token *TokenFilterer) FilterGloballog(opts *bind.FilterOpts) (*TokenGloballogIterator, error) {

	logs, sub, err := _Token.contract.FilterLogs(opts, "globallog")
	if err != nil {
		return nil, err
	}
	return &TokenGloballogIterator{contract: _Token.contract, event: "globallog", logs: logs, sub: sub}, nil
}

// WatchGloballog is a free log subscription operation binding the contract event 0x4013cd45e5626ff307481e189e2a154e6035bf11795c12ac2010e5275b2f242e.
//
// Solidity: event globallog(sender address, logstr string)
func (_Token *TokenFilterer) WatchGloballog(opts *bind.WatchOpts, sink chan<- *TokenGloballog) (event.Subscription, error) {

	logs, sub, err := _Token.contract.WatchLogs(opts, "globallog")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TokenGloballog)
				if err := _Token.contract.UnpackLog(event, "globallog", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}
