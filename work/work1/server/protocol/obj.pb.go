// Code generated by protoc-gen-go. DO NOT EDIT.
// source: obj.proto

package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 职位对象
type Job struct {
	JobAddress string `protobuf:"bytes,1,opt,name=JobAddress" json:"JobAddress,omitempty"`
	Role       string `protobuf:"bytes,2,opt,name=Role" json:"Role,omitempty"`
	Count      uint32 `protobuf:"varint,3,opt,name=Count" json:"Count,omitempty"`
	Radio      uint64 `protobuf:"varint,4,opt,name=Radio" json:"Radio,omitempty"`
	// uint64 IssueRadio = 5;
	Company    string   `protobuf:"bytes,6,opt,name=Company" json:"Company,omitempty"`
	TimeStamp  int64    `protobuf:"varint,7,opt,name=TimeStamp" json:"TimeStamp,omitempty"`
	HasApply   bool     `protobuf:"varint,8,opt,name=HasApply" json:"HasApply,omitempty"`
	JobId      int32    `protobuf:"varint,9,opt,name=JobId" json:"JobId,omitempty"`
	FatherAddr string   `protobuf:"bytes,10,opt,name=FatherAddr" json:"FatherAddr,omitempty"`
	WhiteList  []string `protobuf:"bytes,11,rep,name=WhiteList" json:"WhiteList,omitempty"`
	WhiteName  string   `protobuf:"bytes,12,opt,name=WhiteName" json:"WhiteName,omitempty"`
}

func (m *Job) Reset()                    { *m = Job{} }
func (m *Job) String() string            { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()               {}
func (*Job) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Job) GetJobAddress() string {
	if m != nil {
		return m.JobAddress
	}
	return ""
}

func (m *Job) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *Job) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *Job) GetRadio() uint64 {
	if m != nil {
		return m.Radio
	}
	return 0
}

func (m *Job) GetCompany() string {
	if m != nil {
		return m.Company
	}
	return ""
}

func (m *Job) GetTimeStamp() int64 {
	if m != nil {
		return m.TimeStamp
	}
	return 0
}

func (m *Job) GetHasApply() bool {
	if m != nil {
		return m.HasApply
	}
	return false
}

func (m *Job) GetJobId() int32 {
	if m != nil {
		return m.JobId
	}
	return 0
}

func (m *Job) GetFatherAddr() string {
	if m != nil {
		return m.FatherAddr
	}
	return ""
}

func (m *Job) GetWhiteList() []string {
	if m != nil {
		return m.WhiteList
	}
	return nil
}

func (m *Job) GetWhiteName() string {
	if m != nil {
		return m.WhiteName
	}
	return ""
}

// 工作单位
type Unit struct {
	Role      string `protobuf:"bytes,1,opt,name=Role" json:"Role,omitempty"`
	Company   string `protobuf:"bytes,2,opt,name=Company" json:"Company,omitempty"`
	Location  string `protobuf:"bytes,3,opt,name=Location" json:"Location,omitempty"`
	StartTime uint32 `protobuf:"varint,4,opt,name=StartTime" json:"StartTime,omitempty"`
	EndTime   uint32 `protobuf:"varint,5,opt,name=EndTime" json:"EndTime,omitempty"`
}

func (m *Unit) Reset()                    { *m = Unit{} }
func (m *Unit) String() string            { return proto.CompactTextString(m) }
func (*Unit) ProtoMessage()               {}
func (*Unit) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *Unit) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *Unit) GetCompany() string {
	if m != nil {
		return m.Company
	}
	return ""
}

func (m *Unit) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *Unit) GetStartTime() uint32 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *Unit) GetEndTime() uint32 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

// 排班
type Schedule struct {
	Jobaddr       string `protobuf:"bytes,1,opt,name=Jobaddr" json:"Jobaddr,omitempty"`
	Jobs          []*Job `protobuf:"bytes,2,rep,name=Jobs" json:"Jobs,omitempty"`
	TimeStamp     int64  `protobuf:"varint,3,opt,name=TimeStamp" json:"TimeStamp,omitempty"`
	CompanyName   string `protobuf:"bytes,4,opt,name=CompanyName" json:"CompanyName,omitempty"`
	CompanyRatio  int64  `protobuf:"varint,5,opt,name=CompanyRatio" json:"CompanyRatio,omitempty"`
	FatherAddress string `protobuf:"bytes,6,opt,name=FatherAddress" json:"FatherAddress,omitempty"`
}

func (m *Schedule) Reset()                    { *m = Schedule{} }
func (m *Schedule) String() string            { return proto.CompactTextString(m) }
func (*Schedule) ProtoMessage()               {}
func (*Schedule) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *Schedule) GetJobaddr() string {
	if m != nil {
		return m.Jobaddr
	}
	return ""
}

func (m *Schedule) GetJobs() []*Job {
	if m != nil {
		return m.Jobs
	}
	return nil
}

func (m *Schedule) GetTimeStamp() int64 {
	if m != nil {
		return m.TimeStamp
	}
	return 0
}

func (m *Schedule) GetCompanyName() string {
	if m != nil {
		return m.CompanyName
	}
	return ""
}

func (m *Schedule) GetCompanyRatio() int64 {
	if m != nil {
		return m.CompanyRatio
	}
	return 0
}

func (m *Schedule) GetFatherAddress() string {
	if m != nil {
		return m.FatherAddress
	}
	return ""
}

// 申请人信息
type ScheduleStaff struct {
	StaffAddr  string `protobuf:"bytes,1,opt,name=StaffAddr" json:"StaffAddr,omitempty"`
	Role       string `protobuf:"bytes,2,opt,name=Role" json:"Role,omitempty"`
	Ratio      uint64 `protobuf:"varint,3,opt,name=Ratio" json:"Ratio,omitempty"`
	JobId      int64  `protobuf:"varint,4,opt,name=JobId" json:"JobId,omitempty"`
	FatherAddr string `protobuf:"bytes,5,opt,name=FatherAddr" json:"FatherAddr,omitempty"`
}

func (m *ScheduleStaff) Reset()                    { *m = ScheduleStaff{} }
func (m *ScheduleStaff) String() string            { return proto.CompactTextString(m) }
func (*ScheduleStaff) ProtoMessage()               {}
func (*ScheduleStaff) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *ScheduleStaff) GetStaffAddr() string {
	if m != nil {
		return m.StaffAddr
	}
	return ""
}

func (m *ScheduleStaff) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *ScheduleStaff) GetRatio() uint64 {
	if m != nil {
		return m.Ratio
	}
	return 0
}

func (m *ScheduleStaff) GetJobId() int64 {
	if m != nil {
		return m.JobId
	}
	return 0
}

func (m *ScheduleStaff) GetFatherAddr() string {
	if m != nil {
		return m.FatherAddr
	}
	return ""
}

// 订单信息
type Order struct {
	Table      uint32  `protobuf:"varint,1,opt,name=Table" json:"Table,omitempty"`
	TimeStamp  int64   `protobuf:"varint,2,opt,name=TimeStamp" json:"TimeStamp,omitempty"`
	Money      float64 `protobuf:"fixed64,3,opt,name=Money" json:"Money,omitempty"`
	OrderId    string  `protobuf:"bytes,4,opt,name=OrderId" json:"OrderId,omitempty"`
	Content    string  `protobuf:"bytes,5,opt,name=Content" json:"Content,omitempty"`
	GetMoney_  float64 `protobuf:"fixed64,6,opt,name=GetMoney" json:"GetMoney,omitempty"`
	JobAddress string  `protobuf:"bytes,7,opt,name=JobAddress" json:"JobAddress,omitempty"`
}

func (m *Order) Reset()                    { *m = Order{} }
func (m *Order) String() string            { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()               {}
func (*Order) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *Order) GetTable() uint32 {
	if m != nil {
		return m.Table
	}
	return 0
}

func (m *Order) GetTimeStamp() int64 {
	if m != nil {
		return m.TimeStamp
	}
	return 0
}

func (m *Order) GetMoney() float64 {
	if m != nil {
		return m.Money
	}
	return 0
}

func (m *Order) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *Order) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Order) GetGetMoney_() float64 {
	if m != nil {
		return m.GetMoney_
	}
	return 0
}

func (m *Order) GetJobAddress() string {
	if m != nil {
		return m.JobAddress
	}
	return ""
}

// 好友信息
type Friend struct {
	Name    string `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	Phone   string `protobuf:"bytes,2,opt,name=Phone" json:"Phone,omitempty"`
	Address string `protobuf:"bytes,3,opt,name=Address" json:"Address,omitempty"`
}

func (m *Friend) Reset()                    { *m = Friend{} }
func (m *Friend) String() string            { return proto.CompactTextString(m) }
func (*Friend) ProtoMessage()               {}
func (*Friend) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *Friend) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Friend) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Friend) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func init() {
	proto.RegisterType((*Job)(nil), "protocol.Job")
	proto.RegisterType((*Unit)(nil), "protocol.Unit")
	proto.RegisterType((*Schedule)(nil), "protocol.Schedule")
	proto.RegisterType((*ScheduleStaff)(nil), "protocol.scheduleStaff")
	proto.RegisterType((*Order)(nil), "protocol.Order")
	proto.RegisterType((*Friend)(nil), "protocol.Friend")
}

func init() { proto.RegisterFile("obj.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 525 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x53, 0xcd, 0x8e, 0xd3, 0x30,
	0x10, 0x96, 0x9b, 0xa4, 0x4d, 0xa6, 0x9b, 0x8b, 0xd5, 0x83, 0xb5, 0x42, 0x28, 0x44, 0x1c, 0x72,
	0xea, 0x01, 0x9e, 0xa0, 0xac, 0x58, 0x20, 0x2a, 0x3f, 0x72, 0x17, 0x71, 0x76, 0x1a, 0x57, 0x0d,
	0x6a, 0xe3, 0x2a, 0xf1, 0x1e, 0x7a, 0xe3, 0xc8, 0x85, 0x27, 0xe1, 0x29, 0x78, 0x04, 0xde, 0x08,
	0x79, 0x1c, 0x27, 0x6d, 0xc4, 0x9e, 0xda, 0xef, 0x1b, 0x65, 0x66, 0xbe, 0x6f, 0x3e, 0x43, 0xa4,
	0x8a, 0xef, 0xcb, 0x53, 0xa3, 0xb4, 0xa2, 0x21, 0xfe, 0x6c, 0xd5, 0x21, 0xfd, 0x3d, 0x01, 0x2f,
	0x57, 0x05, 0x7d, 0x0e, 0x90, 0xab, 0x62, 0x55, 0x96, 0x8d, 0x6c, 0x5b, 0x46, 0x12, 0x92, 0x45,
	0xfc, 0x82, 0xa1, 0x14, 0x7c, 0xae, 0x0e, 0x92, 0x4d, 0xb0, 0x82, 0xff, 0xe9, 0x02, 0x82, 0x3b,
	0xf5, 0x58, 0x6b, 0xe6, 0x25, 0x24, 0x8b, 0xb9, 0x05, 0x86, 0xe5, 0xa2, 0xac, 0x14, 0xf3, 0x13,
	0x92, 0xf9, 0xdc, 0x02, 0xca, 0x60, 0x76, 0xa7, 0x8e, 0x27, 0x51, 0x9f, 0xd9, 0x14, 0x5b, 0x38,
	0x48, 0x9f, 0x41, 0xf4, 0x50, 0x1d, 0xe5, 0x46, 0x8b, 0xe3, 0x89, 0xcd, 0x12, 0x92, 0x79, 0x7c,
	0x20, 0xe8, 0x2d, 0x84, 0xef, 0x45, 0xbb, 0x3a, 0x9d, 0x0e, 0x67, 0x16, 0x26, 0x24, 0x0b, 0x79,
	0x8f, 0xcd, 0xa4, 0x5c, 0x15, 0x1f, 0x4a, 0x16, 0x25, 0x24, 0x0b, 0xb8, 0x05, 0x46, 0xc9, 0xbd,
	0xd0, 0x7b, 0xd9, 0x98, 0xd5, 0x19, 0x58, 0x25, 0x03, 0x63, 0xe6, 0x7d, 0xdb, 0x57, 0x5a, 0xae,
	0xab, 0x56, 0xb3, 0x79, 0xe2, 0x65, 0x11, 0x1f, 0x88, 0xbe, 0xfa, 0x49, 0x1c, 0x25, 0xbb, 0xc1,
	0x8f, 0x07, 0x22, 0xfd, 0x49, 0xc0, 0xff, 0x5a, 0x57, 0xba, 0xb7, 0x83, 0x5c, 0xd8, 0x71, 0x21,
	0x71, 0x72, 0x2d, 0xf1, 0x16, 0xc2, 0xb5, 0xda, 0x0a, 0x5d, 0xa9, 0x1a, 0xbd, 0x8a, 0x78, 0x8f,
	0xcd, 0xc0, 0x8d, 0x16, 0x8d, 0x36, 0x92, 0xd1, 0xb2, 0x98, 0x0f, 0x84, 0xe9, 0xf9, 0xb6, 0x2e,
	0xb1, 0x16, 0x60, 0xcd, 0xc1, 0xf4, 0x2f, 0x81, 0x70, 0xb3, 0xdd, 0xcb, 0xf2, 0xd1, 0x8e, 0xce,
	0x55, 0x21, 0x8c, 0x60, 0xbb, 0x91, 0x83, 0xf4, 0x05, 0xf8, 0xb9, 0x2a, 0x5a, 0x36, 0x49, 0xbc,
	0x6c, 0xfe, 0x2a, 0x5e, 0xba, 0xc3, 0x2f, 0x73, 0x55, 0x70, 0x2c, 0x5d, 0x1f, 0xc0, 0x1b, 0x1f,
	0x20, 0x81, 0x79, 0x27, 0x03, 0x2d, 0xf1, 0xb1, 0xfd, 0x25, 0x45, 0x53, 0xb8, 0xe9, 0x20, 0x37,
	0x92, 0x70, 0x51, 0x8f, 0x5f, 0x71, 0xf4, 0x25, 0xc4, 0xc3, 0x09, 0x4c, 0xc2, 0x6c, 0x08, 0xae,
	0xc9, 0xf4, 0x17, 0x81, 0xb8, 0xed, 0x34, 0x6d, 0xb4, 0xd8, 0xed, 0x3a, 0x77, 0x76, 0xbb, 0xd5,
	0x20, 0x6d, 0x20, 0x9e, 0x0a, 0xa5, 0x5d, 0xc3, 0x73, 0xf1, 0x33, 0xf3, 0xfb, 0xa8, 0xf8, 0xb8,
	0xdc, 0x7f, 0xa3, 0x12, 0x8c, 0xa3, 0x92, 0xfe, 0x21, 0x10, 0x7c, 0x6e, 0x4a, 0xd9, 0x98, 0xef,
	0x1f, 0x44, 0xd1, 0x1d, 0x3c, 0xe6, 0x16, 0x5c, 0x3b, 0x37, 0x19, 0x3b, 0xb7, 0x80, 0xe0, 0xa3,
	0xaa, 0xe5, 0x19, 0x37, 0x21, 0xdc, 0x02, 0x73, 0x2a, 0x6c, 0xd9, 0xed, 0x12, 0x71, 0x07, 0x6d,
	0x7e, 0x6a, 0x2d, 0x6b, 0xdd, 0xad, 0xe2, 0xa0, 0xc9, 0xcf, 0x3b, 0xa9, 0x6d, 0xb3, 0x29, 0x36,
	0xeb, 0xf1, 0xe8, 0xe1, 0xce, 0xc6, 0x0f, 0x37, 0x5d, 0xc3, 0xf4, 0xbe, 0xa9, 0x64, 0x5d, 0x1a,
	0xb7, 0xf0, 0x84, 0x5d, 0x66, 0xf1, 0x76, 0x0b, 0x08, 0xbe, 0xec, 0x55, 0xed, 0x2c, 0xb4, 0xc0,
	0x6c, 0xe2, 0x1a, 0xda, 0xb8, 0x3a, 0xf8, 0xc6, 0xfb, 0x41, 0x48, 0x31, 0xc5, 0x10, 0xbd, 0xfe,
	0x17, 0x00, 0x00, 0xff, 0xff, 0x46, 0x20, 0xed, 0x2f, 0x51, 0x04, 0x00, 0x00,
}
