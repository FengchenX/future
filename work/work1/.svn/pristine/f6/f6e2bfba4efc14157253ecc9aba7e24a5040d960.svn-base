// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: status.proto

package protocol;

public final class StatusOuterClass {
  private StatusOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * Protobuf enum {@code protocol.Status}
   */
  public enum Status
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * 成功
     * </pre>
     *
     * <code>Success = 0;</code>
     */
    Success(0),
    /**
     * <pre>
     * 用户名或者密码错误
     * </pre>
     *
     * <code>UsernameOrPwdError = 10001;</code>
     */
    UsernameOrPwdError(10001),
    /**
     * <pre>
     * 用户名为空
     * </pre>
     *
     * <code>UsernameEmpty = 10002;</code>
     */
    UsernameEmpty(10002),
    /**
     * <pre>
     * 注册失败
     * </pre>
     *
     * <code>RegistError = 10003;</code>
     */
    RegistError(10003),
    /**
     * <pre>
     * 密码为空
     * </pre>
     *
     * <code>PwdEmpty = 10004;</code>
     */
    PwdEmpty(10004),
    /**
     * <pre>
     * 手机已经注册
     * </pre>
     *
     * <code>PhoneRegisted = 10005;</code>
     */
    PhoneRegisted(10005),
    /**
     * <pre>
     * 不是手机号码
     * </pre>
     *
     * <code>PhoneNumberError = 10006;</code>
     */
    PhoneNumberError(10006),
    /**
     * <pre>
     * 微信登录失败，请重新授权
     * </pre>
     *
     * <code>WechatLoingFailReAuth = 10007;</code>
     */
    WechatLoingFailReAuth(10007),
    /**
     * <pre>
     * 获取微信用户数据失败
     * </pre>
     *
     * <code>GetWechatUserInfoFail = 10008;</code>
     */
    GetWechatUserInfoFail(10008),
    /**
     * <pre>
     * 管理合约失败
     * </pre>
     *
     * <code>ManageContractFail = 20001;</code>
     */
    ManageContractFail(20001),
    /**
     * <pre>
     * 查询合约失败
     * </pre>
     *
     * <code>FindContractFail = 20002;</code>
     */
    FindContractFail(20002),
    /**
     * <pre>
     * 修改合约失败
     * </pre>
     *
     * <code>UndateContractFail = 20003;</code>
     */
    UndateContractFail(20003),
    /**
     * <pre>
     * 增加合约失败
     * </pre>
     *
     * <code>AddContractFail = 20004;</code>
     */
    AddContractFail(20004),
    /**
     * <pre>
     * 删除合约失败
     * </pre>
     *
     * <code>DelContractFail = 20005;</code>
     */
    DelContractFail(20005),
    /**
     * <pre>
     * 发布排班失败
     * </pre>
     *
     * <code>SetSchedueFail = 30001;</code>
     */
    SetSchedueFail(30001),
    /**
     * <pre>
     * 查询排班失败
     * </pre>
     *
     * <code>GetSchedueFail = 30002;</code>
     */
    GetSchedueFail(30002),
    /**
     * <pre>
     * 申请工作失败
     * </pre>
     *
     * <code>FindJobFail = 30003;</code>
     */
    FindJobFail(30003),
    /**
     * <pre>
     * 工作已被申请
     * </pre>
     *
     * <code>JobLimitFail = 30004;</code>
     */
    JobLimitFail(30004),
    /**
     * <pre>
     * 获取订单失败
     * </pre>
     *
     * <code>GetContentFail = 30005;</code>
     */
    GetContentFail(30005),
    /**
     * <pre>
     * 发布订单失败
     * </pre>
     *
     * <code>SetContentFail = 30006;</code>
     */
    SetContentFail(30006),
    /**
     * <pre>
     * 获取收入失败
     * </pre>
     *
     * <code>GetBalanceFail = 30007;</code>
     */
    GetBalanceFail(30007),
    /**
     * <pre>
     * 获取收入失败
     * </pre>
     *
     * <code>RoleNotFitFail = 30008;</code>
     */
    RoleNotFitFail(30008),
    /**
     * <pre>
     * 获取收入失败
     * </pre>
     *
     * <code>HasAppliedJobFail = 30009;</code>
     */
    HasAppliedJobFail(30009),
    /**
     * <pre>
     * 登录失败
     * </pre>
     *
     * <code>LoginFail = 30010;</code>
     */
    LoginFail(30010),
    /**
     * <pre>
     * 获取用户收入详情失败
     * </pre>
     *
     * <code>GetAllIncomeFail = 30011;</code>
     */
    GetAllIncomeFail(30011),
    /**
     * <pre>
     * 已经申请过
     * </pre>
     *
     * <code>AlreadyApply = 30012;</code>
     */
    AlreadyApply(30012),
    /**
     * <pre>
     * 申请人数已满
     * </pre>
     *
     * <code>ApplyFull = 30013;</code>
     */
    ApplyFull(30013),
    /**
     * <pre>
     * 信息不完整
     * </pre>
     *
     * <code>ReqNotFull = 30014;</code>
     */
    ReqNotFull(30014),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 成功
     * </pre>
     *
     * <code>Success = 0;</code>
     */
    public static final int Success_VALUE = 0;
    /**
     * <pre>
     * 用户名或者密码错误
     * </pre>
     *
     * <code>UsernameOrPwdError = 10001;</code>
     */
    public static final int UsernameOrPwdError_VALUE = 10001;
    /**
     * <pre>
     * 用户名为空
     * </pre>
     *
     * <code>UsernameEmpty = 10002;</code>
     */
    public static final int UsernameEmpty_VALUE = 10002;
    /**
     * <pre>
     * 注册失败
     * </pre>
     *
     * <code>RegistError = 10003;</code>
     */
    public static final int RegistError_VALUE = 10003;
    /**
     * <pre>
     * 密码为空
     * </pre>
     *
     * <code>PwdEmpty = 10004;</code>
     */
    public static final int PwdEmpty_VALUE = 10004;
    /**
     * <pre>
     * 手机已经注册
     * </pre>
     *
     * <code>PhoneRegisted = 10005;</code>
     */
    public static final int PhoneRegisted_VALUE = 10005;
    /**
     * <pre>
     * 不是手机号码
     * </pre>
     *
     * <code>PhoneNumberError = 10006;</code>
     */
    public static final int PhoneNumberError_VALUE = 10006;
    /**
     * <pre>
     * 微信登录失败，请重新授权
     * </pre>
     *
     * <code>WechatLoingFailReAuth = 10007;</code>
     */
    public static final int WechatLoingFailReAuth_VALUE = 10007;
    /**
     * <pre>
     * 获取微信用户数据失败
     * </pre>
     *
     * <code>GetWechatUserInfoFail = 10008;</code>
     */
    public static final int GetWechatUserInfoFail_VALUE = 10008;
    /**
     * <pre>
     * 管理合约失败
     * </pre>
     *
     * <code>ManageContractFail = 20001;</code>
     */
    public static final int ManageContractFail_VALUE = 20001;
    /**
     * <pre>
     * 查询合约失败
     * </pre>
     *
     * <code>FindContractFail = 20002;</code>
     */
    public static final int FindContractFail_VALUE = 20002;
    /**
     * <pre>
     * 修改合约失败
     * </pre>
     *
     * <code>UndateContractFail = 20003;</code>
     */
    public static final int UndateContractFail_VALUE = 20003;
    /**
     * <pre>
     * 增加合约失败
     * </pre>
     *
     * <code>AddContractFail = 20004;</code>
     */
    public static final int AddContractFail_VALUE = 20004;
    /**
     * <pre>
     * 删除合约失败
     * </pre>
     *
     * <code>DelContractFail = 20005;</code>
     */
    public static final int DelContractFail_VALUE = 20005;
    /**
     * <pre>
     * 发布排班失败
     * </pre>
     *
     * <code>SetSchedueFail = 30001;</code>
     */
    public static final int SetSchedueFail_VALUE = 30001;
    /**
     * <pre>
     * 查询排班失败
     * </pre>
     *
     * <code>GetSchedueFail = 30002;</code>
     */
    public static final int GetSchedueFail_VALUE = 30002;
    /**
     * <pre>
     * 申请工作失败
     * </pre>
     *
     * <code>FindJobFail = 30003;</code>
     */
    public static final int FindJobFail_VALUE = 30003;
    /**
     * <pre>
     * 工作已被申请
     * </pre>
     *
     * <code>JobLimitFail = 30004;</code>
     */
    public static final int JobLimitFail_VALUE = 30004;
    /**
     * <pre>
     * 获取订单失败
     * </pre>
     *
     * <code>GetContentFail = 30005;</code>
     */
    public static final int GetContentFail_VALUE = 30005;
    /**
     * <pre>
     * 发布订单失败
     * </pre>
     *
     * <code>SetContentFail = 30006;</code>
     */
    public static final int SetContentFail_VALUE = 30006;
    /**
     * <pre>
     * 获取收入失败
     * </pre>
     *
     * <code>GetBalanceFail = 30007;</code>
     */
    public static final int GetBalanceFail_VALUE = 30007;
    /**
     * <pre>
     * 获取收入失败
     * </pre>
     *
     * <code>RoleNotFitFail = 30008;</code>
     */
    public static final int RoleNotFitFail_VALUE = 30008;
    /**
     * <pre>
     * 获取收入失败
     * </pre>
     *
     * <code>HasAppliedJobFail = 30009;</code>
     */
    public static final int HasAppliedJobFail_VALUE = 30009;
    /**
     * <pre>
     * 登录失败
     * </pre>
     *
     * <code>LoginFail = 30010;</code>
     */
    public static final int LoginFail_VALUE = 30010;
    /**
     * <pre>
     * 获取用户收入详情失败
     * </pre>
     *
     * <code>GetAllIncomeFail = 30011;</code>
     */
    public static final int GetAllIncomeFail_VALUE = 30011;
    /**
     * <pre>
     * 已经申请过
     * </pre>
     *
     * <code>AlreadyApply = 30012;</code>
     */
    public static final int AlreadyApply_VALUE = 30012;
    /**
     * <pre>
     * 申请人数已满
     * </pre>
     *
     * <code>ApplyFull = 30013;</code>
     */
    public static final int ApplyFull_VALUE = 30013;
    /**
     * <pre>
     * 信息不完整
     * </pre>
     *
     * <code>ReqNotFull = 30014;</code>
     */
    public static final int ReqNotFull_VALUE = 30014;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Status valueOf(int value) {
      return forNumber(value);
    }

    public static Status forNumber(int value) {
      switch (value) {
        case 0: return Success;
        case 10001: return UsernameOrPwdError;
        case 10002: return UsernameEmpty;
        case 10003: return RegistError;
        case 10004: return PwdEmpty;
        case 10005: return PhoneRegisted;
        case 10006: return PhoneNumberError;
        case 10007: return WechatLoingFailReAuth;
        case 10008: return GetWechatUserInfoFail;
        case 20001: return ManageContractFail;
        case 20002: return FindContractFail;
        case 20003: return UndateContractFail;
        case 20004: return AddContractFail;
        case 20005: return DelContractFail;
        case 30001: return SetSchedueFail;
        case 30002: return GetSchedueFail;
        case 30003: return FindJobFail;
        case 30004: return JobLimitFail;
        case 30005: return GetContentFail;
        case 30006: return SetContentFail;
        case 30007: return GetBalanceFail;
        case 30008: return RoleNotFitFail;
        case 30009: return HasAppliedJobFail;
        case 30010: return LoginFail;
        case 30011: return GetAllIncomeFail;
        case 30012: return AlreadyApply;
        case 30013: return ApplyFull;
        case 30014: return ReqNotFull;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Status>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Status> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Status>() {
            public Status findValueByNumber(int number) {
              return Status.forNumber(number);
            }
          };

    private final int value;

    private Status(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:protocol.Status)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
